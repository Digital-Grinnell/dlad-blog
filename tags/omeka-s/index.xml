<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Omeka-S on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/omeka-s/</link><description>Recent content in Omeka-S on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 13 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/omeka-s/index.xml" rel="self" type="application/rss+xml"/><item><title>Moving Omeka-S Data to NFS</title><link>https://static.grinnell.edu/dlad-blog/posts/054-moving-omeka-s-data-to-nfs/</link><pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/054-moving-omeka-s-data-to-nfs/</guid><description>Grinnell&amp;rsquo;s dockerized version of Omeka-S has been running for several weeks now, and we recently ran out of disk space for object data on the host, a CentOS node we named DGDocker2. My posts 041, Configuring DGDocker2 and 042, My dockerized-server Config address the original configuration of DGDocker2 in detail.
Omeka-S is configured on DGDocker2 to reside in /opt/omeka-s-docker, and inside that directory is a subdirectory named volume. The portions of the application stack that deliver Omeka-S are configured largely in /opt/omeka-s-docker/docker-compose.</description></item><item><title>Configuring DGDocker2</title><link>https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/</link><pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/</guid><description>My mission today is to successfully migrate the images/containers/services chronicled in post 030, &amp;ldquo;Dockerized Omeka-S: Starting Over&amp;rdquo; to Docker-ready node dgdocker2 without compromising any of the services that already run there.
Pushing WMI Omeka-S to Production on dgdocker2 Grinnell&amp;rsquo;s dgdocker2 server, specifically dgdocker2.grinnell.edu with an IP address of 132.161.132.143, is a Docker-ready CentOS 7 node that&amp;rsquo;s currently supporting the following containers and configuration:
╭─root@dgdocker2 ~ ╰─# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES ef20d71ffea8 mcfatem/ohscribe &amp;#34;./boot.sh&amp;#34; 6 days ago Up 6 days 5000/tcp ohscribe b525f4670cd2 mariadb:latest &amp;#34;docker-entrypoint.</description></item><item><title>Omeka-S in Docksal</title><link>https://static.grinnell.edu/dlad-blog/posts/039-omeka-s-in-docksal/</link><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/039-omeka-s-in-docksal/</guid><description> Attention! The Docksal portion of this discussion DID NOT WORK PROPERLY so I&amp;rsquo;ve hidden it from public view. Don&amp;rsquo;t use this project with Docksal (fin commands) until further notice!</description></item><item><title>Dockerized Omeka-S: Starting Over</title><link>https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/</link><pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/</guid><description>Attention! The Docksal portion of this discussion DID NOT WORK PROPERLY so I&amp;rsquo;ve hidden it from public view. Don&amp;rsquo;t use this project with Docksal (fin commands) until further notice! I&amp;rsquo;ve created a new fork of dodeeric/omeka-s-docker at DigitalGrinnell/omeka-s-docker, and it introduces a new docker-compose.yml file for spinning Omeka-S up locally, but WITHOUT Docksal (due to problems with the integration originally documented here).
System requirements for local development of this project currently include:
Docker (Community Edition) Git Local Development and Testing If your workstation is able to run the aforementioned required components then the following steps can be used to launch and develop a local instance.</description></item></channel></rss>