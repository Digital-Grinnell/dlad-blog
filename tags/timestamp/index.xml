<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Timestamp on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/timestamp/</link><description>Recent content in Timestamp on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 12 Dec 2024 16:10:55 -0600</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/timestamp/index.xml" rel="self" type="application/rss+xml"/><item><title>`dg_timestamp` Google Sheet Apps Script</title><link>https://static.grinnell.edu/dlad-blog/posts/148-the-dg_timestamp-google-sheet-apps-script/</link><pubDate>Thu, 12 Dec 2024 16:10:55 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/148-the-dg_timestamp-google-sheet-apps-script/</guid><description>&lt;p>When a &amp;ldquo;new&amp;rdquo; &lt;em>Digital.Grinnell&lt;/em> or &lt;em>CollectionBuilder&lt;/em> object is cataloged for the first time, we need to give it a universally unique &lt;code>identifier&lt;/code>, probably as &lt;code>dc:identifier&lt;/code> or in &lt;em>CollectionBuilder&lt;/em> terms, an &lt;code>objectid&lt;/code>. One way to do that is to introduce a Google Sheets App Script in our metadata worksheet. The following is based on a modified form of the technique that&amp;rsquo;s documented in &lt;a href="https://www.youtube.com/watch?v=6ixt-b8T8h0">How To Create Static Timestamps in Google Sheets&lt;/a>.&lt;/p>
&lt;p>The aforementioned &lt;em>YouTube&lt;/em> video shows us how to add a Google Sheets App Script to a Google Sheet. In our case that App Script, named &lt;code>dg_timestamp&lt;/code>, looks like this:&lt;/p></description></item></channel></rss>