<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dc on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/dc/</link><description>Recent content in dc on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 18 Feb 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/dc/index.xml" rel="self" type="application/rss+xml"/><item><title>Problems with dc:identifier Elements</title><link>https://static.grinnell.edu/dlad-blog/posts/120-problems-with-dcidentifer-elements/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/120-problems-with-dcidentifer-elements/</guid><description>The addition of scholar profiles from LASIR, specifically the module&amp;rsquo;s introduction of /mods/identifier[@type='u1'] and /mods/identifier[@type='u2'] fields, has caused a few problems in Digital.Grinnell. Perhaps the most sinister of these&amp;hellip; these fields are transformed into DC or Dublin Core elements that wreak havoc with our OAI export and subsequent import into Primo VE.
OAI Exports While on the subject of OAI, it&amp;rsquo;s worth noting here that we can query to see the OAI that Digital.Grinnell exported by visiting a URL like: https://digital.</description></item><item><title>Digital.Grinnell Transforms</title><link>https://static.grinnell.edu/dlad-blog/posts/114-digital.grinnell-transforms/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/114-digital.grinnell-transforms/</guid><description>Digital.Grinnell relies on two different metadata XSL &amp;ldquo;transforms&amp;rdquo; to convert a cataloger&amp;rsquo;s MODS descriptive data into a modified MODS record and a corresponding Dublin Core record.
Self-Transforms The first transform type can be thought of as a &amp;ldquo;self-transform&amp;rdquo; because it accepts a MODS input and produces a modified MODS output; there is no change in schema, just changes in the data and its order.
MODS-to-DC Transforms All other transforms relevant to this document are &amp;ldquo;MODS-to-DC&amp;rdquo; transforms. They accept a valid MODS record and output a corresponding, valid record under the DC schema.</description></item></channel></rss>