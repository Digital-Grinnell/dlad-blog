<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TLS on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/tls/</link><description>Recent content in TLS on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 11 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/tls/index.xml" rel="self" type="application/rss+xml"/><item><title>New Host Config: Vulnerability Scan</title><link>https://static.grinnell.edu/dlad-blog/posts/081-new-host-config-vulnerability-scan/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/081-new-host-config-vulnerability-scan/</guid><description>&lt;p>Today I elected to run a vulnerability scan against our new instance of the &lt;code>docker-traefik2-acme-host&lt;/code> configuration that&amp;rsquo;s running on &lt;a href="https://static.grinnell.edu/whoami/">static.grinnell.edu&lt;/a>. The command I used, and the results, are posted below.&lt;/p>
&lt;pre tabindex="0">&lt;code>╭─islandora@dgdockerx ~
╰─$ /home/islandora/testssl.sh/testssl.sh static.grinnell.edu

###########################################################
 testssl.sh 3.0rc4 from https://testssl.sh/dev/

 This program is free software. Distribution and
 modification under GPLv2 permitted.
 USAGE w/o ANY WARRANTY. USE IT AT YOUR OWN RISK!

 Please file bugs @ https://testssl.sh/bugs/

###########################################################

 Using &amp;#34;OpenSSL 1.0.2-chacha (1.0.2k-dev)&amp;#34; [~183 ciphers]
 on dgdockerx:/home/islandora/testssl.sh/bin/openssl.Linux.x86_64
 (built: &amp;#34;Jan 18 17:12:17 2019&amp;#34;, platform: &amp;#34;linux-x86_64&amp;#34;)


 Start 2020-06-11 17:33:25 --&amp;gt;&amp;gt; 132.161.151.30:443 (static.grinnell.edu) &amp;lt;&amp;lt;--

 rDNS (132.161.151.30): vaf.grinnell.edu. rootstalk.grinnell.edu. static.grinnell.edu. rootstalk-static.grinnell.edu.
 Service detected: HTTP


 Testing protocols via sockets except NPN+ALPN

 SSLv2 not offered (OK)
 SSLv3 not offered (OK)
 TLS 1 offered
 TLS 1.1 offered
 TLS 1.2 offered (OK)
 TLS 1.3 offered (OK): final
 NPN/SPDY not offered
 ALPN/HTTP2 h2, http/1.1 (offered)

 Testing cipher categories

 NULL ciphers (no encryption) not offered (OK)
 Anonymous NULL Ciphers (no authentication) not offered (OK)
 Export ciphers (w/o ADH+NULL) not offered (OK)
 LOW: 64 Bit + DES, RC[2,4] (w/o export) not offered (OK)
 Triple DES Ciphers / IDEA offered (NOT ok)
 Average: SEED + 128+256 Bit CBC ciphers offered
 Strong encryption (AEAD ciphers) offered (OK)


 Testing robust (perfect) forward secrecy, (P)FS -- omitting Null Authentication/Encryption, 3DES, RC4

 PFS is offered (OK) TLS_AES_256_GCM_SHA384 TLS_CHACHA20_POLY1305_SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES256-SHA
 ECDHE-RSA-CHACHA20-POLY1305 TLS_AES_128_GCM_SHA256 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-SHA
 Elliptic curves offered: prime256v1 secp384r1 secp521r1 X25519


 Testing server preferences

 Has server cipher order? yes (OK) -- only for &amp;lt; TLS 1.3
 Negotiated protocol TLSv1.3
 Negotiated cipher TLS_AES_256_GCM_SHA384, 253 bit ECDH (X25519)
 Cipher order
 TLSv1: ECDHE-RSA-AES256-SHA AES256-SHA ECDHE-RSA-AES128-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA
 TLSv1.1: ECDHE-RSA-AES256-SHA AES256-SHA ECDHE-RSA-AES128-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA
 TLSv1.2: ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES256-SHA ECDHE-RSA-CHACHA20-POLY1305 AES256-GCM-SHA384 AES256-SHA
 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-SHA AES128-GCM-SHA256 AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA
 TLSv1.3: TLS_AES_256_GCM_SHA384 TLS_CHACHA20_POLY1305_SHA256 TLS_AES_128_GCM_SHA256


 Testing server defaults (Server Hello)

 TLS extensions (standard) &amp;#34;session ticket/#35&amp;#34; &amp;#34;renegotiation info/#65281&amp;#34; &amp;#34;EC point formats/#11&amp;#34; &amp;#34;supported versions/#43&amp;#34;
 &amp;#34;key share/#51&amp;#34; &amp;#34;application layer protocol negotiation/#16&amp;#34;
 Session Ticket RFC 5077 hint no -- no lifetime advertised
 SSL Session ID support yes
 Session Resumption Tickets no, ID: no
 TLS clock skew Random values, no fingerprinting possible
 Signature Algorithm SHA256 with RSA
 Server key size RSA 2048 bits
 Server key usage Digital Signature, Key Encipherment
 Server extended key usage TLS Web Server Authentication, TLS Web Client Authentication
 Serial / Fingerprints 035B28222F66FCE82AB86834D316C249EDB3 / SHA1 385FFF215983EFA46B2CAFCA6768356348475307
 SHA256 F2A91B6B1BE83479550EE679AEA78B9551CA00D1D5BC0DA4B80D1FA1B4E3ED25
 Common Name (CN) static.grinnell.edu (CN in response to request w/o SNI: TRAEFIK DEFAULT CERT)
 subjectAltName (SAN) static.grinnell.edu
 Issuer Let&amp;#39;s Encrypt Authority X3 (Let&amp;#39;s Encrypt from US)
 Trust (hostname) Ok via SAN and CN (SNI mandatory)
 Chain of trust NOT ok (chain incomplete)
 EV cert (experimental) no
 &amp;#34;eTLS&amp;#34; (visibility info) not present
 Certificate Validity (UTC) 88 &amp;gt;= 30 days (2020-06-10 11:51 --&amp;gt; 2020-09-08 11:51)
 # of certificates provided 1
 Certificate Revocation List --
 OCSP URI http://ocsp.int-x3.letsencrypt.org
 OCSP stapling not offered
 OCSP must staple extension --
 DNS CAA RR (experimental) not offered
 Certificate Transparency yes (certificate extension)


 Testing HTTP header response @ &amp;#34;/&amp;#34;

 HTTP Status Code 200 OK
 HTTP clock skew 0 sec from localtime
 Strict Transport Security not offered
 Public Key Pinning --
 Server banner nginx/1.17.10
 Application banner --
 Cookie(s) (none issued at &amp;#34;/&amp;#34;)
 Security headers --
 Reverse Proxy banner --


 Testing vulnerabilities

 Heartbleed (CVE-2014-0160) not vulnerable (OK), no heartbeat extension
 CCS (CVE-2014-0224) not vulnerable (OK)
 Ticketbleed (CVE-2016-9244), experiment. not vulnerable (OK), reply empty
 ROBOT not vulnerable (OK)
 Secure Renegotiation (CVE-2009-3555) not vulnerable (OK)
 Secure Client-Initiated Renegotiation not vulnerable (OK)
 CRIME, TLS (CVE-2012-4929) not vulnerable (OK)
 BREACH (CVE-2013-3587) no HTTP compression (OK) - only supplied &amp;#34;/&amp;#34; tested
 POODLE, SSL (CVE-2014-3566) not vulnerable (OK)
 TLS_FALLBACK_SCSV (RFC 7507) Downgrade attack prevention supported (OK)
 SWEET32 (CVE-2016-2183, CVE-2016-6329) VULNERABLE, uses 64 bit block ciphers
 FREAK (CVE-2015-0204) not vulnerable (OK)
 DROWN (CVE-2016-0800, CVE-2016-0703) not vulnerable on this host and port (OK)
 make sure you don&amp;#39;t use this certificate elsewhere with SSLv2 enabled services
 https://censys.io/ipv4?q=F2A91B6B1BE83479550EE679AEA78B9551CA00D1D5BC0DA4B80D1FA1B4E3ED25 could help you to find out
 LOGJAM (CVE-2015-4000), experimental not vulnerable (OK): no DH EXPORT ciphers, no DH key detected with &amp;lt;= TLS 1.2
 BEAST (CVE-2011-3389) TLS1: ECDHE-RSA-AES256-SHA AES256-SHA ECDHE-RSA-AES128-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA
 DES-CBC3-SHA
 VULNERABLE -- but also supports higher protocols TLSv1.1 TLSv1.2 (likely mitigated)
 LUCKY13 (CVE-2013-0169), experimental potentially VULNERABLE, uses cipher block chaining (CBC) ciphers with TLS. Check patches
 RC4 (CVE-2013-2566, CVE-2015-2808) no RC4 ciphers detected (OK)


 Testing 370 ciphers via OpenSSL plus sockets against the server, ordered by encryption strength

Hexcode Cipher Suite Name (OpenSSL) KeyExch. Encryption Bits Cipher Suite Name (IANA/RFC)
-----------------------------------------------------------------------------------------------------------------------------
 x1302 TLS_AES_256_GCM_SHA384 ECDH 253 AESGCM 256 TLS_AES_256_GCM_SHA384
 x1303 TLS_CHACHA20_POLY1305_SHA256 ECDH 253 ChaCha20 256 TLS_CHACHA20_POLY1305_SHA256
 xc030 ECDHE-RSA-AES256-GCM-SHA384 ECDH 521 AESGCM 256 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
 xc014 ECDHE-RSA-AES256-SHA ECDH 521 AES 256 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
 xcca8 ECDHE-RSA-CHACHA20-POLY1305 ECDH 521 ChaCha20 256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
 x9d AES256-GCM-SHA384 RSA AESGCM 256 TLS_RSA_WITH_AES_256_GCM_SHA384
 x35 AES256-SHA RSA AES 256 TLS_RSA_WITH_AES_256_CBC_SHA
 x1301 TLS_AES_128_GCM_SHA256 ECDH 253 AESGCM 128 TLS_AES_128_GCM_SHA256
 xc02f ECDHE-RSA-AES128-GCM-SHA256 ECDH 521 AESGCM 128 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
 xc013 ECDHE-RSA-AES128-SHA ECDH 521 AES 128 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
 x9c AES128-GCM-SHA256 RSA AESGCM 128 TLS_RSA_WITH_AES_128_GCM_SHA256
 x2f AES128-SHA RSA AES 128 TLS_RSA_WITH_AES_128_CBC_SHA
 xc012 ECDHE-RSA-DES-CBC3-SHA ECDH 521 3DES 168 TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
 x0a DES-CBC3-SHA RSA 3DES 168 TLS_RSA_WITH_3DES_EDE_CBC_SHA


 Running client simulations (HTTP) via sockets

 Android 4.2.2 TLSv1.0 ECDHE-RSA-AES256-SHA, 521 bit ECDH (P-521)
 Android 4.4.2 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 521 bit ECDH (P-521)
 Android 5.0.0 TLSv1.2 ECDHE-RSA-AES256-SHA, 521 bit ECDH (P-521)
 Android 6.0 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 256 bit ECDH (P-256)
 Android 7.0 TLSv1.2 ECDHE-RSA-CHACHA20-POLY1305, 253 bit ECDH (X25519)
 Chrome 65 Win 7 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 253 bit ECDH (X25519)
 Chrome 70 Win 10 TLSv1.3 TLS_AES_128_GCM_SHA256, 253 bit ECDH (X25519)
 Firefox 59 Win 7 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 253 bit ECDH (X25519)
 Firefox 62 Win 7 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 253 bit ECDH (X25519)
 IE 6 XP No connection
 IE 7 Vista TLSv1.0 AES128-SHA, No FS
 IE 8 Win 7 TLSv1.0 AES128-SHA, No FS
 IE 8 XP TLSv1.0 DES-CBC3-SHA, No FS
 IE 11 Win 7 TLSv1.2 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 IE 11 Win 8.1 TLSv1.2 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 IE 11 Win Phone 8.1 TLSv1.2 AES128-SHA, No FS
 IE 11 Win 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Edge 13 Win 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Edge 13 Win Phone 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Edge 15 Win 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 253 bit ECDH (X25519)
 Safari 9 iOS 9 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Safari 9 OS X 10.11 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Safari 10 OS X 10.12 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Apple ATS 9 iOS 9 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Tor 17.0.9 Win 7 TLSv1.0 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 Java 6u45 No connection
 Java 7u25 TLSv1.0 ECDHE-RSA-AES128-SHA, 256 bit ECDH (P-256)
 Java 8u161 TLSv1.2 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 Java 9.0.4 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 OpenSSL 1.0.1l TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 521 bit ECDH (P-521)
 OpenSSL 1.0.2e TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)

 Done 2020-06-11 17:34:48 [ 85s] --&amp;gt;&amp;gt; 132.161.151.30:443 (static.grinnell.edu) &amp;lt;&amp;lt;--
&lt;/code>&lt;/pre>&lt;h2 id="controling-tls-ciphers">Controling TLS Ciphers&lt;/h2>
&lt;p>In previous server configs that used &lt;em>Traefik v1.x&lt;/em> I was able to eliminate some potential vulnerabilities by removing old, weak ciphers. In that old environment I used a few &lt;em>command:&lt;/em> options in the &lt;code>docker-compose.yml&lt;/code> file along with a declaration of stronger ciphers in a &lt;code>traefik.toml&lt;/code> file. That config change is documented in &lt;a href="https://static.grinnell.edu/dlad-blog/en/posts/005-removing-traefik-weak-ciphers">Removing Traefik Weak Ciphers&lt;/a>.&lt;/p></description></item></channel></rss>