<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Replace on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/replace/</link><description>Recent content in Replace on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 08 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/replace/index.xml" rel="self" type="application/rss+xml"/><item><title>VSCode Find and Replace Using `regex`</title><link>https://static.grinnell.edu/dlad-blog/posts/128-vscode-find-and-replace-using-regex/</link><pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/128-vscode-find-and-replace-using-regex/</guid><description>&lt;p>This morning I needed to do some bulk &amp;ldquo;find and replace&amp;rdquo; operations in most of my &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a> content. My first thought was to write and run a little Python script, but then I wondered what &lt;em>VSCode&lt;/em> might bring to the table. Plenty, it brought plenty!&lt;/p>
&lt;p>To keep this post as brief as possible, I&amp;rsquo;m simply going to reference an instructional video that I created earlier: &lt;a href="https://rootstalk.blob.core.windows.net/documentation/VSCode-Find-and-Replace.mp4" target="_blank">VSCode-Find-and-Replace.mp4&lt;/a>.&lt;/p>
&lt;p>A list of some links mentioned in the video is provided here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linuxpip.org/vscode-regex-replace/">https://linuxpip.org/vscode-regex-replace/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f">https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.educative.io/answers/regex-search-and-replace-with-vs-code">https://www.educative.io/answers/regex-search-and-replace-with-vs-code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=xMhKstbdr3k">https://www.youtube.com/watch?v=xMhKstbdr3k&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/">https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re looking specifically to install and use the &lt;code>regex-previewer&lt;/code> extension check out:&lt;/p></description></item><item><title>Exporting, Editing &amp; Replacing MODS Datastreams: Updated Technical Details</title><link>https://static.grinnell.edu/dlad-blog/posts/115-exporting-editing-replacing-mods-datastreams-updated-technical-details/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/115-exporting-editing-replacing-mods-datastreams-updated-technical-details/</guid><description>&lt;p>

&lt;div class="annotation">
&lt;b>Attention:&lt;/b> On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new _Drush_ command: _islandora\_mods_post\_processing_, an addition to my previous work in [islandora_mods_via_twig](https://github.com/DigitalGrinnell/islandora_mods_via_twig). See my new post, [Islandora MODS Post Processing](/posts/075-islandora-mods-post-processing/) for complete details.
&lt;/div>

&lt;/p>
&lt;p>

&lt;div class="annotation">
&lt;b>Attention:&lt;/b> In November 2021 a recommended seventh step was added to this workflow. That addition is documented in the final section of this document.
&lt;/div>

&lt;/p>
&lt;h1 id="a-7-step-workflow">A 7-Step Workflow&lt;/h1>
&lt;p>This document is follow-up, with technical details, to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing &amp;amp; Replacing MODS Datastreams&lt;/a>, post 069, in my blog. In case you missed it, the aforementioned post was written specifically for metadata editors working on the 2020 &lt;em>Grinnell College Libraries&lt;/em> review of &lt;em>Digital Grinnell&lt;/em> MODS metadata.&lt;/p></description></item><item><title>Exporting, Editing, &amp; Replacing MODS Datastreams: Technical Details</title><link>https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>. See my new post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing/">Islandora MODS Post Processing&lt;/a> for complete details.&lt;/p>&lt;/blockquote>
&lt;h1 id="a-5-step-workflow">A 5-Step Workflow&lt;/h1>
&lt;p>This document is follow-up, with technical details, to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams&lt;/a>, post 069, in my blog. In case you missed it, the aforementioned post was written specifically for metadata editors working on the 2020 &lt;em>Grinnell College Libraries&lt;/em> review of &lt;em>Digital Grinnell&lt;/em> MODS metadata.&lt;/p></description></item><item><title>Exporting, Editing, &amp; Replacing MODS Datastreams</title><link>https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>. See my new post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing">Islandora MODS Post Processing&lt;/a> for complete details.&lt;/p>&lt;/blockquote>
&lt;p>The transition to distance learning, social distancing, and more remote work at &lt;em>Grinnell College&lt;/em> in the wake of the &lt;em>COVID-19&lt;/em> pandemic may afford &lt;em>GC Libraries&lt;/em> an opportunity to do some overdue and necessary metadata cleaning in &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a>.&lt;/p>
&lt;h1 id="a-5-step-workflow">A 5-Step Workflow&lt;/h1>
&lt;p>This turned out to be a much more difficult undertaking than I imagined, but as of mid-April, 2020, I have a 5-step workflow that actually works. This post will introduce all five steps, but only provides details for Step 3, &lt;a href="#editing-a-modstsv-file">Editing a MODS TSV File&lt;/a>, the portion that metadata editors need to be most aware of. All technical details, as well as steps 1, 2, 4 and 5, will be addressed in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams: Technical Details&lt;/a>.&lt;/p></description></item></channel></rss>