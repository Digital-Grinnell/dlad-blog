<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Portainer on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/portainer/</link><description>Recent content in Portainer on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 27 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/portainer/index.xml" rel="self" type="application/rss+xml"/><item><title>Dockerized Traefik Host Using ACME DNS-01 Challenge</title><link>https://static.grinnell.edu/dlad-blog/posts/071-dockerized-traefik-using-acme-dns-01/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/071-dockerized-traefik-using-acme-dns-01/</guid><description>&lt;p>This post builds on &lt;a href="https://dlad.summittdweller.com/en/posts/042-my-dockerized-server-config/">My dockerized-server Config&lt;/a> and attempts to change what was a problematic &lt;a href="https://docs.traefik.io/https/acme/#httpchallenge">ACME HTTP-01 or httpChallenge&lt;/a> in &lt;a href="https://traefik.io">Traefik&lt;/a> and &lt;a href="https://letsencrypt.org">Let&amp;rsquo;s Encrypt&lt;/a> to an &lt;a href="https://docs.traefik.io/https/acme/#dnschallenge">ACME DNS-01 or dnsChallenge&lt;/a>. The problem with the old &lt;em>HTTP-01&lt;/em> or &lt;em>httpChallenge&lt;/em> is that it requires the creation of a valid and widely accessible &amp;ldquo;A&amp;rdquo; record in our DNS &lt;em>before&lt;/em> the creation of a cert; the record has to be in place so that the &lt;em>Let&amp;rsquo;s Encrypt&lt;/em> CA-server can find it to confirm that the request is valid. However, doing this puts the cart-before-the-horse, so-to-speak, since we like to have a valid cert in place &lt;em>before&lt;/em> we add a new DNS record.&lt;/p></description></item><item><title>My dockerized-server Config</title><link>https://static.grinnell.edu/dlad-blog/posts/042-my-dockerized-server-config/</link><pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/042-my-dockerized-server-config/</guid><description>&lt;p>This post picks up from where &lt;a href="https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2">Configuring DGDocker2&lt;/a> left off. In it I will establish a workflow to setup a &amp;ldquo;Dockerized&amp;rdquo; server complete with &lt;em>Traefik&lt;/em>, &lt;em>Portainer&lt;/em>, and &lt;em>Who Am I&lt;/em>. It should be relatively easy to add additional non-static services to any server that is initially configured using this package. For &amp;ldquo;static&amp;rdquo; servers have a look at post &lt;a href="https://static.grinnell.edu/dlad-blog/posts/008-docker-bootstrap-workflow/">008 docker-bootstrap Workflow &lt;/a>.&lt;/p>
&lt;h2 id="capture-as-a-project">Capture As a Project&lt;/h2>
&lt;p>Picking up from the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2">Configuring DGDocker2&lt;/a>, my first step on the &lt;em>dgdocker2&lt;/em> server was to move everything into a single subdirectory of &lt;em>/opt&lt;/em>; I called the new directory &lt;em>dockerized-server&lt;/em>, like so:&lt;/p></description></item><item><title>Configuring DGDocker2</title><link>https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/</link><pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/</guid><description>&lt;p>My mission today is to successfully migrate the images/containers/services chronicled in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/">post 030, &amp;ldquo;Dockerized Omeka-S: Starting Over&amp;rdquo;&lt;/a> to Docker-ready node &lt;em>dgdocker2&lt;/em> without compromising any of the services that already run there.&lt;/p>
&lt;h2 id="pushing-wmi-omeka-s-to-production-on-dgdocker2">Pushing WMI Omeka-S to Production on &lt;em>dgdocker2&lt;/em>&lt;/h2>
&lt;p>Grinnell&amp;rsquo;s &lt;em>dgdocker2&lt;/em> server, specifically &lt;em>dgdocker2.grinnell.edu&lt;/em> with an IP address of 132.161.132.143, is a Docker-ready CentOS 7 node that&amp;rsquo;s currently supporting the following containers and configuration:&lt;/p>
&lt;pre tabindex="0">&lt;code>╭─root@dgdocker2 ~
╰─# docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
ef20d71ffea8 mcfatem/ohscribe &amp;#34;./boot.sh&amp;#34; 6 days ago Up 6 days 5000/tcp ohscribe
b525f4670cd2 mariadb:latest &amp;#34;docker-entrypoint.s…&amp;#34; 2 weeks ago Up 2 weeks 3306/tcp omekasdocker_mariadb_1
7f107a24c204 traefik:latest &amp;#34;/traefik --docker -…&amp;#34; 2 weeks ago Up 2 weeks 0.0.0.0:80-&amp;gt;80/tcp, 0.0.0.0:443-&amp;gt;443/tcp, 0.0.0.0:8080-&amp;gt;8080/tcp traefik_proxy
9282ab53ecc4 portainer/portainer:latest &amp;#34;/portainer --admin-…&amp;#34; 5 weeks ago Up 5 weeks 0.0.0.0:9000-&amp;gt;9000/tcp portainer
60ce06301101 dodeeric/omeka-s:latest &amp;#34;docker-php-entrypoi…&amp;#34; 7 weeks ago Up 7 weeks 80/tcp omekasdocker_omeka_1
54bd82694f3c phpmyadmin/phpmyadmin:latest &amp;#34;/docker-entrypoint.…&amp;#34; 2 months ago Up 2 months 80/tcp omekasdocker_pma_1
0cd019c5456e emilevauge/whoami &amp;#34;/whoamI&amp;#34; 2 months ago Up 2 months 80/tcp omekasdocker_whoami_1
7b3d4961ec21 v2tec/watchtower &amp;#34;/watchtower&amp;#34; 2 months ago Up 2 months watchtower
&lt;/code>&lt;/pre>&lt;p>Grinnell&amp;rsquo;s DNS is configured with the following addresses pointed to &lt;em>dgdocker2&lt;/em>:&lt;/p></description></item></channel></rss>