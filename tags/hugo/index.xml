<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hugo on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/hugo/</link><description>Recent content in Hugo on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 30 May 2023 11:43:01 -0500</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>NPM to Rule Them All</title><link>https://static.grinnell.edu/dlad-blog/posts/145-npm-to-rule-them-all/</link><pubDate>Tue, 30 May 2023 11:43:01 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/145-npm-to-rule-them-all/</guid><description>&lt;h1 id="npm-for-the-win-everywhere">NPM for the Win, EVERYWHERE&lt;/h1>
&lt;p>My first experiences with the EVERYWHERE component of this subject involved &lt;a href="https://blog.summittdweller.com">my personal blog&lt;/a> and then &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a>. So, I&amp;rsquo;m not going to elaborate on this here, I&amp;rsquo;ll just provide a link to specifics documented in my personal blog:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.summittdweller.com/wrap-everything-in-npm/">https://blog.summittdweller.com/wrap-everything-in-npm/&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>That&amp;rsquo;s all folks&amp;hellip; use the &lt;strike>Force&lt;/strike> links, Luke!&lt;/p></description></item><item><title>A Pagefind Problem?</title><link>https://static.grinnell.edu/dlad-blog/posts/144-a-pagefind-problem/</link><pubDate>Wed, 10 May 2023 08:22:00 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/144-a-pagefind-problem/</guid><description>&lt;h1 id="not-just-a-pagefind-issue">Not Just a Pagefind Issue&lt;/h1>
&lt;p>Take note of the question mark at the end of the title, otherwise it could be somewhat misleading. This is not really a problem with Pagefind or Hugo, but one with cloud deployment of static apps, particularly as an Azure Static Web App or DigitalOcean static site.&lt;/p>
&lt;h1 id="the-nutshell">The Nutshell&lt;/h1>
&lt;p>As you may know from &lt;a href="https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/">post 143&lt;/a>, I have successfully installed and configured &lt;a href="https://pagefind.app/">Pagefind&lt;/a> in &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a>, but thus far it only works locally. When I try to deploy Pagefind to the cloud, specifically as an Azure Static Web App, I can&amp;rsquo;t make it work because there&amp;rsquo;s no apparent way to invoke the necessary &lt;code>npx pagefind...&lt;/code> command AFTER Hugo compiles the site, but BEFORE the site gets deployed. Azure leverages GitHub Actions to build Hugo sites, but that process also involves some custom/proprietary Azure scripts. Therein lies the problem.&lt;/p></description></item><item><title>Adding a Custom 404 Page in Hugo</title><link>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</link><pubDate>Thu, 16 Feb 2023 13:07:31 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</guid><description>&lt;p>The task &lt;em>du jour&lt;/em> is to begin, and perhaps complete, the process of adding a custom 404 page to &lt;em>Rootstalk&lt;/em>.&lt;/p>
&lt;p>Thus far I&amp;rsquo;ve found a couple of promising resources to guide the effort:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/templates/404/">Custom 404 Page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://moonbooth.com/hugo/custom-404/">Custom 404 pages in Hugo done right&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In particular, I&amp;rsquo;m focusing on &amp;ldquo;Option 2&amp;rdquo; in the &amp;ldquo;&amp;hellip;done right&amp;rdquo; document, and the &amp;ldquo;Azure Static Web App&amp;rdquo; portion of the first document.&lt;/p>
&lt;h2 id="need-a-new-azure-api-key">Need a New Azure API Key?&lt;/h2>
&lt;p>Early in this journey I found that I could not deploy changes to &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net">https://thankful-flower-0a2308810.1.azurestaticapps.net&lt;/a> from the &lt;code>develop&lt;/code> branch of the code because of an invalid or missing API key. I turned to &lt;a href="https://learn.microsoft.com/en-us/azure/static-web-apps/deployment-token-management">Reset deployment tokens in Azure Static Web Apps&lt;/a> to try and remedy that.&lt;/p></description></item><item><title>Hugo: Attachments and Bundles</title><link>https://static.grinnell.edu/dlad-blog/posts/136-hugo-attachments-and-bundles/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/136-hugo-attachments-and-bundles/</guid><description>&lt;p>This post was written as follow-up to my &lt;a href="../135-migrating-catpaw-development-to-azure/">previous post&lt;/a> where I implemented a custom Hugo shortcode, &lt;code>attachments.html&lt;/code>, documented in &lt;a href="#attachmentshtml">attachments.html&lt;/a> below. The implementation of this shortcode required a Hugo &lt;a href="https://gohugo.io/content-management/page-bundles/">Page Bundles&lt;/a> content structure and the transition to such a structure is documented below in &lt;a href="#page-bundles-structure">Page Bundles Structure&lt;/a>.&lt;/p>
&lt;h2 id="attachmentshtml">attachments.html&lt;/h2>
&lt;p>This shortcode, &lt;code>attachments.html&lt;/code>, was lifted from &lt;a href="http://oostens.me/posts/hugo-attachment-shortcode/">Hugo Attachment shortcode&lt;/a>, a blog post by &lt;a href="http://oostens.me/">Nelis Oostens&lt;/a>. Successfull implementation of this shortcode one minor modification (my theme did not have a referenced partial) and conversion of my &lt;code>content/posts&lt;/code> from individual &lt;em>Markdown&lt;/em> (.md) files to a to &lt;a href="#page-bundles-structure">Page Bundles Structure&lt;/a>, as described below.&lt;/p></description></item><item><title>Blog Migration Details</title><link>https://static.grinnell.edu/dlad-blog/posts/113-blog-migration-details/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/113-blog-migration-details/</guid><description>&lt;h1 id="the-grinnell-college-digital-library-application-developers-blog">The Grinnell College Digital Library Application Developer&amp;rsquo;s Blog&lt;/h1>

&lt;div class="annotation">&lt;p>I&amp;rsquo;m getting really lazy in my old age, so what I&amp;rsquo;ve posted here is just the meager &lt;code>README.md&lt;/code> file from my blog&amp;rsquo;s new &lt;em>GitHub&lt;/em> repo.&lt;/p>
&lt;/div>

&lt;p>This project, my Grinnell College &lt;a href="https://static.grinnell.edu/dlad-blog/">Digital Library Application Developer&amp;rsquo;s blog&lt;/a>, is no longer a &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/">Docker &amp;ldquo;Multi-Stage&amp;rdquo; build&lt;/a>.&lt;/p>
&lt;h2 id="github-pages">GitHub Pages&lt;/h2>
&lt;p>I successfully moved this blog to &lt;em>GitHub Pages&lt;/em> in October 2021, after creating instances of it on &lt;em>DigitalOcean&lt;/em> and &lt;em>Azure&lt;/em>. &lt;em>GH Pages&lt;/em>, specifically &lt;a href="https://static.grinnell.edu/dlad-blog/">https://static.grinnell.edu/dlad-blog/&lt;/a> seems like the right home for it, finally.&lt;/p></description></item><item><title>Moving Static Sites to GitHub Pages</title><link>https://static.grinnell.edu/dlad-blog/posts/112-moving-static-sites-to-github-pages/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/112-moving-static-sites-to-github-pages/</guid><description>&lt;h1 id="pertinent-resources">Pertinent Resources&lt;/h1>
&lt;p>This section simply tabluates the posts and documentation used to effect migration of all sites from the &lt;em>Grinnell College&lt;/em> &lt;code>static&lt;/code> host to &lt;em>GitHub Pages&lt;/em>.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Resource&lt;/th>
 &lt;th>Address&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Hugo: Host on GitHub&lt;/td>
 &lt;td>&lt;a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/">https://gohugo.io/hosting-and-deployment/hosting-on-github/&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub: Getting started with GitHub Pages&lt;/td>
 &lt;td>&lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages">https://docs.github.com/en/pages/getting-started-with-github-pages&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub: Creating a GitHub Pages site&lt;/td>
 &lt;td>&lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site">https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub: Managing a custom domain for your GitHub Pages site&lt;/td>
 &lt;td>&lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-a-subdomain">https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-a-subdomain&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="customizations">Customizations&lt;/h1>
&lt;h2 id="do-not-set-publishdir--docs">Do NOT Set &lt;code>publishDir = &amp;quot;docs&amp;quot;&lt;/code>&lt;/h2>
&lt;p>Do &lt;em>NOT&lt;/em> change the &lt;code>publishDir&lt;/code> parameter in your configuration, if you even have one! The default &lt;code>public&lt;/code> setting is correct.&lt;/p></description></item><item><title>Collaborating on Hugo Site Development</title><link>https://static.grinnell.edu/dlad-blog/posts/095-collaborating-on-hugo-site-development/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/095-collaborating-on-hugo-site-development/</guid><description>&lt;div class="original">&lt;p>I&amp;rsquo;ve nearly completed migration of all &lt;em>Grinnell College Libraries&amp;rsquo;&lt;/em> static sites to &lt;em>Azure&lt;/em> and I&amp;rsquo;m updating this post to reflect that move. Wherever possible I&amp;rsquo;ll strike-through outdated information &lt;strike>like this&lt;/strike>, and replace it with updated info.&lt;/p>
&lt;/div>

&lt;p>This post will instruct the reader to install necessary tools and engage the workflow I now use to develop and maintain a handful of &lt;em>Hugo&lt;/em> static websites. The list of sites now includes both professional, those owned and operated by &lt;a href="https://grinnell.edu">Grinnell College&lt;/a>, as well as &amp;ldquo;personal&amp;rdquo; sites that I develop, maintain and host myself.&lt;/p></description></item><item><title>Scheduled Updates for a Hugo Static Site</title><link>https://static.grinnell.edu/dlad-blog/posts/086-scheduled-updates-for-a-hugo-static-site/</link><pubDate>Sat, 18 Jul 2020 16:56:04 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/086-scheduled-updates-for-a-hugo-static-site/</guid><description>&lt;p>A few months ago I migrated a site, &lt;a href="https://compassroseband.net">The Compass Rose Band&lt;/a>, from Drupal to Hugo for my Uncle. Since then I have been maintaining the site, adding and removing dates, and updating the site about every other week. With the passage of time events on the site &amp;ldquo;automatically&amp;rdquo; move from &amp;ldquo;upcoming&amp;rdquo; to &amp;ldquo;past&amp;rdquo;, but since it is a &amp;ldquo;static&amp;rdquo; site, that only happens when I recompile and rebuild the site. So I needed to automate builds.&lt;/p>
&lt;p>I tried a few different ideas I&amp;rsquo;d heard about, including &lt;a href="http://crontab.org">crontab&lt;/a>, but on my Mac desktop I ended up settling on an &lt;a href="https://support.apple.com/guide/automator/welcome/mac">Automator&lt;/a> workflow tied to a &lt;em>Calendar&lt;/em> event.&lt;/p></description></item><item><title>New Blog Style and Features</title><link>https://static.grinnell.edu/dlad-blog/posts/067-new-blog-style-and-features/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/067-new-blog-style-and-features/</guid><description>&lt;p>Welcome to my new blog theme/style with new features. All of the content, aka &amp;lsquo;posts&amp;rsquo;, from my old blog have been moved here, but there are still lots of remnants of the new theme, &lt;a href="https://themes.gohugo.io/theme/hugo-theme-zzo/en">Zzo&lt;/a>, lurking here. Please be patient with this new format while I work to fully implement all the features that this setup provides.&lt;/p>
&lt;p>Also, thank you, Mackenzie. My daughter played an important role in helping me with this transition.&lt;/p>
&lt;p>And it&amp;rsquo;s time to do some real work&amp;hellip; I&amp;rsquo;ll be back to share more here soon. &amp;#x1f604;&lt;/p></description></item><item><title>Hugo, Goldmark and CommonMark Compliance</title><link>https://static.grinnell.edu/dlad-blog/posts/061-hugo-and-commmonmark-compliance/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/061-hugo-and-commmonmark-compliance/</guid><description>&lt;p>Just making a note here that &lt;a href="https://gohugo.io">Hugo&lt;/a>, as of version &lt;code>0.60.0&lt;/code>, is now using the &lt;a href="https://github.com/yuin/goldmark/">Goldmark&lt;/a> markdown rendering library, and that library is &lt;a href="https://spec.commonmark.org/">CommonMark&lt;/a> compliant. The official word, from &lt;a href="https://gohugo.io/getting-started/configuration-markup/#goldmark">this document&lt;/a> states that:&lt;/p>

&lt;div class="original">&lt;p>Goldmark is from Hugo 0.60 the default library used for Markdown. It’s fast, it’s CommonMark compliant and it’s very flexible. Note that the feature set of Goldmark vs Blackfriday isn’t the same; you gain a lot but also lose some, but we will work to bridge any gap in the upcoming Hugo versions.&lt;/p></description></item><item><title>CanonifyURLs in Hugo</title><link>https://static.grinnell.edu/dlad-blog/posts/035-canonifyurls-in-hugo/</link><pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/035-canonifyurls-in-hugo/</guid><description>&lt;p>I&amp;rsquo;ve been seeing a lot of &lt;code>.URL will be deprecated...&lt;/code> warnings in my Hugo compilations lately, and just now figured out a slick replacement for it: &lt;code>canonifyURLs = true&lt;/code>. The documentation for this parameter says&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>By default, all relative URLs encountered in the input are left unmodified, e.g. /css/foo.css would stay as /css/foo.css. The canonifyURLs field in your site config has a default value of false.&lt;/p>
&lt;p>By setting canonifyURLs to true, all relative URLs would instead be canonicalized using baseURL. For example, assuming you have baseURL = &lt;a href="https://example.com/">https://example.com/&lt;/a>, the relative URL /css/foo.css would be turned into the absolute URL &lt;a href="https://example.com/css/foo.css">https://example.com/css/foo.css&lt;/a>.&lt;/p></description></item><item><title>Adding a LastMod Date</title><link>https://static.grinnell.edu/dlad-blog/posts/033-adding-lastmod-date/</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/033-adding-lastmod-date/</guid><description>&lt;p>So, &lt;code>Hugo&lt;/code> supports the use of &lt;a href="https://gohugo.io/content-management/front-matter/">front matter&lt;/a> &amp;ldquo;date&amp;rdquo; variables including: &lt;code>date&lt;/code>, &lt;code>publishDate&lt;/code> and &lt;code>lastmod&lt;/code>. I won&amp;rsquo;t explain the details of each variable because the &lt;a href="https://gohugo.io/content-management/front-matter/">aforementioned resource&lt;/a> has a nice, concise explanation of them all.&lt;/p>
&lt;p>Until recently this blog only dealt with the &amp;ldquo;date&amp;rdquo; field since I used to have &lt;a href="https://atom.io">Atom&lt;/a> configured to automatically update that field for me when I save changes to a file. However, &lt;code>Hugo&lt;/code> treats &amp;ldquo;date&amp;rdquo; more like the date of publication (publishDate) than the last modification (lastmod) date, so things got a little screwy if/when I edited an old post.&lt;/p></description></item><item><title>Awesome Hugo Resource - Config Variables Summary</title><link>https://static.grinnell.edu/dlad-blog/posts/022-awesome-hugo-resource-config-variables/</link><pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/022-awesome-hugo-resource-config-variables/</guid><description>&lt;p>I&amp;rsquo;m working remotely from a desk on the 3rd floor of the MSOE (Milwaukee School of Engineering) this morning and just ran into a problem with this blog&amp;hellip; some of my single and double quotes are rendered as &amp;ldquo;curly quotes&amp;rdquo; so I can&amp;rsquo;t effectively copy and paste them into a command line. While searching for a fix I found an &lt;a href="https://gohugobrasil.netlify.com/getting-started/configuration/">awesome Hugo resource&lt;/a>. It lists, among other things, ALL of Hugo&amp;rsquo;s standard configuration variables!&lt;/p>
&lt;p>The settings I&amp;rsquo;m most interested in right now are part of &lt;em>BlackFriday&lt;/em>, Hugo&amp;rsquo;s markdown rendering engine. I&amp;rsquo;m setting them in &lt;code>config.toml&lt;/code> with a section like this:&lt;/p></description></item><item><title>A Blog is Born</title><link>https://static.grinnell.edu/dlad-blog/posts/001-a-blog-is-born/</link><pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/001-a-blog-is-born/</guid><description>&lt;p>Have you ever wondered how a blog is born? The story behind this blog begins with my interest in stepping back from the CMS world, primarily &lt;a href="https://www.drupal.org/">Drupal&lt;/a>, to discover the joys of static site generation. The journey begins in earnest at the &lt;a href="https://www.diglib.org/dlf-events/2016forum/">2016 DLF Forum: Milwaukee&lt;/a> on the eve of the United States&amp;rsquo; 2016 national election, when all the buzz that wasn&amp;rsquo;t political, was about building static web sites, and &lt;a href="https://jekyllrb.com/">Jekyll&lt;/a>.&lt;/p>
&lt;p>A few weeks after the DLF Forum this server was born, thanks to the my colleagues in the &lt;a href="https://www.grinnell.edu/academics/libraries">Grinnell College (GC) Libraries&lt;/a>, and Grinnell&amp;rsquo;s &lt;a href="https://www.grinnell.edu/about/offices-services/its">Information Technology Services (ITS)&lt;/a> department. &lt;em>JekyllDev&lt;/em> was its name, and Jelkyll development was its intended purpose. Life and work quickly got in the way of interests, as they are apt to do, and &lt;em>JekyllDev&lt;/em> subsequently sat idle for nearly 2 years. During that span my work offered opportunities to learn about &amp;lsquo;DevOps&amp;rsquo; technologies like &lt;a href="https://www.ansible.com/">Ansible&lt;/a>, &lt;a href="https://www.vagrantup.com/">Vagrant&lt;/a>, &lt;a href="https://www.docker.com/">Docker&lt;/a>, and ultimately &lt;a href="https://docksal.io/">Docksal&lt;/a>.&lt;/p></description></item></channel></rss>