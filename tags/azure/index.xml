<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/azure/</link><description>Recent content in Azure on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 10 May 2023 08:22:00 -0500</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>A Pagefind Problem?</title><link>https://static.grinnell.edu/dlad-blog/posts/144-a-pagefind-problem/</link><pubDate>Wed, 10 May 2023 08:22:00 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/144-a-pagefind-problem/</guid><description>&lt;h1 id="not-just-a-pagefind-issue">Not Just a Pagefind Issue&lt;/h1>
&lt;p>Take note of the question mark at the end of the title, otherwise it could be somewhat misleading. This is not really a problem with Pagefind or Hugo, but one with cloud deployment of static apps, particularly as an Azure Static Web App or DigitalOcean static site.&lt;/p>
&lt;h1 id="the-nutshell">The Nutshell&lt;/h1>
&lt;p>As you may know from &lt;a href="https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/">post 143&lt;/a>, I have successfully installed and configured &lt;a href="https://pagefind.app/">Pagefind&lt;/a> in &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a>, but thus far it only works locally. When I try to deploy Pagefind to the cloud, specifically as an Azure Static Web App, I can&amp;rsquo;t make it work because there&amp;rsquo;s no apparent way to invoke the necessary &lt;code>npx pagefind...&lt;/code> command AFTER Hugo compiles the site, but BEFORE the site gets deployed. Azure leverages GitHub Actions to build Hugo sites, but that process also involves some custom/proprietary Azure scripts. Therein lies the problem.&lt;/p></description></item><item><title>Significant Rootstalk Retooling</title><link>https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/</link><pubDate>Mon, 08 May 2023 09:44:16 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/</guid><description>&lt;h1 id="critical-info">Critical Info&lt;/h1>
&lt;p>The changes outlined in this post introduce a new theme, &lt;a href="https://themes.gohugo.io/themes/lightbi-hugo/">Lightbi&lt;/a>, for &lt;em>Rootstalk&lt;/em>, as well as a new project repository and dev deployment of the site as an &lt;em>Azure Static Web App&lt;/em>. Those critical details are:&lt;/p>
&lt;ul>
&lt;li>Project Repository - &lt;a href="https://github.com/Digital-Grinnell/rootstalk-with-lightbi">https://github.com/Digital-Grinnell/rootstalk-with-lightbi&lt;/a>. This new repo effectively replaces &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a> which is being archived.&lt;/li>
&lt;li>Development Deployment - &lt;a href="https://victorious-ground-0e1427110.3.azurestaticapps.net/">https://victorious-ground-0e1427110.3.azurestaticapps.net/&lt;/a> is the new deployment from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-with-lightbi">https://github.com/Digital-Grinnell/rootstalk-with-lightbi&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="also">Also&amp;hellip;&lt;/h2>
&lt;p>To reduce costs I&amp;rsquo;ve already eliminated the old deployment of the &lt;a href="https://github.com/Digital-Grinnell/rootstalk">old &lt;code>main&lt;/code> branch&lt;/a> to &lt;a href="https://icy-tree-020380010.azurestaticapps.net/">https://icy-tree-020380010.azurestaticapps.net/&lt;/a>. With these changes the test and evaluation (staging) deployment of the project&amp;rsquo;s &lt;code>develop&lt;/code> branch as an &lt;em>Azure App Service&lt;/em> at &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net/">https://thankful-flower-0a2308810.1.azurestaticapps.net/&lt;/a> is also going away.&lt;/p></description></item><item><title>Rootstalk Updates</title><link>https://static.grinnell.edu/dlad-blog/posts/142-rootstalk-updates/</link><pubDate>Fri, 17 Mar 2023 08:25:09 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/142-rootstalk-updates/</guid><description>&lt;h1 id="concerning-digitalocean">Concerning DigitalOcean&lt;/h1>
&lt;p>I took steps yesterday to push an update of &lt;em>Rootstalk&lt;/em> to our production &amp;ldquo;starter&amp;rdquo; project on &lt;em>DigitalOcean&lt;/em> (&lt;em>DO&lt;/em>), and my intent was to make this the last such deployment on &lt;em>DO&lt;/em>. I had been thinking for sometime about moving &lt;em>Rootstalk&lt;/em> production to &lt;em>Azure App Service&lt;/em> where &lt;em>Rootstalk&lt;/em> is currently developed. However, after moving my &amp;ldquo;personal&amp;rdquo; &lt;code>digital@Grinnell.edu&lt;/code> &lt;em>Azure&lt;/em> account to &amp;ldquo;pay-as-you-go&amp;rdquo; status, the projected monthly cost of services shot up from less than $1/month (mostly for object storage) to something closer to $10 or $15/month.&lt;/p></description></item><item><title>Gating My Content &amp; More - Parts 3 and 4</title><link>https://static.grinnell.edu/dlad-blog/posts/141-gating-my-content-and-more-parts-34/</link><pubDate>Sat, 18 Feb 2023 22:03:49 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/141-gating-my-content-and-more-parts-34/</guid><description>&lt;div class="original">&lt;p>See &lt;a href="https://static.grinnell.edu/dlad-blog/posts/139-gating-my-content-and-more/">Gating My Content &amp;amp; More - Parts 1 and 2&lt;/a> for prerequsite and background info.&lt;/p>
&lt;/div>

&lt;h1 id="introducing-wieting-content">Introducing Wieting Content&lt;/h1>
&lt;p>Part 3 of this process, the introduction of Wieting Theatre Guild content, is described in the project repo&amp;rsquo;s &lt;code>README.md&lt;/code> file. Since the project is in a &lt;em>private&lt;/em> repo I&amp;rsquo;ll include the pertinent parts here from &lt;a href="https://gist.github.com/SummittDweller/eb67aa53b3ec3c1d78e1d47d04399ee5">this gist&lt;/a>.&lt;/p>
&lt;script src="https://gist.github.com/SummittDweller/eb67aa53b3ec3c1d78e1d47d04399ee5.js">&lt;/script>

&lt;h1 id="part-4---protecting-pages-with-staticrypt-cli--more">Part 4 - Protecting Pages with StatiCrypt CLI + More&lt;/h1>
&lt;p>Let&amp;rsquo;s jump in with &lt;a href="https://robinmoisson.github.io/staticrypt/">StatiCrypt CLI&lt;/a>. The following experience is from the &lt;code>README.md&lt;/code> file in my &lt;a href="https://github.com/SummittDweller/wieting-guild-pages">https://github.com/SummittDweller/wieting-guild-pages&lt;/a> project.&lt;/p>
&lt;h2 id="displaying-embedded-pdfs">Displaying Embedded PDFs&lt;/h2>
&lt;p>Some of the pages I added to &lt;a href="https://wieting-guild.tamatoledo.com">https://wieting-guild.tamatoledo.com&lt;/a> are intended to display &lt;code>.pdf&lt;/code> content. The old shortcode responsible for that feature will need to be ported from &lt;a href="https://github.com/SummittDweller/wieting-one-click-hugo-cms/tree/main/site/content/guild">wieting-one-click-hugo-cms&lt;/a> and made to function in &lt;code>Eleventy&lt;/code>.&lt;/p></description></item><item><title>Adding a Custom 404 Page in Hugo</title><link>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</link><pubDate>Thu, 16 Feb 2023 13:07:31 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</guid><description>&lt;p>The task &lt;em>du jour&lt;/em> is to begin, and perhaps complete, the process of adding a custom 404 page to &lt;em>Rootstalk&lt;/em>.&lt;/p>
&lt;p>Thus far I&amp;rsquo;ve found a couple of promising resources to guide the effort:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/templates/404/">Custom 404 Page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://moonbooth.com/hugo/custom-404/">Custom 404 pages in Hugo done right&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In particular, I&amp;rsquo;m focusing on &amp;ldquo;Option 2&amp;rdquo; in the &amp;ldquo;&amp;hellip;done right&amp;rdquo; document, and the &amp;ldquo;Azure Static Web App&amp;rdquo; portion of the first document.&lt;/p>
&lt;h2 id="need-a-new-azure-api-key">Need a New Azure API Key?&lt;/h2>
&lt;p>Early in this journey I found that I could not deploy changes to &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net">https://thankful-flower-0a2308810.1.azurestaticapps.net&lt;/a> from the &lt;code>develop&lt;/code> branch of the code because of an invalid or missing API key. I turned to &lt;a href="https://learn.microsoft.com/en-us/azure/static-web-apps/deployment-token-management">Reset deployment tokens in Azure Static Web Apps&lt;/a> to try and remedy that.&lt;/p></description></item><item><title>Gating My Content &amp; More - Parts 1 and 2</title><link>https://static.grinnell.edu/dlad-blog/posts/139-gating-my-content-and-more/</link><pubDate>Mon, 06 Feb 2023 18:19:53 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/139-gating-my-content-and-more/</guid><description>&lt;h1 id="a-blended-approach">A Blended Approach&lt;/h1>
&lt;p>It&amp;rsquo;s a new month, February 2023 that is, and this the first part of follow-up to last month&amp;rsquo;s post in my personal blog, namely &lt;a href="https://blog.summittdweller.com/posts/2023/01/gating-content/">Gating My Content&lt;/a>. Now, rather than trying to &amp;ldquo;gate&amp;rdquo; some of the content in the &lt;a href="https://wieting.tamatoledo.com">Wieting Theatre website&lt;/a>, I&amp;rsquo;m going to start a new site, with characteristics listed below, and include only the protected portion of the Wieting&amp;rsquo;s content.&lt;/p>
&lt;p>I call this a &amp;ldquo;blended&amp;rdquo; approach because it will, at least initially, leverage and blend guidance and elements from many of the resources I&amp;rsquo;ve captured at &lt;a href="https://www.one-tab.com/page/iyQVdlpSRICO67Mue7Cb_Q">https://www.one-tab.com/page/iyQVdlpSRICO67Mue7Cb_Q&lt;/a>.&lt;/p></description></item><item><title>Creating Better Documentation</title><link>https://static.grinnell.edu/dlad-blog/posts/138-creating-better-documentation/</link><pubDate>Sat, 04 Feb 2023 10:36:03 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/138-creating-better-documentation/</guid><description>&lt;h1 id="we-need-more-strikecow-bellstrike-screen-capture">We Need More &lt;strike>Cow Bell&lt;/strike> Screen Capture!&lt;/h1>
&lt;p>On a recent project I found myself following some development guidance provided in &lt;a href="https://squalr.us/2021/05/deploying-an-11ty-site-to-azure-static-web-apps/">Deploying an 11ty Site to Azure Static Web Apps&lt;/a> and I really like the work that &lt;a href="https://github.com/squalrus">squalrus&lt;/a> did here because &lt;strong>there&amp;rsquo;s a nice mix of screen capture images and descriptive text&lt;/strong>. I think my documentation, at least in the past, has been lacking in images. Time to fix that.&lt;/p>
&lt;h1 id="command---shift---5">Command - Shift - 5&lt;/h1>
&lt;p>On my Mac I frequently use the &lt;code>command - shift - 5&lt;/code> key sequence to launch &lt;em>dynamic&lt;/em> &amp;ndash; think movie, not image &amp;ndash; screen capture. I did just that moments ago, so some of what you&amp;rsquo;ll see below is a result of that maneuver. &amp;#x1f604;&lt;/p></description></item><item><title>Migrating CATPAW Development to Azure</title><link>https://static.grinnell.edu/dlad-blog/posts/135-migrating-catpaw-development-to-azure/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/135-migrating-catpaw-development-to-azure/</guid><description>&lt;p>Portions of this post build on concepts introduced in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/130-managing-azure/">Managing Azure&lt;/a>.&lt;/p>
&lt;h2 id="catpaw---computer-aided-thinking-primarily-about-writing">CATPAW - Computer-Aided Thinking, Primarily about Writing&lt;/h2>
&lt;p>From the CATPAW home screen&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>In many ways, CATPAW is an online book about writing style&amp;ndash;a guide to the choices we make in writing that connect us to our readers.&lt;/p>
&lt;p>Rather than setting out rules to follow, CATPAW will help you make informed choices in context. The site accomplishes that goal in three ways:&lt;/p>
&lt;ul>
&lt;li>It explains the choices writers face.&lt;/li>
&lt;li>It uses computational tools to help you examine your own writing, letting you see what choices you have already made and what you might want to do differently.&lt;/li>
&lt;li>It places these choices in the context of advice from other prominent guides to writing.&lt;/li>
&lt;/ul>
&lt;/div>

&lt;h3 id="technical-notes">Technical Notes&lt;/h3>
&lt;p>CATPAW is a &lt;a href="https://flask.palletsprojects.com/en/2.2.x/#">Python Flask&lt;/a> web application that employs a number of Python packages including &lt;a href="https://www.nltk.org/">nltk: the Natural Language Toolkit&lt;/a>.&lt;/p></description></item><item><title>Managing Azure</title><link>https://static.grinnell.edu/dlad-blog/posts/130-managing-azure/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/130-managing-azure/</guid><description>&lt;p>For the past couple years I/we have been experimenting with moving digital content to &lt;em>Azure&lt;/em>, both for storage and as a web app host. The most prominent case is with regard to &lt;em>Rootstalk&lt;/em> where &lt;em>Azure&lt;/em> currently supports two (recently down from three) static development apps as well as a storage account. All such services are part of a personal* &lt;em>Azure&lt;/em> subscription opened under the &lt;a href="mailto:digital@grinnell.edu">digital@grinnell.edu&lt;/a> email address.&lt;/p>
&lt;p>*I call this a &amp;ldquo;personal&amp;rdquo; account because charges for it are currently billed to my own credit card, a situation that will need to be changed sometime relatively soon. Fortunately, charges thus far have not exceeded $0.15 per month.&lt;/p></description></item><item><title>Moving Static Sites to Azure</title><link>https://static.grinnell.edu/dlad-blog/posts/109-moving-static-sites-to-azure/</link><pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/109-moving-static-sites-to-azure/</guid><description>&lt;p>On Thursday, September 9, 2021, I discovered that &lt;a href="https://azure.microsoft.com/en-us/">Azure&lt;/a>, Microsoft&amp;rsquo;s offering of host/cloud services for Open Source developers, and a favored partner of Grinnell&amp;rsquo;s IT department, had come up with a &lt;em>Static Web App&lt;/em> deployment scheme that allegedly would rival what I&amp;rsquo;ve been using at &lt;em>DigitalOcean&lt;/em>. So, I first tried to migrate my very simple &lt;code>Static Landing Page&lt;/code> &lt;em>Hugo&lt;/em> static site to a new home on &lt;em>Azure&lt;/em>. The process wasn&amp;rsquo;t quite as slick and easy as at &lt;em>DigitalOcean&lt;/em>, but &lt;em>Azure&lt;/em> does nicely leverage &lt;a href="https://github.com/features/actions">GitHub Actions&lt;/a>, and the process wasn&amp;rsquo;t too difficult to grasp.&lt;/p></description></item></channel></rss>