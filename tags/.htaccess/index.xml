<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>.htaccess on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/.htaccess/</link><description>Recent content in .htaccess on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 14 Apr 2021 15:23:45 -0500</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/.htaccess/index.xml" rel="self" type="application/rss+xml"/><item><title>Adding `.htaccess` to Apache Container `/tmp` Directory</title><link>https://static.grinnell.edu/dlad-blog/posts/105-adding-htaccess-to-apache-tmp-directory/</link><pubDate>Wed, 14 Apr 2021 15:23:45 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/105-adding-htaccess-to-apache-tmp-directory/</guid><description>For some time now we&amp;rsquo;ve had a problem lurking in Digital.Grinnell, when large files are opened for viewing or download one of the DG services makes a temporary copy of the file in the Apache container&amp;rsquo;s /tmp directory. Locally, and in staging I&amp;rsquo;ve debugged the code that is responsible for removing the temporary file once the operation is complete. Running locally or in staging the process does its job, the temporary files get deleted soon after creation, but this never happens in production.</description></item><item><title>301 Redirect in Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/104-301-redirect-in-digital.grinnell/</link><pubDate>Wed, 14 Apr 2021 10:28:31 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/104-301-redirect-in-digital.grinnell/</guid><description>A colleague and I were recently sifting through the Digital.Grinnell logs and came across some recurring 404, &amp;ldquo;page not found&amp;rdquo;, status messages. 404&amp;rsquo;s are not uncommon in DG, but these were particularly troubling because they were requests of the form drupal/fedora/repository/grinnell:162 and drupal/fedora/repository/grinnell:86. That&amp;rsquo;s the old, and by that I mean VERY OLD, like Drupal v6 vintage from 2012 or 2013, form for an object address. All such references were to some of DG&amp;rsquo;s oldest digital objects, too.
We tried to figure out where such old address references might be coming from, but we struck out.</description></item><item><title>Fixing 'Mixed Content' Errors</title><link>https://static.grinnell.edu/dlad-blog/posts/091-fixing-mixed-mode-errors/</link><pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/091-fixing-mixed-mode-errors/</guid><description>Last evening, just before the World Champion Kansas City Chiefs kicked off the NFL&amp;rsquo;s 2020-21 season (I hope the season is healthy all the way into 2021), I attempted to update all the Drupal contrib modules, and core, in my new local instance of ISLE as chronicled in the Next Steps chapter of ISLE Local Migration Customization. Ultimately that update process left me with a host of incorrect owner/group/permissions issues in the Drupal code, and I was able to remedy those in short order.</description></item></channel></rss>