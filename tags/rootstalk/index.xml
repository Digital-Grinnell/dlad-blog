<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rootstalk on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/rootstalk/</link><description>Recent content in Rootstalk on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 13 Feb 2024 14:08:00 -0600</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/rootstalk/index.xml" rel="self" type="application/rss+xml"/><item><title>Updating Rootstalk - February 2024</title><link>https://static.grinnell.edu/dlad-blog/posts/147-updating-rootstalk-february-2024/</link><pubDate>Tue, 13 Feb 2024 14:08:00 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/147-updating-rootstalk-february-2024/</guid><description>&lt;div style="border:3px solid red; padding:10px; text-align:center; margin:10px;">This is an exact copy of https://static.grinnell.edu/dlad-blog/posts/146-updating-rootstalk-august-2023/ with the addition of an important note pertaining to the section titled `Pushing to Production`. 
&lt;p>The &lt;code>production&lt;/code> branch update of &lt;em>Rootstalk&lt;/em> in February 2024 resulted in a &lt;em>Git&lt;/em> error stating &lt;code>Updates rejected because tip of current branch behind remote counterpart&lt;/code>. Since my &lt;strong>local&lt;/strong> &lt;code>production&lt;/code> branch was correct after updates were applied, I used a &lt;code>git push --force-with-lease&lt;/code> command from &lt;a href="https://stackoverflow.com/posts/70300076/timeline">https://stackoverflow.com/posts/70300076/timeline&lt;/a> to get things back in-sync.&lt;/div>&lt;/p>
&lt;p>In this document I will attempt to capture the ordered steps required to publish a new &amp;ldquo;issue&amp;rdquo; of &lt;em>Rootstalk&lt;/em> in it&amp;rsquo;s newest environment.&lt;/p></description></item><item><title>Updating Rootstalk - August 2023</title><link>https://static.grinnell.edu/dlad-blog/posts/146-updating-rootstalk-august-2023/</link><pubDate>Tue, 15 Aug 2023 09:57:57 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/146-updating-rootstalk-august-2023/</guid><description>&lt;p>In this document I will attempt to capture the ordered steps required to publish a new &amp;ldquo;issue&amp;rdquo; of &lt;em>Rootstalk&lt;/em> in it&amp;rsquo;s newest environment.&lt;/p>
&lt;p>The development of this blog post, and modifications to the &lt;a href="https://github.com/Digital-Grinnell/rootstalk-issue-workflow">https://github.com/Digital-Grinnell/rootstalk-issue-workflow&lt;/a> repo, took place on my personal Mac Mini while simultaneous work on &lt;em>Rootstalk&lt;/em> was completed in the &lt;code>~/GitHub/npm-rootstalk&lt;/code> AND &lt;code>~/GitHub/rootstalk-issue-workflow&lt;/code>&lt;sup>*&lt;/sup> local repositories on my Grinnell College MacBook Pro. The two machines shared a single keyboard and mouse, plus copy/paste capabilities, via Universal Control.&lt;/p>
&lt;p>&lt;sup>*&lt;/sup>Note that work in &lt;code>~/GitHub/roostalk-issue-workflow&lt;/code> must be completed on my GC-issued MacBook Pro as access to &lt;code>InDesign&lt;/code> is only available on that college-owned machine.&lt;/p></description></item><item><title>Significant Rootstalk Retooling</title><link>https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/</link><pubDate>Mon, 08 May 2023 09:44:16 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/</guid><description>&lt;h1 id="critical-info">Critical Info&lt;/h1>
&lt;p>The changes outlined in this post introduce a new theme, &lt;a href="https://themes.gohugo.io/themes/lightbi-hugo/">Lightbi&lt;/a>, for &lt;em>Rootstalk&lt;/em>, as well as a new project repository and dev deployment of the site as an &lt;em>Azure Static Web App&lt;/em>. Those critical details are:&lt;/p>
&lt;ul>
&lt;li>Project Repository - &lt;a href="https://github.com/Digital-Grinnell/rootstalk-with-lightbi">https://github.com/Digital-Grinnell/rootstalk-with-lightbi&lt;/a>. This new repo effectively replaces &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a> which is being archived.&lt;/li>
&lt;li>Development Deployment - &lt;a href="https://victorious-ground-0e1427110.3.azurestaticapps.net/">https://victorious-ground-0e1427110.3.azurestaticapps.net/&lt;/a> is the new deployment from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-with-lightbi">https://github.com/Digital-Grinnell/rootstalk-with-lightbi&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="also">Also&amp;hellip;&lt;/h2>
&lt;p>To reduce costs I&amp;rsquo;ve already eliminated the old deployment of the &lt;a href="https://github.com/Digital-Grinnell/rootstalk">old &lt;code>main&lt;/code> branch&lt;/a> to &lt;a href="https://icy-tree-020380010.azurestaticapps.net/">https://icy-tree-020380010.azurestaticapps.net/&lt;/a>. With these changes the test and evaluation (staging) deployment of the project&amp;rsquo;s &lt;code>develop&lt;/code> branch as an &lt;em>Azure App Service&lt;/em> at &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net/">https://thankful-flower-0a2308810.1.azurestaticapps.net/&lt;/a> is also going away.&lt;/p></description></item><item><title>Rootstalk Updates</title><link>https://static.grinnell.edu/dlad-blog/posts/142-rootstalk-updates/</link><pubDate>Fri, 17 Mar 2023 08:25:09 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/142-rootstalk-updates/</guid><description>&lt;h1 id="concerning-digitalocean">Concerning DigitalOcean&lt;/h1>
&lt;p>I took steps yesterday to push an update of &lt;em>Rootstalk&lt;/em> to our production &amp;ldquo;starter&amp;rdquo; project on &lt;em>DigitalOcean&lt;/em> (&lt;em>DO&lt;/em>), and my intent was to make this the last such deployment on &lt;em>DO&lt;/em>. I had been thinking for sometime about moving &lt;em>Rootstalk&lt;/em> production to &lt;em>Azure App Service&lt;/em> where &lt;em>Rootstalk&lt;/em> is currently developed. However, after moving my &amp;ldquo;personal&amp;rdquo; &lt;code>digital@Grinnell.edu&lt;/code> &lt;em>Azure&lt;/em> account to &amp;ldquo;pay-as-you-go&amp;rdquo; status, the projected monthly cost of services shot up from less than $1/month (mostly for object storage) to something closer to $10 or $15/month.&lt;/p></description></item><item><title>Adding a Custom 404 Page in Hugo</title><link>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</link><pubDate>Thu, 16 Feb 2023 13:07:31 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</guid><description>&lt;p>The task &lt;em>du jour&lt;/em> is to begin, and perhaps complete, the process of adding a custom 404 page to &lt;em>Rootstalk&lt;/em>.&lt;/p>
&lt;p>Thus far I&amp;rsquo;ve found a couple of promising resources to guide the effort:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/templates/404/">Custom 404 Page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://moonbooth.com/hugo/custom-404/">Custom 404 pages in Hugo done right&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In particular, I&amp;rsquo;m focusing on &amp;ldquo;Option 2&amp;rdquo; in the &amp;ldquo;&amp;hellip;done right&amp;rdquo; document, and the &amp;ldquo;Azure Static Web App&amp;rdquo; portion of the first document.&lt;/p>
&lt;h2 id="need-a-new-azure-api-key">Need a New Azure API Key?&lt;/h2>
&lt;p>Early in this journey I found that I could not deploy changes to &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net">https://thankful-flower-0a2308810.1.azurestaticapps.net&lt;/a> from the &lt;code>develop&lt;/code> branch of the code because of an invalid or missing API key. I turned to &lt;a href="https://learn.microsoft.com/en-us/azure/static-web-apps/deployment-token-management">Reset deployment tokens in Azure Static Web Apps&lt;/a> to try and remedy that.&lt;/p></description></item><item><title>Automated Proofreading with `htmlproofer`</title><link>https://static.grinnell.edu/dlad-blog/posts/133-automated-proofreading-with-htmlproofer/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/133-automated-proofreading-with-htmlproofer/</guid><description>&lt;p>What follows is a January 2022 excerpt from a piece of &lt;em>Rootstalk&lt;/em> project documentation titled &lt;code>Automated-Testing.md&lt;/code>&amp;hellip;&lt;/p>

&lt;div class="original">&lt;h1 id="automated-testing">Automated Testing&lt;/h1>
&lt;p>Today I started a little side-project aimed at helping test or &amp;ldquo;proof&amp;rdquo; the &lt;em>Rootstalk&lt;/em> structure and content. I&amp;rsquo;m attempting to use the package/process documented in &lt;a href="https://github.com/gjtorikian/html-proofer">this GitHub repo&lt;/a>.&lt;/p>
&lt;p>I started on the command-line of my MacBook Pro like so:&lt;/p>
&lt;pre tabindex="0">&lt;code>╭─mcfatem@MAC02FK0XXQ05Q ~/GitHub/rootstalk ‹main›
╰─$ gem install html-proofer
Fetching yell-2.2.2.gem
Fetching nokogiri-1.13.1-arm64-darwin.gem
Fetching rainbow-3.1.1.gem
Fetching ethon-0.15.0.gem
Fetching html-proofer-3.19.3.gem
Fetching typhoeus-1.4.0.gem
Fetching parallel-1.21.0.gem
Successfully installed yell-2.2.2
Successfully installed ethon-0.15.0
Successfully installed typhoeus-1.4.0
Successfully installed rainbow-3.1.1
Successfully installed parallel-1.21.0
Successfully installed nokogiri-1.13.1-arm64-darwin
Successfully installed html-proofer-3.19.3
Parsing documentation for yell-2.2.2
Installing ri documentation for yell-2.2.2
Parsing documentation for ethon-0.15.0
Installing ri documentation for ethon-0.15.0
Parsing documentation for typhoeus-1.4.0
Installing ri documentation for typhoeus-1.4.0
Parsing documentation for rainbow-3.1.1
Installing ri documentation for rainbow-3.1.1
Parsing documentation for parallel-1.21.0
Installing ri documentation for parallel-1.21.0
Parsing documentation for nokogiri-1.13.1-arm64-darwin
Installing ri documentation for nokogiri-1.13.1-arm64-darwin
Parsing documentation for html-proofer-3.19.3
Installing ri documentation for html-proofer-3.19.3
Done installing documentation for yell, ethon, typhoeus, rainbow, parallel, nokogiri, html-proofer after 2 seconds
7 gems installed
&lt;/code>&lt;/pre>&lt;p>Then, as suggested in the tool&amp;rsquo;s &lt;code>README.md&lt;/code> file&amp;hellip;&lt;/p></description></item><item><title>Another Sync to Rootstalk Production (DigitalOcean) with Dev</title><link>https://static.grinnell.edu/dlad-blog/posts/132-another-sync-rootstalk-production-do-with-dev/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/132-another-sync-rootstalk-production-do-with-dev/</guid><description>&lt;p>My goal for this afternoon, November 7, 2022, was to find repeat a process last performed almost a year ago on December 22, 2021, to synchronize changes in the development copy of &lt;em>Rootstalk&lt;/em> (the &lt;code>main&lt;/code> branch &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>) with our production deployment (the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-DO">https://github.com/Digital-Grinnell/rootstalk-DO&lt;/a>) to &lt;em>DigitalOcean&lt;/em>. This should be a simple repeat of the process documented in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/116-sync-rootstalk-production-do-with-dev/">Sync Rootstalk Production (DigitalOcean) with Dev&lt;/a>. As before, I used guidance found in &lt;a href="https://stackoverflow.com/questions/21360077/how-to-merge-between-two-local-repositories">How To Merge Between Two Local Repositories&lt;/a> to accomplish this.&lt;/p>
&lt;p>Note: Our &lt;code>staging&lt;/code> site cast from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>, an &lt;em>Azure&lt;/em> static app, can be accessed via &lt;a href="https://icy-tree-020380010.azurestaticapps.net">https://icy-tree-020380010.azurestaticapps.net&lt;/a>.&lt;/p></description></item><item><title>VSCode Find and Replace Using `regex`</title><link>https://static.grinnell.edu/dlad-blog/posts/128-vscode-find-and-replace-using-regex/</link><pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/128-vscode-find-and-replace-using-regex/</guid><description>&lt;p>This morning I needed to do some bulk &amp;ldquo;find and replace&amp;rdquo; operations in most of my &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a> content. My first thought was to write and run a little Python script, but then I wondered what &lt;em>VSCode&lt;/em> might bring to the table. Plenty, it brought plenty!&lt;/p>
&lt;p>To keep this post as brief as possible, I&amp;rsquo;m simply going to reference an instructional video that I created earlier: &lt;a href="https://rootstalk.blob.core.windows.net/documentation/VSCode-Find-and-Replace.mp4" target="_blank">VSCode-Find-and-Replace.mp4&lt;/a>.&lt;/p>
&lt;p>A list of some links mentioned in the video is provided here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linuxpip.org/vscode-regex-replace/">https://linuxpip.org/vscode-regex-replace/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f">https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.educative.io/answers/regex-search-and-replace-with-vs-code">https://www.educative.io/answers/regex-search-and-replace-with-vs-code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=xMhKstbdr3k">https://www.youtube.com/watch?v=xMhKstbdr3k&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/">https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re looking specifically to install and use the &lt;code>regex-previewer&lt;/code> extension check out:&lt;/p></description></item><item><title>Export Rootstalk OBJs from Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/117-export-rootstalk-objs-from-dg/</link><pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/117-export-rootstalk-objs-from-dg/</guid><description>&lt;p>Today&amp;rsquo;s endeavor&amp;hellip; begin the process of moving hundreds of &lt;em>Rootstalk&lt;/em> digital objects out of &lt;em>Digital.Grinnell&lt;/em> to &lt;em>Azure&lt;/em> storage.&lt;/p>
&lt;h2 id="digitalgrinnell-objects">Digital.Grinnell Objects&lt;/h2>
&lt;p>Over the last couple of years I have deposited some 477 digital objects, mostly JPEG images and PDFs, into &lt;em>Digital.Grinnell&lt;/em> so they could be &amp;ldquo;served&amp;rdquo; up for &lt;a href="https://rootstalk.grinnell.edu">&lt;em>Rootstalk&lt;/em>&lt;/a>. I did this because at the time &lt;em>Digital.Grinnell&amp;rsquo;s&lt;/em> FEDORA repository was available and relatively easy to use. Unfortunately, &lt;em>DG&lt;/em> isn&amp;rsquo;t as reliable or responsive as it once was since its FEDORA is due to be retired in a year or two. Also, the objects had to be made available to the public so they are &amp;ldquo;visible&amp;rdquo; to &lt;em>Rootstalk&lt;/em>, but that also makes them discoverable by the public, even though they are essentially out-of-context in &lt;em>DG&lt;/em>.&lt;/p></description></item><item><title>Sync Rootstalk Production (DigitalOcean) with Dev</title><link>https://static.grinnell.edu/dlad-blog/posts/116-sync-rootstalk-production-do-with-dev/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/116-sync-rootstalk-production-do-with-dev/</guid><description>&lt;p>My goal for this morning, December 22, 2021, was to find a process I could reliably use to synchronize changes in the development copy of &lt;em>Rootstalk&lt;/em> (the &lt;code>main&lt;/code> branch &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>) with our production deployment (the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-DO">https://github.com/Digital-Grinnell/rootstalk-DO&lt;/a>) to &lt;em>DigitalOcean&lt;/em>. I used guidance found in &lt;a href="https://stackoverflow.com/questions/21360077/how-to-merge-between-two-local-repositories">How To Merge Between Two Local Repositories&lt;/a> to accomplish this with mixed results.&lt;/p>
&lt;p>Note: Our &lt;code>staging&lt;/code> site cast from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>, an &lt;em>Azure&lt;/em> static app, can be accessed via &lt;a href="https://icy-tree-020380010.azurestaticapps.net">https://icy-tree-020380010.azurestaticapps.net&lt;/a>.&lt;/p>
&lt;h2 id="the-workflow">The Workflow&lt;/h2>
&lt;p>I&amp;rsquo;ve captured the inputs and output of the workflow below. The process basically involved adding a new local remote named &lt;code>dev&lt;/code> to my existing &lt;code>rootstalk-DO&lt;/code> local repository, and doing a &lt;code>git fetch&lt;/code> of that new remote. Everything in the &lt;code>code block&lt;/code> that follows is as-it-was-executed on my &lt;em>Grinnell College&lt;/em> MacBook&amp;hellip;&lt;/p></description></item><item><title>Collaborating on Hugo Site Development</title><link>https://static.grinnell.edu/dlad-blog/posts/095-collaborating-on-hugo-site-development/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/095-collaborating-on-hugo-site-development/</guid><description>&lt;div class="original">&lt;p>I&amp;rsquo;ve nearly completed migration of all &lt;em>Grinnell College Libraries&amp;rsquo;&lt;/em> static sites to &lt;em>Azure&lt;/em> and I&amp;rsquo;m updating this post to reflect that move. Wherever possible I&amp;rsquo;ll strike-through outdated information &lt;strike>like this&lt;/strike>, and replace it with updated info.&lt;/p>
&lt;/div>

&lt;p>This post will instruct the reader to install necessary tools and engage the workflow I now use to develop and maintain a handful of &lt;em>Hugo&lt;/em> static websites. The list of sites now includes both professional, those owned and operated by &lt;a href="https://grinnell.edu">Grinnell College&lt;/a>, as well as &amp;ldquo;personal&amp;rdquo; sites that I develop, maintain and host myself.&lt;/p></description></item></channel></rss>