<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Submodule on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/submodule/</link><description>Recent content in Submodule on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 27 Jan 2021 12:10:25 -0600</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/submodule/index.xml" rel="self" type="application/rss+xml"/><item><title>Git Submodule Tips</title><link>https://static.grinnell.edu/dlad-blog/posts/100-git-submodule-tips/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/100-git-submodule-tips/</guid><description>&lt;p>I seem to have a never-ending struggle with &lt;strong>git submodules&lt;/strong>. Today, I need to add some new features to one of my submodules in a non-ISLE project, but I&amp;rsquo;ve elected to post this here because this blog is relatively easy to search. I also feel fortunate to have found &lt;a href="https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407">Mastering Git Submodules&lt;/a> from &lt;a href="https://medium.com/@porteneuve">Christophe Porteneuve&lt;/a>.&lt;/p>
&lt;p>So, what I need to do now is update some submodule code, commit, and push that change back to its remote. I will also want to subsequentmly update a pair of projects that use the submodule so they are referencing the newest submodule code.&lt;/p></description></item><item><title>Git Submodule Workflow in ISLE</title><link>https://static.grinnell.edu/dlad-blog/posts/098-git-submodule-workflow-in-isle/</link><pubDate>Mon, 07 Dec 2020 18:23:02 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/098-git-submodule-workflow-in-isle/</guid><description>&lt;p>In the past few days I&amp;rsquo;ve attempted to update the &amp;ldquo;staging&amp;rdquo; copy of &lt;em>Digital.Grinnell&lt;/em> at &lt;a href="https://dg-staging.grinnell.edu">https://dg-staging.grinnell.edu&lt;/a> and learned a valuable lesson regarding workflow around &lt;em>Git&lt;/em> and &lt;em>submodules&lt;/em>. Specifically, I found the following resource to be most helpful:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://intellipaat.com/community/9971/git-update-submodule-to-latest-commit-on-origin">https://intellipaat.com/community/9971/git-update-submodule-to-latest-commit-on-origin&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In case that post ever disappers, here&amp;rsquo;s the gist of it&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>The &lt;code>git submodule update&lt;/code> command actually tells git that you simply want your submodules to each check out the commit already mentioned in the index of the superproject.&lt;/p>
&lt;p>If you want to update your submodules to the most recent commit available from their remote, you&amp;rsquo;ll try this directly within the submodules.&lt;/p></description></item></channel></rss>