<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Islandora Multi-Importer on The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/tags/islandora-multi-importer/</link><description>Recent content in Islandora Multi-Importer on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 14 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/tags/islandora-multi-importer/index.xml" rel="self" type="application/rss+xml"/><item><title>Exporting, Editing &amp; Replacing MODS Datastreams: Updated Technical Details</title><link>https://static.grinnell.edu/dlad-blog/posts/115-exporting-editing-replacing-mods-datastreams-updated-technical-details/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/115-exporting-editing-replacing-mods-datastreams-updated-technical-details/</guid><description>&lt;p>

&lt;div class="annotation">
&lt;b>Attention:&lt;/b> On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new _Drush_ command: _islandora\_mods_post\_processing_, an addition to my previous work in [islandora_mods_via_twig](https://github.com/DigitalGrinnell/islandora_mods_via_twig). See my new post, [Islandora MODS Post Processing](/posts/075-islandora-mods-post-processing/) for complete details.
&lt;/div>

&lt;/p>
&lt;p>

&lt;div class="annotation">
&lt;b>Attention:&lt;/b> In November 2021 a recommended seventh step was added to this workflow. That addition is documented in the final section of this document.
&lt;/div>

&lt;/p>
&lt;h1 id="a-7-step-workflow">A 7-Step Workflow&lt;/h1>
&lt;p>This document is follow-up, with technical details, to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing &amp;amp; Replacing MODS Datastreams&lt;/a>, post 069, in my blog. In case you missed it, the aforementioned post was written specifically for metadata editors working on the 2020 &lt;em>Grinnell College Libraries&lt;/em> review of &lt;em>Digital Grinnell&lt;/em> MODS metadata.&lt;/p></description></item><item><title>Exporting, Editing, &amp; Replacing MODS Datastreams: Technical Details</title><link>https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>. See my new post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing/">Islandora MODS Post Processing&lt;/a> for complete details.&lt;/p>
&lt;/blockquote>
&lt;h1 id="a-5-step-workflow">A 5-Step Workflow&lt;/h1>
&lt;p>This document is follow-up, with technical details, to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams&lt;/a>, post 069, in my blog. In case you missed it, the aforementioned post was written specifically for metadata editors working on the 2020 &lt;em>Grinnell College Libraries&lt;/em> review of &lt;em>Digital Grinnell&lt;/em> MODS metadata.&lt;/p></description></item><item><title>Exporting, Editing, &amp; Replacing MODS Datastreams</title><link>https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>. See my new post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing">Islandora MODS Post Processing&lt;/a> for complete details.&lt;/p>
&lt;/blockquote>
&lt;p>The transition to distance learning, social distancing, and more remote work at &lt;em>Grinnell College&lt;/em> in the wake of the &lt;em>COVID-19&lt;/em> pandemic may afford &lt;em>GC Libraries&lt;/em> an opportunity to do some overdue and necessary metadata cleaning in &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a>.&lt;/p>
&lt;h1 id="a-5-step-workflow">A 5-Step Workflow&lt;/h1>
&lt;p>This turned out to be a much more difficult undertaking than I imagined, but as of mid-April, 2020, I have a 5-step workflow that actually works. This post will introduce all five steps, but only provides details for Step 3, &lt;a href="#editing-a-modstsv-file">Editing a MODS TSV File&lt;/a>, the portion that metadata editors need to be most aware of. All technical details, as well as steps 1, 2, 4 and 5, will be addressed in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams: Technical Details&lt;/a>.&lt;/p></description></item><item><title>Granular ISLE Customization: Implementing IMI Hooks</title><link>https://static.grinnell.edu/dlad-blog/posts/049-granular-isle-customization-implementing-imi-hooks/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/049-granular-isle-customization-implementing-imi-hooks/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customization-series-guidelines">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post I&amp;rsquo;ll introduce two customizations to IMI that implement and engage &lt;em>Drupal&lt;/em> &amp;ldquo;hook&amp;rdquo; functions, namely:&lt;/p>
&lt;ul>
&lt;li>hook_islandora_multi_importer_remote_file_get(), and&lt;/li>
&lt;li>hook_form_islandora_multi_importer_form_alter().&lt;/li>
&lt;/ul>
&lt;h2 id="drupal-7-hooks">Drupal 7 Hooks&lt;/h2>
&lt;p>See &lt;a href="https://www.drupal.org/docs/7/creating-custom-modules/understanding-the-hook-system-for-drupal-modules">Understanding the hook system for Drupal modules&lt;/a> to better understand what &lt;em>Drupal v7&lt;/em> hook functions are, and how they work. If you would like additional assistance with &amp;ldquo;hooks&amp;rdquo; do not hesitate to contact the author of this post using [this email link](mailto:digital@grinnell.edu?subject=Implementing IMI Hooks).&lt;/p></description></item><item><title>Granular ISLE Customization: Installing IMI</title><link>https://static.grinnell.edu/dlad-blog/posts/048-granular-isle-customization-installing-imi/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/048-granular-isle-customization-installing-imi/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu/">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customization-series-guidelines/">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post we will install &lt;em>&lt;em>IMI&lt;/em>&lt;/em>, the &lt;a href="https://github.com/mnylc/islandora_multi_importer.git">Islandora Multi-Importer&lt;/a> module, into an existing ISLE instance, for example: &lt;a href="https://dg.localdomain/">https://dg.localdomain/&lt;/a>.&lt;/p>
&lt;h2 id="install-the-islandora-multi-importer-imi">Install the Islandora Multi-Importer (IMI)&lt;/h2>
&lt;p>It&amp;rsquo;s important that we take this step BEFORE other customizations, otherwise the module may not install properly. The result is captured in &lt;a href="https://gist.github.com/McFateM/d8e7694032298e0518a88b3370872db8/">this gist&lt;/a>.&lt;/p></description></item><item><title>Digital.Grinnell's IMI Workflow</title><link>https://static.grinnell.edu/dlad-blog/posts/040-digital.grinnells-imi-workflow/</link><pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/040-digital.grinnells-imi-workflow/</guid><description>&lt;p>Note: The abbreviation &lt;strong>IMI&lt;/strong> is used frequently in this post to represent the &lt;a href="https://github.com/mnylc/islandora_multi_importer.git">Islandora Multi-Importer&lt;/a>, a CSV-file-driven batch ingest tool used by numerous institutions in the Islandora community.&lt;/p>
&lt;p>Also, while updating this post I found this gem&amp;hellip; &lt;a href="https://medium.com/technical-writing-is-easy/diagrams-in-documentation-markdown-guide-4e78419e8d2f">Diagrams in Documentation (Markdown Guide)&lt;/a>.&lt;/p>
&lt;p>This post is an addition to the discussion in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/">post 028, Mounting //Storage for IMI Ingest in Digital.Grinnell &lt;/a> which was written largely to remind me how the //Storage mount works. &amp;#x1f615; Unlike &lt;a href="https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/">post 028&lt;/a>, this post is meant for myself AND for others at Grinnell College who prepare digital objects for ingest via IMI. For those individuals&amp;hellip; it&amp;rsquo;s not necessary that you understand all of this, but it you choose to read-on, I hope you find this information helpful.&lt;/p></description></item><item><title>Mounting //STORAGE for IMI Ingest in Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/</guid><description>&lt;p>Claiming another small victory today! Why? Well, the &lt;em>Digital.Grinnell&lt;/em> instance of &lt;a href="https://github.com/DigitalGrinnell/islandora_multi_importer">IMI (Islandora Multi-Importer) module&lt;/a> is customized so that choosing &amp;ldquo;*local&amp;rdquo; as an object ingest source invokes a hook function I created in our &lt;a href="https://github.com/DigitalGrinnell/dg7">DG7&lt;/a> module. That hook enables &lt;em>IMI&lt;/em> to &amp;ldquo;find&amp;rdquo; named files/content (things like PDFs, images, etc.) in the &lt;em>Grinnell College&lt;/em> &lt;code>//STORAGE&lt;/code> server. &lt;code>//STORAGE&lt;/code> can be mounted as a &lt;a href="https://www.techopedia.com/definition/1867/common-internet-file-system-cifs">CIFS (Common Internet File System)&lt;/a> and used to drive ingest &lt;strong>if&lt;/strong> the right package/drivers are made available to &lt;em>Islandora&lt;/em>. That can be a little tricky in &lt;em>ISLE&lt;/em>, but it&amp;rsquo;s manageable.&lt;/p></description></item></channel></rss>