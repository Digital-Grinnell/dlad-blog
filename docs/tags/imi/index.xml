<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IMI on The Grinnell College Digital Library Application Developer&#39;s Blog</title>
    <link>/tags/imi/</link>
    <description>Recent content in IMI on The Grinnell College Digital Library Application Developer&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 29 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="/tags/imi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Granular ISLE Customization: Implementing IMI Hooks</title>
      <link>/posts/049-granular-isle-customization-implementing-imi-hooks/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/049-granular-isle-customization-implementing-imi-hooks/</guid>
      <description>Granular ISLE Customization     This post is part of a series describing Digital.Grinnell customizations to ISLE, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.   An index of all documents in this series is included at the end of Granular ISLE Customization: Series Guidelines.    Goal Statement In this &amp;ldquo;granular&amp;rdquo; post I&amp;rsquo;ll introduce two customizations to IMI that implement and engage Drupal &amp;ldquo;hook&amp;rdquo; functions, namely:
 hook_islandora_multi_importer_remote_file_get(), and hook_form_islandora_multi_importer_form_alter().  Drupal 7 Hooks See Understanding the hook system for Drupal modules to better understand what Drupal v7 hook functions are, and how they work.</description>
    </item>
    
    <item>
      <title>Granular ISLE Customization: Installing IMI</title>
      <link>/posts/048-granular-isle-customization-installing-imi/</link>
      <pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/048-granular-isle-customization-installing-imi/</guid>
      <description>Granular ISLE Customization     This post is part of a series describing Digital.Grinnell customizations to ISLE, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.   An index of all documents in this series is included at the end of Granular ISLE Customization: Series Guidelines.    Goal Statement In this &amp;ldquo;granular&amp;rdquo; post we will install IMI, the Islandora Multi-Importer module, into an existing ISLE instance, for example: https://dg.localdomain/.
Install the Islandora Multi-Importer (IMI) It&amp;rsquo;s important that we take this step BEFORE other customizations, otherwise the module may not install properly.</description>
    </item>
    
    <item>
      <title>Digital.Grinnell&#39;s IMI Workflow</title>
      <link>/posts/040-digital.grinnells-imi-workflow/</link>
      <pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/040-digital.grinnells-imi-workflow/</guid>
      <description>Note: The abbreviation IMI is used frequently in this post to represent the Islandora Multi-Importer, a CSV-file-driven batch ingest tool used by numerous institutions in the Islandora community.
Also, while updating this post I found this gem&amp;hellip; Diagrams in Documentation (Markdown Guide).
This post is an addition to the discussion in post 028, Mounting //Storage for IMI Ingest in Digital.Grinnell  which was written largely to remind me how the //Storage mount works. ðŸ˜• Unlike post 028, this post is meant for myself AND for others at Grinnell College who prepare digital objects for ingest via IMI.</description>
    </item>
    
    <item>
      <title>Mounting //STORAGE for IMI Ingest in Digital.Grinnell</title>
      <link>/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/</link>
      <pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/</guid>
      <description>Claiming another small victory today! Why? Well, the Digital.Grinnell instance of IMI (Islandora Multi-Importer) module is customized so that choosing &amp;ldquo;*local&amp;rdquo; as an object ingest source invokes a hook function I created in our DG7 module. That hook enables IMI to &amp;ldquo;find&amp;rdquo; named files/content (things like PDFs, images, etc.) in the Grinnell College //STORAGE server. //STORAGE can be mounted as a CIFS (Common Internet File System) and used to drive ingest if the right package/drivers are made available to Islandora. That can be a little tricky in ISLE, but it&amp;rsquo;s manageable.</description>
    </item>
    
  </channel>
</rss>
