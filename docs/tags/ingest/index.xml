<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ingest on The Grinnell College Digital Library Application Developer&#39;s Blog</title>
    <link>https://digital-grinnell.github.io/dlad-blog/tags/ingest/</link>
    <description>Recent content in Ingest on The Grinnell College Digital Library Application Developer&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 05 Feb 2021 16:12:55 -0600</lastBuildDate><atom:link href="https://digital-grinnell.github.io/dlad-blog/tags/ingest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Book Ingest in Digital.Grinnell</title>
      <link>https://digital-grinnell.github.io/dlad-blog/posts/097-book-ingest-in-digital-grinnell/</link>
      <pubDate>Fri, 05 Feb 2021 16:12:55 -0600</pubDate>
      
      <guid>https://digital-grinnell.github.io/dlad-blog/posts/097-book-ingest-in-digital-grinnell/</guid>
      <description>It&amp;rsquo;s high-time this was posted to my blog, but the canonical copy of this document can be found in smb://Storage/LIBRARY/mcfatem/DG-Book-Ingest-Workflow.md.
Valid Book Datastream Structure I want to begin here by showing what I see as a &amp;ldquo;proper&amp;rdquo; working book datastream structure in Digital.Grinnell. The image below is a screen grab of the datastreams from the Grinnell College Yearbook 1961, DG object grinnell:23749:
  Valid Book Datastreams    Creating a Valid Book Structure One of the biggest problems I have encountered with ingest of books is uploading very large multi-page PDFs.</description>
    </item>
    
  </channel>
</rss>
