<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XDebug on The Grinnell College Digital Library Application Developer&#39;s Blog</title>
    <link>/tags/xdebug/</link>
    <description>Recent content in XDebug on The Grinnell College Digital Library Application Developer&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 17 Mar 2021 08:39:33 -0500</lastBuildDate><atom:link href="/tags/xdebug/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Debugging ISLE Local with PHPStorm</title>
      <link>/posts/103-debugging-isle-local-with-phpstorm/</link>
      <pubDate>Wed, 17 Mar 2021 08:39:33 -0500</pubDate>
      
      <guid>/posts/103-debugging-isle-local-with-phpstorm/</guid>
      <description>For the past couple of years I&amp;rsquo;ve been working in Digital.Grinnell to remove as much &amp;ldquo;customization&amp;rdquo; as I can. The effort is coming along, but still, there&amp;rsquo;s a long way to go. Every now and then I come across a feature that we just can&amp;rsquo;t live without, and it&amp;rsquo;s in times like those that I turn to PHPStorm for development and testing. Unfortunately, I&amp;rsquo;ve been operating without PHPStorm in ISLE because I worried that configuring the PHPStorm debugger in a Docker environment would be a time-consuming, tall task.</description>
    </item>
    
    <item>
      <title>Debugging PHP in ISLE: a Kludge</title>
      <link>/posts/025-kludge-debugging-isle/</link>
      <pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/025-kludge-debugging-isle/</guid>
      <description>In an earlier post I chronicle the exhaustive steps taken to create a &amp;ldquo;debuggable&amp;rdquo; local/development instance of Digital.Grinnell that behaves exactly like the real thing, except with a much smaller, portable FEDORA repository under it. I&amp;rsquo;m claiming success on that front, but there is one glaring kludge in the process that I have yet to work out.
The Kludge So, my debugging of an ISLE stack involves the coordinated configuration and engagement of XDebug inside the Apache container, and PHPStorm, along with persistence of the stack&amp;rsquo;s PHP codebase&amp;hellip; and therein lies the rub.</description>
    </item>
    
    <item>
      <title>Debugging ISLE-ld (Local Development) in PHPStorm</title>
      <link>/posts/023-debugging-isle-ld-in-phpstorm/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/023-debugging-isle-ld-in-phpstorm/</guid>
      <description>Debugging ISLE on a Mac This guidance applies to debugging PHP code in a local ISLE-ld, that&amp;rsquo;s http://isle.localdomain, instance using PHPStorm.
Modify ISLE&amp;rsquo;s docker-compose.override.yml Before engaging PHPStorm we need to make one change to our ISLE-ld configuration by running a docker cp command, making a change to our docker-compose.override.yml file, and restarting the stack. Here are the commands and procedure.
   Workstation Commands     cd ~/Projects/ISLE  mkdir -p persistent/html  docker cp isle-apache-ld:/var/www/html/. ./persistent/html    The above commands will make a new .</description>
    </item>
    
  </channel>
</rss>
