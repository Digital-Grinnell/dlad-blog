<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>The Grinnell College Digital Library Application Developer's Blog</title><link>https://static.grinnell.edu/dlad-blog/</link><description>Recent content on The Grinnell College Digital Library Application Developer's Blog</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 12 Dec 2024 16:10:55 -0600</lastBuildDate><atom:link href="https://static.grinnell.edu/dlad-blog/index.xml" rel="self" type="application/rss+xml"/><item><title>`dg_timestamp` Google Sheet Apps Script</title><link>https://static.grinnell.edu/dlad-blog/posts/148-the-dg_timestamp-google-sheet-apps-script/</link><pubDate>Thu, 12 Dec 2024 16:10:55 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/148-the-dg_timestamp-google-sheet-apps-script/</guid><description>&lt;p>When a &amp;ldquo;new&amp;rdquo; &lt;em>Digital.Grinnell&lt;/em> or &lt;em>CollectionBuilder&lt;/em> object is cataloged for the first time, we need to give it a universally unique &lt;code>identifier&lt;/code>, probably as &lt;code>dc:identifier&lt;/code> or in &lt;em>CollectionBuilder&lt;/em> terms, an &lt;code>objectid&lt;/code>. One way to do that is to introduce a Google Sheets App Script in our metadata worksheet. The following is based on a modified form of the technique that&amp;rsquo;s documented in &lt;a href="https://www.youtube.com/watch?v=6ixt-b8T8h0">How To Create Static Timestamps in Google Sheets&lt;/a>.&lt;/p>
&lt;p>The aforementioned &lt;em>YouTube&lt;/em> video shows us how to add a Google Sheets App Script to a Google Sheet. In our case that App Script, named &lt;code>dg_timestamp&lt;/code>, looks like this:&lt;/p></description></item><item><title>Updating Rootstalk - February 2024</title><link>https://static.grinnell.edu/dlad-blog/posts/147-updating-rootstalk-february-2024/</link><pubDate>Tue, 13 Feb 2024 14:08:00 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/147-updating-rootstalk-february-2024/</guid><description>&lt;div style="border:3px solid red; padding:10px; text-align:center; margin:10px;">This is an exact copy of https://static.grinnell.edu/dlad-blog/posts/146-updating-rootstalk-august-2023/ with the addition of an important note pertaining to the section titled `Pushing to Production`. 
&lt;p>The &lt;code>production&lt;/code> branch update of &lt;em>Rootstalk&lt;/em> in February 2024 resulted in a &lt;em>Git&lt;/em> error stating &lt;code>Updates rejected because tip of current branch behind remote counterpart&lt;/code>. Since my &lt;strong>local&lt;/strong> &lt;code>production&lt;/code> branch was correct after updates were applied, I used a &lt;code>git push --force-with-lease&lt;/code> command from &lt;a href="https://stackoverflow.com/posts/70300076/timeline">https://stackoverflow.com/posts/70300076/timeline&lt;/a> to get things back in-sync.&lt;/div>&lt;/p>
&lt;p>In this document I will attempt to capture the ordered steps required to publish a new &amp;ldquo;issue&amp;rdquo; of &lt;em>Rootstalk&lt;/em> in it&amp;rsquo;s newest environment.&lt;/p></description></item><item><title>Updating Rootstalk - August 2023</title><link>https://static.grinnell.edu/dlad-blog/posts/146-updating-rootstalk-august-2023/</link><pubDate>Tue, 15 Aug 2023 09:57:57 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/146-updating-rootstalk-august-2023/</guid><description>&lt;p>In this document I will attempt to capture the ordered steps required to publish a new &amp;ldquo;issue&amp;rdquo; of &lt;em>Rootstalk&lt;/em> in it&amp;rsquo;s newest environment.&lt;/p>
&lt;p>The development of this blog post, and modifications to the &lt;a href="https://github.com/Digital-Grinnell/rootstalk-issue-workflow">https://github.com/Digital-Grinnell/rootstalk-issue-workflow&lt;/a> repo, took place on my personal Mac Mini while simultaneous work on &lt;em>Rootstalk&lt;/em> was completed in the &lt;code>~/GitHub/npm-rootstalk&lt;/code> AND &lt;code>~/GitHub/rootstalk-issue-workflow&lt;/code>&lt;sup>*&lt;/sup> local repositories on my Grinnell College MacBook Pro. The two machines shared a single keyboard and mouse, plus copy/paste capabilities, via Universal Control.&lt;/p>
&lt;p>&lt;sup>*&lt;/sup>Note that work in &lt;code>~/GitHub/roostalk-issue-workflow&lt;/code> must be completed on my GC-issued MacBook Pro as access to &lt;code>InDesign&lt;/code> is only available on that college-owned machine.&lt;/p></description></item><item><title>NPM to Rule Them All</title><link>https://static.grinnell.edu/dlad-blog/posts/145-npm-to-rule-them-all/</link><pubDate>Tue, 30 May 2023 11:43:01 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/145-npm-to-rule-them-all/</guid><description>&lt;h1 id="npm-for-the-win-everywhere">NPM for the Win, EVERYWHERE&lt;/h1>
&lt;p>My first experiences with the EVERYWHERE component of this subject involved &lt;a href="https://blog.summittdweller.com">my personal blog&lt;/a> and then &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a>. So, I&amp;rsquo;m not going to elaborate on this here, I&amp;rsquo;ll just provide a link to specifics documented in my personal blog:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blog.summittdweller.com/wrap-everything-in-npm/">https://blog.summittdweller.com/wrap-everything-in-npm/&lt;/a>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>That&amp;rsquo;s all folks&amp;hellip; use the &lt;strike>Force&lt;/strike> links, Luke!&lt;/p></description></item><item><title>A Pagefind Problem?</title><link>https://static.grinnell.edu/dlad-blog/posts/144-a-pagefind-problem/</link><pubDate>Wed, 10 May 2023 08:22:00 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/144-a-pagefind-problem/</guid><description>&lt;h1 id="not-just-a-pagefind-issue">Not Just a Pagefind Issue&lt;/h1>
&lt;p>Take note of the question mark at the end of the title, otherwise it could be somewhat misleading. This is not really a problem with Pagefind or Hugo, but one with cloud deployment of static apps, particularly as an Azure Static Web App or DigitalOcean static site.&lt;/p>
&lt;h1 id="the-nutshell">The Nutshell&lt;/h1>
&lt;p>As you may know from &lt;a href="https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/">post 143&lt;/a>, I have successfully installed and configured &lt;a href="https://pagefind.app/">Pagefind&lt;/a> in &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a>, but thus far it only works locally. When I try to deploy Pagefind to the cloud, specifically as an Azure Static Web App, I can&amp;rsquo;t make it work because there&amp;rsquo;s no apparent way to invoke the necessary &lt;code>npx pagefind...&lt;/code> command AFTER Hugo compiles the site, but BEFORE the site gets deployed. Azure leverages GitHub Actions to build Hugo sites, but that process also involves some custom/proprietary Azure scripts. Therein lies the problem.&lt;/p></description></item><item><title>Significant Rootstalk Retooling</title><link>https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/</link><pubDate>Mon, 08 May 2023 09:44:16 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/143-significant-rootstalk-retooling/</guid><description>&lt;h1 id="critical-info">Critical Info&lt;/h1>
&lt;p>The changes outlined in this post introduce a new theme, &lt;a href="https://themes.gohugo.io/themes/lightbi-hugo/">Lightbi&lt;/a>, for &lt;em>Rootstalk&lt;/em>, as well as a new project repository and dev deployment of the site as an &lt;em>Azure Static Web App&lt;/em>. Those critical details are:&lt;/p>
&lt;ul>
&lt;li>Project Repository - &lt;a href="https://github.com/Digital-Grinnell/rootstalk-with-lightbi">https://github.com/Digital-Grinnell/rootstalk-with-lightbi&lt;/a>. This new repo effectively replaces &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a> which is being archived.&lt;/li>
&lt;li>Development Deployment - &lt;a href="https://victorious-ground-0e1427110.3.azurestaticapps.net/">https://victorious-ground-0e1427110.3.azurestaticapps.net/&lt;/a> is the new deployment from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-with-lightbi">https://github.com/Digital-Grinnell/rootstalk-with-lightbi&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="also">Also&amp;hellip;&lt;/h2>
&lt;p>To reduce costs I&amp;rsquo;ve already eliminated the old deployment of the &lt;a href="https://github.com/Digital-Grinnell/rootstalk">old &lt;code>main&lt;/code> branch&lt;/a> to &lt;a href="https://icy-tree-020380010.azurestaticapps.net/">https://icy-tree-020380010.azurestaticapps.net/&lt;/a>. With these changes the test and evaluation (staging) deployment of the project&amp;rsquo;s &lt;code>develop&lt;/code> branch as an &lt;em>Azure App Service&lt;/em> at &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net/">https://thankful-flower-0a2308810.1.azurestaticapps.net/&lt;/a> is also going away.&lt;/p></description></item><item><title>Rootstalk Updates</title><link>https://static.grinnell.edu/dlad-blog/posts/142-rootstalk-updates/</link><pubDate>Fri, 17 Mar 2023 08:25:09 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/142-rootstalk-updates/</guid><description>&lt;h1 id="concerning-digitalocean">Concerning DigitalOcean&lt;/h1>
&lt;p>I took steps yesterday to push an update of &lt;em>Rootstalk&lt;/em> to our production &amp;ldquo;starter&amp;rdquo; project on &lt;em>DigitalOcean&lt;/em> (&lt;em>DO&lt;/em>), and my intent was to make this the last such deployment on &lt;em>DO&lt;/em>. I had been thinking for sometime about moving &lt;em>Rootstalk&lt;/em> production to &lt;em>Azure App Service&lt;/em> where &lt;em>Rootstalk&lt;/em> is currently developed. However, after moving my &amp;ldquo;personal&amp;rdquo; &lt;code>digital@Grinnell.edu&lt;/code> &lt;em>Azure&lt;/em> account to &amp;ldquo;pay-as-you-go&amp;rdquo; status, the projected monthly cost of services shot up from less than $1/month (mostly for object storage) to something closer to $10 or $15/month.&lt;/p></description></item><item><title>Gating My Content &amp; More - Parts 3 and 4</title><link>https://static.grinnell.edu/dlad-blog/posts/141-gating-my-content-and-more-parts-34/</link><pubDate>Sat, 18 Feb 2023 22:03:49 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/141-gating-my-content-and-more-parts-34/</guid><description>&lt;div class="original">&lt;p>See &lt;a href="https://static.grinnell.edu/dlad-blog/posts/139-gating-my-content-and-more/">Gating My Content &amp;amp; More - Parts 1 and 2&lt;/a> for prerequsite and background info.&lt;/p>
&lt;/div>

&lt;h1 id="introducing-wieting-content">Introducing Wieting Content&lt;/h1>
&lt;p>Part 3 of this process, the introduction of Wieting Theatre Guild content, is described in the project repo&amp;rsquo;s &lt;code>README.md&lt;/code> file. Since the project is in a &lt;em>private&lt;/em> repo I&amp;rsquo;ll include the pertinent parts here from &lt;a href="https://gist.github.com/SummittDweller/eb67aa53b3ec3c1d78e1d47d04399ee5">this gist&lt;/a>.&lt;/p>
&lt;script src="https://gist.github.com/SummittDweller/eb67aa53b3ec3c1d78e1d47d04399ee5.js">&lt;/script>

&lt;h1 id="part-4---protecting-pages-with-staticrypt-cli--more">Part 4 - Protecting Pages with StatiCrypt CLI + More&lt;/h1>
&lt;p>Let&amp;rsquo;s jump in with &lt;a href="https://robinmoisson.github.io/staticrypt/">StatiCrypt CLI&lt;/a>. The following experience is from the &lt;code>README.md&lt;/code> file in my &lt;a href="https://github.com/SummittDweller/wieting-guild-pages">https://github.com/SummittDweller/wieting-guild-pages&lt;/a> project.&lt;/p>
&lt;h2 id="displaying-embedded-pdfs">Displaying Embedded PDFs&lt;/h2>
&lt;p>Some of the pages I added to &lt;a href="https://wieting-guild.tamatoledo.com">https://wieting-guild.tamatoledo.com&lt;/a> are intended to display &lt;code>.pdf&lt;/code> content. The old shortcode responsible for that feature will need to be ported from &lt;a href="https://github.com/SummittDweller/wieting-one-click-hugo-cms/tree/main/site/content/guild">wieting-one-click-hugo-cms&lt;/a> and made to function in &lt;code>Eleventy&lt;/code>.&lt;/p></description></item><item><title>Adding a Custom 404 Page in Hugo</title><link>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</link><pubDate>Thu, 16 Feb 2023 13:07:31 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/140-adding-a-custom-404-to-hugo/</guid><description>&lt;p>The task &lt;em>du jour&lt;/em> is to begin, and perhaps complete, the process of adding a custom 404 page to &lt;em>Rootstalk&lt;/em>.&lt;/p>
&lt;p>Thus far I&amp;rsquo;ve found a couple of promising resources to guide the effort:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://gohugo.io/templates/404/">Custom 404 Page&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://moonbooth.com/hugo/custom-404/">Custom 404 pages in Hugo done right&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In particular, I&amp;rsquo;m focusing on &amp;ldquo;Option 2&amp;rdquo; in the &amp;ldquo;&amp;hellip;done right&amp;rdquo; document, and the &amp;ldquo;Azure Static Web App&amp;rdquo; portion of the first document.&lt;/p>
&lt;h2 id="need-a-new-azure-api-key">Need a New Azure API Key?&lt;/h2>
&lt;p>Early in this journey I found that I could not deploy changes to &lt;a href="https://thankful-flower-0a2308810.1.azurestaticapps.net">https://thankful-flower-0a2308810.1.azurestaticapps.net&lt;/a> from the &lt;code>develop&lt;/code> branch of the code because of an invalid or missing API key. I turned to &lt;a href="https://learn.microsoft.com/en-us/azure/static-web-apps/deployment-token-management">Reset deployment tokens in Azure Static Web Apps&lt;/a> to try and remedy that.&lt;/p></description></item><item><title>Gating My Content &amp; More - Parts 1 and 2</title><link>https://static.grinnell.edu/dlad-blog/posts/139-gating-my-content-and-more/</link><pubDate>Mon, 06 Feb 2023 18:19:53 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/139-gating-my-content-and-more/</guid><description>&lt;h1 id="a-blended-approach">A Blended Approach&lt;/h1>
&lt;p>It&amp;rsquo;s a new month, February 2023 that is, and this the first part of follow-up to last month&amp;rsquo;s post in my personal blog, namely &lt;a href="https://blog.summittdweller.com/posts/2023/01/gating-content/">Gating My Content&lt;/a>. Now, rather than trying to &amp;ldquo;gate&amp;rdquo; some of the content in the &lt;a href="https://wieting.tamatoledo.com">Wieting Theatre website&lt;/a>, I&amp;rsquo;m going to start a new site, with characteristics listed below, and include only the protected portion of the Wieting&amp;rsquo;s content.&lt;/p>
&lt;p>I call this a &amp;ldquo;blended&amp;rdquo; approach because it will, at least initially, leverage and blend guidance and elements from many of the resources I&amp;rsquo;ve captured at &lt;a href="https://www.one-tab.com/page/iyQVdlpSRICO67Mue7Cb_Q">https://www.one-tab.com/page/iyQVdlpSRICO67Mue7Cb_Q&lt;/a>.&lt;/p></description></item><item><title>Creating Better Documentation</title><link>https://static.grinnell.edu/dlad-blog/posts/138-creating-better-documentation/</link><pubDate>Sat, 04 Feb 2023 10:36:03 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/138-creating-better-documentation/</guid><description>&lt;h1 id="we-need-more-strikecow-bellstrike-screen-capture">We Need More &lt;strike>Cow Bell&lt;/strike> Screen Capture!&lt;/h1>
&lt;p>On a recent project I found myself following some development guidance provided in &lt;a href="https://squalr.us/2021/05/deploying-an-11ty-site-to-azure-static-web-apps/">Deploying an 11ty Site to Azure Static Web Apps&lt;/a> and I really like the work that &lt;a href="https://github.com/squalrus">squalrus&lt;/a> did here because &lt;strong>there&amp;rsquo;s a nice mix of screen capture images and descriptive text&lt;/strong>. I think my documentation, at least in the past, has been lacking in images. Time to fix that.&lt;/p>
&lt;h1 id="command---shift---5">Command - Shift - 5&lt;/h1>
&lt;p>On my Mac I frequently use the &lt;code>command - shift - 5&lt;/code> key sequence to launch &lt;em>dynamic&lt;/em> &amp;ndash; think movie, not image &amp;ndash; screen capture. I did just that moments ago, so some of what you&amp;rsquo;ll see below is a result of that maneuver. &amp;#x1f604;&lt;/p></description></item><item><title>Updating Digital.Grinnell (in Islandora) One More Time</title><link>https://static.grinnell.edu/dlad-blog/posts/137-updating-digital.grinnell-one-more-time.md/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/137-updating-digital.grinnell-one-more-time.md/</guid><description>&lt;p>Digital.Grinnell&amp;rsquo;s Islandora lifespan will most likely come to an end this year, or at least in the early part 2024. So, I&amp;rsquo;m adopting a new, lean and mean process for updating it from this point forward. Basically the process will involve backing up the code that&amp;rsquo;s already in place, then using &lt;code>drush up&lt;/code> to upgrade the Drupal modules and core if necessary.&lt;/p>
&lt;p>That process on January 19, 2023, went something like this&amp;hellip;&lt;/p>
&lt;h1 id="vsphere-snapshot">vSphere Snapshot&lt;/h1>
&lt;p>In case of catastrophic failure I first elected to open my VPN then a window into &lt;a href="https://vcenter.grinnell.edu">VMware® vSphere&lt;/a>. Once inside I took a &amp;ldquo;snapshot&amp;rdquo; of the &lt;em>DGDocker1&lt;/em> server to preserve as an emergency backup.&lt;/p></description></item><item><title>Hugo: Attachments and Bundles</title><link>https://static.grinnell.edu/dlad-blog/posts/136-hugo-attachments-and-bundles/</link><pubDate>Thu, 12 Jan 2023 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/136-hugo-attachments-and-bundles/</guid><description>&lt;p>This post was written as follow-up to my &lt;a href="../135-migrating-catpaw-development-to-azure/">previous post&lt;/a> where I implemented a custom Hugo shortcode, &lt;code>attachments.html&lt;/code>, documented in &lt;a href="#attachmentshtml">attachments.html&lt;/a> below. The implementation of this shortcode required a Hugo &lt;a href="https://gohugo.io/content-management/page-bundles/">Page Bundles&lt;/a> content structure and the transition to such a structure is documented below in &lt;a href="#page-bundles-structure">Page Bundles Structure&lt;/a>.&lt;/p>
&lt;h2 id="attachmentshtml">attachments.html&lt;/h2>
&lt;p>This shortcode, &lt;code>attachments.html&lt;/code>, was lifted from &lt;a href="http://oostens.me/posts/hugo-attachment-shortcode/">Hugo Attachment shortcode&lt;/a>, a blog post by &lt;a href="http://oostens.me/">Nelis Oostens&lt;/a>. Successfull implementation of this shortcode one minor modification (my theme did not have a referenced partial) and conversion of my &lt;code>content/posts&lt;/code> from individual &lt;em>Markdown&lt;/em> (.md) files to a to &lt;a href="#page-bundles-structure">Page Bundles Structure&lt;/a>, as described below.&lt;/p></description></item><item><title>Migrating CATPAW Development to Azure</title><link>https://static.grinnell.edu/dlad-blog/posts/135-migrating-catpaw-development-to-azure/</link><pubDate>Wed, 11 Jan 2023 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/135-migrating-catpaw-development-to-azure/</guid><description>&lt;p>Portions of this post build on concepts introduced in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/130-managing-azure/">Managing Azure&lt;/a>.&lt;/p>
&lt;h2 id="catpaw---computer-aided-thinking-primarily-about-writing">CATPAW - Computer-Aided Thinking, Primarily about Writing&lt;/h2>
&lt;p>From the CATPAW home screen&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>In many ways, CATPAW is an online book about writing style&amp;ndash;a guide to the choices we make in writing that connect us to our readers.&lt;/p>
&lt;p>Rather than setting out rules to follow, CATPAW will help you make informed choices in context. The site accomplishes that goal in three ways:&lt;/p>
&lt;ul>
&lt;li>It explains the choices writers face.&lt;/li>
&lt;li>It uses computational tools to help you examine your own writing, letting you see what choices you have already made and what you might want to do differently.&lt;/li>
&lt;li>It places these choices in the context of advice from other prominent guides to writing.&lt;/li>
&lt;/ul>
&lt;/div>

&lt;h3 id="technical-notes">Technical Notes&lt;/h3>
&lt;p>CATPAW is a &lt;a href="https://flask.palletsprojects.com/en/2.2.x/#">Python Flask&lt;/a> web application that employs a number of Python packages including &lt;a href="https://www.nltk.org/">nltk: the Natural Language Toolkit&lt;/a>.&lt;/p></description></item><item><title>Creating a CollectionBuilder-CSV Instance from Our Migration Collection</title><link>https://static.grinnell.edu/dlad-blog/posts/134-creating-a-collectionbuilder-csv-instance-from-our-migration-collection/</link><pubDate>Mon, 28 Nov 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/134-creating-a-collectionbuilder-csv-instance-from-our-migration-collection/</guid><description>&lt;p>This post is essentially a &lt;a href="https://github.com/CollectionBuilder/collectionbuilder-csv">CollectionBuilder-CSV&lt;/a> follow-up to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/129-creating-a-migration-collection/">Creating a Migration Collection&lt;/a>, intended to document the path I&amp;rsquo;ve taken and the decisions I made when creating a first cut of &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> content using the aformentioned &lt;em>CollectionBuilder-CSV&lt;/em>.&lt;/p>
&lt;h2 id="cb-csv_dg-01">CB-CSV_DG-01&lt;/h2>
&lt;p>With few notable exceptions, everything mentioned below will be visible in a new &lt;em>public&lt;/em> &lt;em>GitHub&lt;/em> repo at &lt;a href="https://github.com/Digital-Grinnell/CB-CSV_DG-01">Digital-Grinnell/CB-CSV_DG-01&lt;/a>.&lt;/p>
&lt;h2 id="corresponding-google-sheet">Corresponding Google Sheet&lt;/h2>
&lt;p>One of the exceptions: the project&amp;rsquo;s metadata CSV in a time-stamped tab at &lt;a href="https://docs.google.com/spreadsheets/d/1ic4PxHDbuzDrmf4YtauhC4vEQJxt3QSH8bYfLBCM3Gc/">https://docs.google.com/spreadsheets/d/1ic4PxHDbuzDrmf4YtauhC4vEQJxt3QSH8bYfLBCM3Gc/&lt;/a>.&lt;/p>
&lt;p>Other worksheets/tabs in &lt;a href="https://docs.google.com/spreadsheets/d/1ic4PxHDbuzDrmf4YtauhC4vEQJxt3QSH8bYfLBCM3Gc">the Google Sheet&lt;/a> contain:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;em>Sheet 1&lt;/em> = the initial imported demo data from the &lt;a href="https://docs.google.com/spreadsheets/d/1nN_k4JQB4LJraIzns7WcM3OXK-xxGMQhW1shMssflNM/copy?usp=sharing">CollectionBuilder-CSV Metadata Template&lt;/a>&lt;/p></description></item><item><title>Automated Proofreading with `htmlproofer`</title><link>https://static.grinnell.edu/dlad-blog/posts/133-automated-proofreading-with-htmlproofer/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/133-automated-proofreading-with-htmlproofer/</guid><description>&lt;p>What follows is a January 2022 excerpt from a piece of &lt;em>Rootstalk&lt;/em> project documentation titled &lt;code>Automated-Testing.md&lt;/code>&amp;hellip;&lt;/p>

&lt;div class="original">&lt;h1 id="automated-testing">Automated Testing&lt;/h1>
&lt;p>Today I started a little side-project aimed at helping test or &amp;ldquo;proof&amp;rdquo; the &lt;em>Rootstalk&lt;/em> structure and content. I&amp;rsquo;m attempting to use the package/process documented in &lt;a href="https://github.com/gjtorikian/html-proofer">this GitHub repo&lt;/a>.&lt;/p>
&lt;p>I started on the command-line of my MacBook Pro like so:&lt;/p>
&lt;pre tabindex="0">&lt;code>╭─mcfatem@MAC02FK0XXQ05Q ~/GitHub/rootstalk ‹main›
╰─$ gem install html-proofer
Fetching yell-2.2.2.gem
Fetching nokogiri-1.13.1-arm64-darwin.gem
Fetching rainbow-3.1.1.gem
Fetching ethon-0.15.0.gem
Fetching html-proofer-3.19.3.gem
Fetching typhoeus-1.4.0.gem
Fetching parallel-1.21.0.gem
Successfully installed yell-2.2.2
Successfully installed ethon-0.15.0
Successfully installed typhoeus-1.4.0
Successfully installed rainbow-3.1.1
Successfully installed parallel-1.21.0
Successfully installed nokogiri-1.13.1-arm64-darwin
Successfully installed html-proofer-3.19.3
Parsing documentation for yell-2.2.2
Installing ri documentation for yell-2.2.2
Parsing documentation for ethon-0.15.0
Installing ri documentation for ethon-0.15.0
Parsing documentation for typhoeus-1.4.0
Installing ri documentation for typhoeus-1.4.0
Parsing documentation for rainbow-3.1.1
Installing ri documentation for rainbow-3.1.1
Parsing documentation for parallel-1.21.0
Installing ri documentation for parallel-1.21.0
Parsing documentation for nokogiri-1.13.1-arm64-darwin
Installing ri documentation for nokogiri-1.13.1-arm64-darwin
Parsing documentation for html-proofer-3.19.3
Installing ri documentation for html-proofer-3.19.3
Done installing documentation for yell, ethon, typhoeus, rainbow, parallel, nokogiri, html-proofer after 2 seconds
7 gems installed
&lt;/code>&lt;/pre>&lt;p>Then, as suggested in the tool&amp;rsquo;s &lt;code>README.md&lt;/code> file&amp;hellip;&lt;/p></description></item><item><title>Another Sync to Rootstalk Production (DigitalOcean) with Dev</title><link>https://static.grinnell.edu/dlad-blog/posts/132-another-sync-rootstalk-production-do-with-dev/</link><pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/132-another-sync-rootstalk-production-do-with-dev/</guid><description>&lt;p>My goal for this afternoon, November 7, 2022, was to find repeat a process last performed almost a year ago on December 22, 2021, to synchronize changes in the development copy of &lt;em>Rootstalk&lt;/em> (the &lt;code>main&lt;/code> branch &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>) with our production deployment (the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-DO">https://github.com/Digital-Grinnell/rootstalk-DO&lt;/a>) to &lt;em>DigitalOcean&lt;/em>. This should be a simple repeat of the process documented in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/116-sync-rootstalk-production-do-with-dev/">Sync Rootstalk Production (DigitalOcean) with Dev&lt;/a>. As before, I used guidance found in &lt;a href="https://stackoverflow.com/questions/21360077/how-to-merge-between-two-local-repositories">How To Merge Between Two Local Repositories&lt;/a> to accomplish this.&lt;/p>
&lt;p>Note: Our &lt;code>staging&lt;/code> site cast from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>, an &lt;em>Azure&lt;/em> static app, can be accessed via &lt;a href="https://icy-tree-020380010.azurestaticapps.net">https://icy-tree-020380010.azurestaticapps.net&lt;/a>.&lt;/p></description></item><item><title>Creating a `git` Hook</title><link>https://static.grinnell.edu/dlad-blog/posts/131-creating-a-git-hook/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/131-creating-a-git-hook/</guid><description>&lt;p>I recently created &lt;a href="https://github.com/Digital-Grinnell/hugo-front-matter-tools">Hugo Front Matter Tools&lt;/a> which is described as&amp;hellip;&lt;/p>
&lt;p>&lt;em>A collection of Python scripts desinged to help manage &lt;a href="https://gohugo.io">Hugo&lt;/a> &lt;code>.md&lt;/code> content &lt;a href="https://gohugo.io/content-management/front-matter/">front matter&lt;/a>.&lt;/em>&lt;/p>
&lt;p>I already have mechanisms in many projects, like this blog, that help me report the last time ANY content was pushed to &lt;em>GitHub&lt;/em>, or the last time a &lt;em>Hugo&lt;/em> site was compiled. But it would be nice, especially in the case of &lt;em>Rootstalk&lt;/em>, if I could save the last &lt;code>git add&lt;/code> date/time into an individual file&amp;rsquo;s front matter. That way the tools mentioned above could leverage and report that valuable information.&lt;/p></description></item><item><title>Managing Azure</title><link>https://static.grinnell.edu/dlad-blog/posts/130-managing-azure/</link><pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/130-managing-azure/</guid><description>&lt;p>For the past couple years I/we have been experimenting with moving digital content to &lt;em>Azure&lt;/em>, both for storage and as a web app host. The most prominent case is with regard to &lt;em>Rootstalk&lt;/em> where &lt;em>Azure&lt;/em> currently supports two (recently down from three) static development apps as well as a storage account. All such services are part of a personal* &lt;em>Azure&lt;/em> subscription opened under the &lt;a href="mailto:digital@grinnell.edu">digital@grinnell.edu&lt;/a> email address.&lt;/p>
&lt;p>*I call this a &amp;ldquo;personal&amp;rdquo; account because charges for it are currently billed to my own credit card, a situation that will need to be changed sometime relatively soon. Fortunately, charges thus far have not exceeded $0.15 per month.&lt;/p></description></item><item><title>Creating a Migration Collection</title><link>https://static.grinnell.edu/dlad-blog/posts/129-creating-a-migration-collection/</link><pubDate>Wed, 12 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/129-creating-a-migration-collection/</guid><description>&lt;p>As we continue to look at potential migration paths for our &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> (DG) content, it&amp;rsquo;s become apparent that it would be nice to have a small &amp;ldquo;test&amp;rdquo; or &amp;ldquo;migration&amp;rdquo; collection of objects to play with. The collection should have a small, but diverse, set of objects covering all of the popular content, or &lt;code>CModel&lt;/code>, types that we currently have in DG.&lt;/p>
&lt;p>Since &lt;em>Slack&lt;/em> now imposes a 90-day lifespan for posts (we are using only free-tier &lt;em>Slack&lt;/em> services at this time) I thought I had better create this blog post to capture key parts of a relevant &lt;em>Slack&lt;/em> conversation&amp;hellip;&lt;/p></description></item><item><title>VSCode Find and Replace Using `regex`</title><link>https://static.grinnell.edu/dlad-blog/posts/128-vscode-find-and-replace-using-regex/</link><pubDate>Sat, 08 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/128-vscode-find-and-replace-using-regex/</guid><description>&lt;p>This morning I needed to do some bulk &amp;ldquo;find and replace&amp;rdquo; operations in most of my &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a> content. My first thought was to write and run a little Python script, but then I wondered what &lt;em>VSCode&lt;/em> might bring to the table. Plenty, it brought plenty!&lt;/p>
&lt;p>To keep this post as brief as possible, I&amp;rsquo;m simply going to reference an instructional video that I created earlier: &lt;a href="https://rootstalk.blob.core.windows.net/documentation/VSCode-Find-and-Replace.mp4" target="_blank">VSCode-Find-and-Replace.mp4&lt;/a>.&lt;/p>
&lt;p>A list of some links mentioned in the video is provided here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://linuxpip.org/vscode-regex-replace/">https://linuxpip.org/vscode-regex-replace/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f">https://itnext.io/vscode-find-and-replace-regex-super-powers-c7f8be0fa80f&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.educative.io/answers/regex-search-and-replace-with-vs-code">https://www.educative.io/answers/regex-search-and-replace-with-vs-code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.youtube.com/watch?v=xMhKstbdr3k">https://www.youtube.com/watch?v=xMhKstbdr3k&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/">https://remisharrock.fr/post/regex-search-and-replace-visual-studio-code/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you&amp;rsquo;re looking specifically to install and use the &lt;code>regex-previewer&lt;/code> extension check out:&lt;/p></description></item><item><title>Pushing GitHub Notifications to Slack</title><link>https://static.grinnell.edu/dlad-blog/posts/127-github-notifications-to-slack/</link><pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/127-github-notifications-to-slack/</guid><description>&lt;p>Lately I&amp;rsquo;ve lamented that all incoming emails to @grinnell.edu addresses pass through a &lt;em>URLDefense&lt;/em> / &lt;em>Proofpoint&lt;/em> agent that sanitizes all clickable links as a safety/security precaution. In the case of emails automatically dispatched by &lt;em>GitHub&lt;/em> the &amp;ldquo;butchering&amp;rdquo; of such messages leaves me with an almost useles notification, one that&amp;rsquo;s so badly bloated that I typically choose to ignore it. Clearly, that&amp;rsquo;s not how notifications are suppsoed to be handled.&lt;/p>
&lt;h2 id="example-of-a-butchered-email">Example of a Butchered Email&lt;/h2>
&lt;p>To help make my point I&amp;rsquo;ll share a small portion of a relatively small email notification below. Yes, I used the term &amp;ldquo;small&amp;rdquo; more than once in that last sentence. Why? Because this is a tiny example compared to some that I&amp;rsquo;ve received lately.&lt;/p></description></item><item><title>Creating a WARC from a Wordpress Clone</title><link>https://static.grinnell.edu/dlad-blog/posts/126-creating-a-warc-from-a-wordpress-clone/</link><pubDate>Tue, 06 Sep 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/126-creating-a-warc-from-a-wordpress-clone/</guid><description>&lt;p>This blog post chronicles portions of a process used to restore and subsequently WARC (the creation of a web archive) a Communication Department website that had been retired. The website content of interest included material describing plans for the recently-completed HSSC and Administration Building projects.&lt;/p>
&lt;p>During the restoration and WARC process a &lt;code>.md&lt;/code> document named &lt;code>WARC-from-comm.sites.grinnell.edu-clone.md&lt;/code> was created and it&amp;rsquo;s contents are presented here.&lt;/p>
&lt;h1 id="creating-a-warc-from-a-clone-of-commsitesgrinnelledu">Creating a WARC from a Clone of &lt;code>comm.sites.grinnell.edu&lt;/code>&lt;/h1>
&lt;p>In July 2022 a new &amp;ldquo;clone&amp;rdquo; of the original &lt;code>comm.sites.grinnell.edu&lt;/code> web site project &amp;ndash; a &lt;em>Wordpress&lt;/em> copy that contains posts and supporting information regarding campus construction projects including the HSSC and Adminissions Center &amp;ndash; was created. That clone can be found, and administered, from &lt;a href="https://comm.sites.grinnell.edu/clone/wp-admin/index.php">https://comm.sites.grinnell.edu/clone/wp-admin/index.php&lt;/a>.&lt;/p></description></item><item><title>Rebuilding ISLE for Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/125-rebuiding-isle-for-digital.grinnell/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/125-rebuiding-isle-for-digital.grinnell/</guid><description>&lt;p>This blog post will be used to chronicle a process I&amp;rsquo;m using to rebuild &lt;em>Digital.Grinnell&lt;/em> in &lt;em>Legacy Islandora&lt;/em> using &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a>. This process was triggered by ITS&amp;rsquo; intent to move DG&amp;rsquo;s FEDORA repository to a new server. That new server is currently mounted on node &lt;em>DGDockerX&lt;/em>, my staging server, as &lt;code>/mnt/datastage&lt;/code> and it contains a copy of DG&amp;rsquo;s production FEDORA repository made on or about June 15, 2020.&lt;/p>
&lt;h2 id="portable-dg">PORTABLE-DG&lt;/h2>
&lt;p>For starters I&amp;rsquo;m going be doing lots of &amp;ldquo;local&amp;rdquo; ISLE work up-front so I&amp;rsquo;m creating a USB drive backup/copy of &lt;code>/mnt/datastage&lt;/code>. The USB drive is named &lt;code>PORTABLE-DG&lt;/code>. In order to populate it I first attached the drive to my MacBook Pro (which is now woefully short on USB &amp;lsquo;A&amp;rsquo; adapters) and started a series of &lt;code>rsync&lt;/code> processes while that MacBook is connected to the campus network in Grinnell.&lt;/p></description></item><item><title>Using the Library Virtual Desktop</title><link>https://static.grinnell.edu/dlad-blog/posts/124-using-the-library-virtual-desktop/</link><pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/124-using-the-library-virtual-desktop/</guid><description>&lt;p>A couple of months ago the &lt;code>Screen Sharing&lt;/code> connection to the iMac in my campus office stopped working, presumably because ITS no longer allowed that connection. No matter, rather than working to get that restored I thought I&amp;rsquo;d dry using a &lt;code>Virtual Desktop&lt;/code> connection to a Windows VM. I also had some need to work with Windows in other capacities so this seemed like a nice dual-purpose solution. It worked! Now I&amp;rsquo;m trying to remember and document how it works.&lt;/p></description></item><item><title>Migrating Workflows from Atom to VSCode</title><link>https://static.grinnell.edu/dlad-blog/posts/123-migrating-workflows-from-atom-to-vscode/</link><pubDate>Thu, 09 Jun 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/123-migrating-workflows-from-atom-to-vscode/</guid><description>&lt;p>This might just be my shortest post ever in this blog, at least for now. At this early date it&amp;rsquo;s just a link to the &lt;a href="https://blog.summittdweller.com/posts/2022/06/atom-no-more/">Atom No More?&lt;/a> blog post in my personal blog.&lt;/p>
&lt;p>The note above indicates that this post superseeds &lt;code>085-remote-atom&lt;/code>, but there are other &lt;em>Atom&lt;/em>-related posts that are also impacted.&lt;/p>
&lt;p>Some of these include:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="posts/033-adding-lastmod-date/">posts/033-adding-lastmod-date/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>As time passes I&amp;rsquo;ll document here any work-specific changes I make to my new &lt;em>VSCode&lt;/em> environments.&lt;/p>
&lt;h2 id="replacing-atom--with-code-">Replacing &lt;code>atom .&lt;/code> with &lt;code>code .&lt;/code>&lt;/h2>
&lt;p>The personal blog post mentioned above, &lt;a href="https://blog.summittdweller.com/posts/2022/06/atom-no-more/">Atom No More?&lt;/a>, includes a procedure I used to implement &lt;code>code .&lt;/code> to launch &lt;em>VSCode&lt;/em> from a terminal window on any of my Mac workstations. As of this writing, June 22, 2022, I have successfully implmented this change on all of my Grinnell College workstations.&lt;/p></description></item><item><title>Moving Bags to Cloud Storage</title><link>https://static.grinnell.edu/dlad-blog/posts/122-moving-bags-to-cloud-storage/</link><pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/122-moving-bags-to-cloud-storage/</guid><description>&lt;p>For now this is just a place-holder document that I hope to populate soon.&lt;/p>
&lt;p>And that&amp;rsquo;s a wrap. Until next time, be safe! &amp;#x1f604;&lt;/p></description></item><item><title>New Oral History Transcription Workflow</title><link>https://static.grinnell.edu/dlad-blog/posts/121-new-oral-history-transcription-workflow/</link><pubDate>Thu, 24 Mar 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/121-new-oral-history-transcription-workflow/</guid><description>&lt;p>&lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> features a fair number of transcribed digital oral histories. Most are interviews conducted with Grinnelleans as they return to campus annually for alumni &lt;a href="https://alumni.grinnell.edu/events/reunion-and-alumni-college">Reunion&lt;/a> or Grinnell&amp;rsquo;s &lt;a href="http://magazine.grinnell.edu/news/evolution-multicultural-reunion">Multicultural Reunion&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>What follows is largely sharable &amp;ldquo;public&amp;rdquo; content lifted from a &amp;ldquo;private&amp;rdquo; GitHub repository at &lt;a href="https://github.com/McFateM/OHScribe">https://github.com/McFateM/OHScribe&lt;/a>, the README.md and WORKFLOW.md files in particular.&lt;/p>
&lt;/blockquote>
&lt;h2 id="ohscribe">OHScribe!&lt;/h2>

&lt;div class="original">&lt;p>&lt;a href="https://ohscribe.us.reclaim.cloud/">https://ohscribe.us.reclaim.cloud/&lt;/a>&lt;/p>
&lt;p>&lt;strong>Note: This link is the new production home for &lt;strong>OHScribe!&lt;/strong> as of March 2022. It is now hosted on &lt;strong>Reclaim Cloud&lt;/strong>. The old address, &lt;a href="https://ohscribe.grinnell.edu">https://ohscribe.grinnell.edu&lt;/a>, is no longer in service.&lt;/strong>&lt;/p>
&lt;p>&lt;em>OHScribe!&lt;/em> code now resides in a &lt;a href="https://github.com/DigitalGrinnell/OHScribe">private repository&lt;/a> so a copy of its shared documents are also provided as public gists. They are:&lt;/p></description></item><item><title>Problems with dc:identifier Elements</title><link>https://static.grinnell.edu/dlad-blog/posts/120-problems-with-dcidentifer-elements/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/120-problems-with-dcidentifer-elements/</guid><description>&lt;p>The addition of scholar profiles from &lt;a href="https://github.com/Islandora-Collaboration-Group/LASIR">LASIR&lt;/a>, specifically the module&amp;rsquo;s introduction of &lt;code>/mods/identifier[@type='u1']&lt;/code> and &lt;code>/mods/identifier[@type='u2']&lt;/code> fields, has caused a few problems in &lt;em>Digital.Grinnell&lt;/em>. Perhaps the most sinister of these&amp;hellip; these fields are transformed into &lt;a href="https://www.dublincore.org/">DC or Dublin Core&lt;/a> elements that wreak havoc with our &lt;a href="https://www.openarchives.org/pmh/">OAI&lt;/a> export and subsequent import into &lt;a href="https://exlibrisgroup.com/products/primo-discovery-service/">Primo VE&lt;/a>.&lt;/p>
&lt;h2 id="oai-exports">OAI Exports&lt;/h2>
&lt;p>While on the subject of OAI, it&amp;rsquo;s worth noting here that we can query to see the OAI that &lt;em>Digital.Grinnell&lt;/em> exported by visiting a URL like: &lt;code>https://digital.grinnell.edu/oai2?verb=ListRecords&amp;amp;metadataPrefix=oai_dc&amp;amp;from=2022-02-15&lt;/code>.&lt;/p>
&lt;p>Note the &lt;code>from=&lt;/code> parameter at the end of the address. Specifying a date here will show us what was exported on the specified date (and since that date?).&lt;/p></description></item><item><title>IHC is Back!</title><link>https://static.grinnell.edu/dlad-blog/posts/119-ihc-is-back/</link><pubDate>Thu, 17 Feb 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/119-ihc-is-back/</guid><description>&lt;p>Note to self: IHC is back in &lt;em>DG&lt;/em> production! What&amp;rsquo;s IHC, you ask?&lt;/p>
&lt;p>IHC is my &lt;em>Islandora Health Check&lt;/em> &lt;code>drush&lt;/code> command/module. Since this is a note to myself, I&amp;rsquo;m not going to get into a lot of detail here, just posting some reminders so I can remember how it works and how it is used.&lt;/p>
&lt;h2 id="what-is-it">What Is It?&lt;/h2>
&lt;p>IHC is a module that provides &lt;code>drush&lt;/code> commands that can be used to collect (&lt;code>drush ihcC&lt;/code>), analyze (&lt;code>drush ihcA&lt;/code>), and subsequently report (&lt;code>drush ihcR&lt;/code>) key object info from DG&amp;rsquo;s FEDORA repository.&lt;/p></description></item><item><title>IDU DiffDatastreamVersions Command</title><link>https://static.grinnell.edu/dlad-blog/posts/118-new-idu-diffdatastreamversions-command/</link><pubDate>Mon, 14 Feb 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/118-new-idu-diffdatastreamversions-command/</guid><description>&lt;p>Recently, I have been catching up on processing some pending metadata review edits in DG&amp;rsquo;s &lt;em>Faculty Scholarship&lt;/em> and &lt;em>Student Scholarship&lt;/em> collections. Since these two collections are relatively &amp;ldquo;fluid&amp;rdquo;, they get frequent additions and metadata changes, I was worried that introducing bulk edits could negatively impact some objects. So I set out to find, or create, a tool that would help me evaluate the impact of these edits.&lt;/p>
&lt;h2 id="islandora-pretty-text-diff">Islandora Pretty Text Diff&lt;/h2>
&lt;p>I was fortunate to find a very nice tool all ready-to-go, the &lt;em>Islandora Pretty Text Diff&lt;/em> module, specifically &lt;a href="https://github.com/contentmath/islandora_pretty_text_diff">islandora_pretty_text_diff&lt;/a>. I installed and enabled this module on &lt;em>DGDocker1&lt;/em> in early February 2022.&lt;/p></description></item><item><title>Export Rootstalk OBJs from Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/117-export-rootstalk-objs-from-dg/</link><pubDate>Mon, 24 Jan 2022 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/117-export-rootstalk-objs-from-dg/</guid><description>&lt;p>Today&amp;rsquo;s endeavor&amp;hellip; begin the process of moving hundreds of &lt;em>Rootstalk&lt;/em> digital objects out of &lt;em>Digital.Grinnell&lt;/em> to &lt;em>Azure&lt;/em> storage.&lt;/p>
&lt;h2 id="digitalgrinnell-objects">Digital.Grinnell Objects&lt;/h2>
&lt;p>Over the last couple of years I have deposited some 477 digital objects, mostly JPEG images and PDFs, into &lt;em>Digital.Grinnell&lt;/em> so they could be &amp;ldquo;served&amp;rdquo; up for &lt;a href="https://rootstalk.grinnell.edu">&lt;em>Rootstalk&lt;/em>&lt;/a>. I did this because at the time &lt;em>Digital.Grinnell&amp;rsquo;s&lt;/em> FEDORA repository was available and relatively easy to use. Unfortunately, &lt;em>DG&lt;/em> isn&amp;rsquo;t as reliable or responsive as it once was since its FEDORA is due to be retired in a year or two. Also, the objects had to be made available to the public so they are &amp;ldquo;visible&amp;rdquo; to &lt;em>Rootstalk&lt;/em>, but that also makes them discoverable by the public, even though they are essentially out-of-context in &lt;em>DG&lt;/em>.&lt;/p></description></item><item><title>Sync Rootstalk Production (DigitalOcean) with Dev</title><link>https://static.grinnell.edu/dlad-blog/posts/116-sync-rootstalk-production-do-with-dev/</link><pubDate>Wed, 22 Dec 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/116-sync-rootstalk-production-do-with-dev/</guid><description>&lt;p>My goal for this morning, December 22, 2021, was to find a process I could reliably use to synchronize changes in the development copy of &lt;em>Rootstalk&lt;/em> (the &lt;code>main&lt;/code> branch &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>) with our production deployment (the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk-DO">https://github.com/Digital-Grinnell/rootstalk-DO&lt;/a>) to &lt;em>DigitalOcean&lt;/em>. I used guidance found in &lt;a href="https://stackoverflow.com/questions/21360077/how-to-merge-between-two-local-repositories">How To Merge Between Two Local Repositories&lt;/a> to accomplish this with mixed results.&lt;/p>
&lt;p>Note: Our &lt;code>staging&lt;/code> site cast from the &lt;code>main&lt;/code> branch of &lt;a href="https://github.com/Digital-Grinnell/rootstalk">https://github.com/Digital-Grinnell/rootstalk&lt;/a>, an &lt;em>Azure&lt;/em> static app, can be accessed via &lt;a href="https://icy-tree-020380010.azurestaticapps.net">https://icy-tree-020380010.azurestaticapps.net&lt;/a>.&lt;/p>
&lt;h2 id="the-workflow">The Workflow&lt;/h2>
&lt;p>I&amp;rsquo;ve captured the inputs and output of the workflow below. The process basically involved adding a new local remote named &lt;code>dev&lt;/code> to my existing &lt;code>rootstalk-DO&lt;/code> local repository, and doing a &lt;code>git fetch&lt;/code> of that new remote. Everything in the &lt;code>code block&lt;/code> that follows is as-it-was-executed on my &lt;em>Grinnell College&lt;/em> MacBook&amp;hellip;&lt;/p></description></item><item><title>Exporting, Editing &amp; Replacing MODS Datastreams: Updated Technical Details</title><link>https://static.grinnell.edu/dlad-blog/posts/115-exporting-editing-replacing-mods-datastreams-updated-technical-details/</link><pubDate>Tue, 14 Dec 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/115-exporting-editing-replacing-mods-datastreams-updated-technical-details/</guid><description>&lt;p>

&lt;div class="annotation">
&lt;b>Attention:&lt;/b> On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new _Drush_ command: _islandora\_mods_post\_processing_, an addition to my previous work in [islandora_mods_via_twig](https://github.com/DigitalGrinnell/islandora_mods_via_twig). See my new post, [Islandora MODS Post Processing](/posts/075-islandora-mods-post-processing/) for complete details.
&lt;/div>

&lt;/p>
&lt;p>

&lt;div class="annotation">
&lt;b>Attention:&lt;/b> In November 2021 a recommended seventh step was added to this workflow. That addition is documented in the final section of this document.
&lt;/div>

&lt;/p>
&lt;h1 id="a-7-step-workflow">A 7-Step Workflow&lt;/h1>
&lt;p>This document is follow-up, with technical details, to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing &amp;amp; Replacing MODS Datastreams&lt;/a>, post 069, in my blog. In case you missed it, the aforementioned post was written specifically for metadata editors working on the 2020 &lt;em>Grinnell College Libraries&lt;/em> review of &lt;em>Digital Grinnell&lt;/em> MODS metadata.&lt;/p></description></item><item><title>Digital.Grinnell Transforms</title><link>https://static.grinnell.edu/dlad-blog/posts/114-digital.grinnell-transforms/</link><pubDate>Wed, 17 Nov 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/114-digital.grinnell-transforms/</guid><description>&lt;p>&lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> relies on two different metadata XSL &amp;ldquo;transforms&amp;rdquo; to convert a cataloger&amp;rsquo;s &lt;a href="http://www.loc.gov/standards/mods/">MODS&lt;/a> descriptive data into a modified MODS record and a corresponding &lt;a href="https://dublincore.org/">Dublin Core&lt;/a> record.&lt;/p>
&lt;h2 id="self-transforms">Self-Transforms&lt;/h2>
&lt;p>The first transform type can be thought of as a &amp;ldquo;self-transform&amp;rdquo; because it accepts a MODS input and produces a modified MODS output; there is no change in schema, just changes in the data and its order.&lt;/p>
&lt;h2 id="mods-to-dc-transforms">MODS-to-DC Transforms&lt;/h2>
&lt;p>All other transforms relevant to this document are &amp;ldquo;MODS-to-DC&amp;rdquo; transforms. They accept a valid MODS record and output a corresponding, valid record under the DC schema.&lt;/p></description></item><item><title>Blog Migration Details</title><link>https://static.grinnell.edu/dlad-blog/posts/113-blog-migration-details/</link><pubDate>Fri, 08 Oct 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/113-blog-migration-details/</guid><description>&lt;h1 id="the-grinnell-college-digital-library-application-developers-blog">The Grinnell College Digital Library Application Developer&amp;rsquo;s Blog&lt;/h1>

&lt;div class="annotation">&lt;p>I&amp;rsquo;m getting really lazy in my old age, so what I&amp;rsquo;ve posted here is just the meager &lt;code>README.md&lt;/code> file from my blog&amp;rsquo;s new &lt;em>GitHub&lt;/em> repo.&lt;/p>
&lt;/div>

&lt;p>This project, my Grinnell College &lt;a href="https://static.grinnell.edu/dlad-blog/">Digital Library Application Developer&amp;rsquo;s blog&lt;/a>, is no longer a &lt;a href="https://docs.docker.com/develop/develop-images/multistage-build/">Docker &amp;ldquo;Multi-Stage&amp;rdquo; build&lt;/a>.&lt;/p>
&lt;h2 id="github-pages">GitHub Pages&lt;/h2>
&lt;p>I successfully moved this blog to &lt;em>GitHub Pages&lt;/em> in October 2021, after creating instances of it on &lt;em>DigitalOcean&lt;/em> and &lt;em>Azure&lt;/em>. &lt;em>GH Pages&lt;/em>, specifically &lt;a href="https://static.grinnell.edu/dlad-blog/">https://static.grinnell.edu/dlad-blog/&lt;/a> seems like the right home for it, finally.&lt;/p></description></item><item><title>Moving Static Sites to GitHub Pages</title><link>https://static.grinnell.edu/dlad-blog/posts/112-moving-static-sites-to-github-pages/</link><pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/112-moving-static-sites-to-github-pages/</guid><description>&lt;h1 id="pertinent-resources">Pertinent Resources&lt;/h1>
&lt;p>This section simply tabluates the posts and documentation used to effect migration of all sites from the &lt;em>Grinnell College&lt;/em> &lt;code>static&lt;/code> host to &lt;em>GitHub Pages&lt;/em>.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Resource&lt;/th>
 &lt;th>Address&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Hugo: Host on GitHub&lt;/td>
 &lt;td>&lt;a href="https://gohugo.io/hosting-and-deployment/hosting-on-github/">https://gohugo.io/hosting-and-deployment/hosting-on-github/&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub: Getting started with GitHub Pages&lt;/td>
 &lt;td>&lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages">https://docs.github.com/en/pages/getting-started-with-github-pages&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub: Creating a GitHub Pages site&lt;/td>
 &lt;td>&lt;a href="https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site">https://docs.github.com/en/pages/getting-started-with-github-pages/creating-a-github-pages-site&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>GitHub: Managing a custom domain for your GitHub Pages site&lt;/td>
 &lt;td>&lt;a href="https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-a-subdomain">https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site#configuring-a-subdomain&lt;/a>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="customizations">Customizations&lt;/h1>
&lt;h2 id="do-not-set-publishdir--docs">Do NOT Set &lt;code>publishDir = &amp;quot;docs&amp;quot;&lt;/code>&lt;/h2>
&lt;p>Do &lt;em>NOT&lt;/em> change the &lt;code>publishDir&lt;/code> parameter in your configuration, if you even have one! The default &lt;code>public&lt;/code> setting is correct.&lt;/p></description></item><item><title>Searching This Blog Using Fuse</title><link>https://static.grinnell.edu/dlad-blog/posts/110-searching-my-blog-using-fuse/</link><pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/110-searching-my-blog-using-fuse/</guid><description>&lt;p>A short time ago I moved this blog from &lt;em>DigitalOcean&lt;/em> to &lt;em>Azure&lt;/em>, and along the way I discovered that my &lt;code>search&lt;/code> feature wasn&amp;rsquo;t working properly. That old search mechanism used &lt;a href="https://fusejs.io/">Fuse&lt;/a>, which has NO dependencies, but that old scheme used a &lt;em>Hugo&lt;/em> theme component that I found difficult to properly maintain. So, as this blog was moving to &lt;em>Azure&lt;/em> I elected to try something a little different with &lt;em>Fuse&lt;/em> and found &lt;a href="https://gist.github.com/gtrevg/a34e0c736d358771437be05c6401e86c">this gist&lt;/a> to help get it done.&lt;/p>
&lt;p>As of this writing, the new search is limited to just finding &lt;code>tag&lt;/code> references, and sometimes a search will return a 404 error because of a bad path reference. If you try to search and get the 404 error have a look at the returned URL and if it reads like &lt;code>.../search/search?search-query...&lt;/code> then you&amp;rsquo;ve got one too many instances of the term &lt;code>search&lt;/code>. Remove that first &lt;code>/search&lt;/code> term, including the slash in front of it, and hit return. The search should now return valid results.&lt;/p></description></item><item><title>Updating Digital.Grinnell to ISLE v1.5.11</title><link>https://static.grinnell.edu/dlad-blog/posts/111-updating-isle-v1.5.11/</link><pubDate>Mon, 27 Sep 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/111-updating-isle-v1.5.11/</guid><description>&lt;div class="annotation">&lt;p>Attention: This is an updated copy of &lt;a href="content/posts/107-updating-Digital-Grinnell-in-ISLE.md">post 107&lt;/a> gleaned from the &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE project&amp;rsquo;s&lt;/a> &lt;a href="https://github.com/Digital-Grinnell/dg-isle/blob/main/docs/update/update.md">update.md&lt;/a> document. &lt;strong>ONLY the headings from the original document and the annotations which are specific to &lt;em>Digital.Grinnell&lt;/em> appear in this document!&lt;/strong>&lt;/p>
&lt;/div>


&lt;div class="annotation">&lt;p>Note: This update procedure was NOT performed &amp;ldquo;locally&amp;rdquo;, as recommended, due to substantial errors encountered in my last attempt to update. Rather than diving down that rabbit hole, again, I elected to attempt this update on our &lt;em>staging&lt;/em> server, &lt;em>DGDockerX&lt;/em> on &lt;code>2021-Sep-27&lt;/code>.&lt;/p>
&lt;/div>

&lt;h1 id="update-isle-to-the-latest-release">Update ISLE to the Latest Release&lt;/h1>
&lt;h2 id="important-information">Important Information&lt;/h2>
&lt;pre tabindex="0">&lt;code># stop the docker service
$ sudo service docker stop

# download the latest docker binary and replace the current outdated docker
# DEPRECATED WAY TO UPGRADE DOCKER: $ sudo wget https://get.docker.com/builds/Linux/x86_64/docker-latest -O /usr/bin/docker
$ sudo yum update docker-engine

# start the docker service
$ sudo service docker start

# check the version
$ sudo docker version

# check the images and containers
$ sudo docker images
$ sudo docker ps
$ sudo docker ps -a
&lt;/code>&lt;/pre>&lt;h2 id="update-local-personal-computer">Update Local (personal computer)&lt;/h2>
&lt;p>As mentioned above, this work is being conducted in &lt;em>staging&lt;/em> rather than &lt;em>local&lt;/em>, on &lt;em>DGDockerX&lt;/em> in the &lt;code>/home/islandora/ISLE&lt;/code> directory and the &lt;code>dg-isle&lt;/code> and &lt;code>dg-islandora&lt;/code> directories there.&lt;/p></description></item><item><title>Moving Static Sites to Azure</title><link>https://static.grinnell.edu/dlad-blog/posts/109-moving-static-sites-to-azure/</link><pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/109-moving-static-sites-to-azure/</guid><description>&lt;p>On Thursday, September 9, 2021, I discovered that &lt;a href="https://azure.microsoft.com/en-us/">Azure&lt;/a>, Microsoft&amp;rsquo;s offering of host/cloud services for Open Source developers, and a favored partner of Grinnell&amp;rsquo;s IT department, had come up with a &lt;em>Static Web App&lt;/em> deployment scheme that allegedly would rival what I&amp;rsquo;ve been using at &lt;em>DigitalOcean&lt;/em>. So, I first tried to migrate my very simple &lt;code>Static Landing Page&lt;/code> &lt;em>Hugo&lt;/em> static site to a new home on &lt;em>Azure&lt;/em>. The process wasn&amp;rsquo;t quite as slick and easy as at &lt;em>DigitalOcean&lt;/em>, but &lt;em>Azure&lt;/em> does nicely leverage &lt;a href="https://github.com/features/actions">GitHub Actions&lt;/a>, and the process wasn&amp;rsquo;t too difficult to grasp.&lt;/p></description></item><item><title>Updates to VAF-Kiosk</title><link>https://static.grinnell.edu/dlad-blog/posts/108-updates-to-vaf-kiosk/</link><pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/108-updates-to-vaf-kiosk/</guid><description>&lt;p>On Thursday, August 26, 2021, updates to a new iPad destined for the VAF (Visualizing Abolition and Freedom) installing in the Grinnell&amp;rsquo;s HSSC were completed. As of this writing the iPad has not been re-installed, but Facilities Management has been contacted to schedule that event soon.&lt;/p>
&lt;h2 id="new-digitalocean-deployment">New DigitalOcean Deployment&lt;/h2>
&lt;p>Due to small differences between the aspect ratio and resolution of the old versus new devices, the kiosk site had to be re-designed. Changes were also necessary to help ensure that users of the kiosk could not &amp;ldquo;escape&amp;rdquo; from the VAF screens and cause havoc by surfing the internet. As a result, a new &lt;em>private&lt;/em> &lt;a href="https://github.com/Digital-Grinnell/vaf">https://github.com/Digital-Grinnell/vafvaf-kiosk&lt;/a> repository was created and eventually deployed for kiosk use ONLY via DigitalOcean&amp;rsquo;s &lt;em>App&lt;/em> platform. The new kiosk site is deployed to &lt;a href="https://vaf-kiosk-2021-xjmpc.ondigitalocean.app/">https://vaf-kiosk-2021-xjmpc.ondigitalocean.app/&lt;/a>.&lt;/p></description></item><item><title>Updating Digital.Grinnell in ISLE</title><link>https://static.grinnell.edu/dlad-blog/posts/107-updating-digital-grinnell-in-isle/</link><pubDate>Tue, 22 Jun 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/107-updating-digital-grinnell-in-isle/</guid><description>&lt;div class="annotation">&lt;p>Attention: This is an annotated copy of the &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE project&amp;rsquo;s&lt;/a> &lt;a href="https://github.com/Digital-Grinnell/dg-isle/blob/main/docs/update/update.md">update.md&lt;/a> document. Annotations specific to &lt;em>Digital.Grinnell&lt;/em> appear in specially formatted blocks like this one&lt;/p>
&lt;p>There was one universal change made here in the original text, specifically all references to &lt;em>master&lt;/em> branches have been changed to &lt;em>main&lt;/em> to correlate with updated names of the repositories involved in this process.&lt;/p>
&lt;/div>


&lt;div class="annotation">&lt;p>Note: This update procedure was first performed &amp;ldquo;locally&amp;rdquo;, as recommended on &lt;code>2021-June-22&lt;/code> when I attempted it on my &lt;em>Grinnell College&lt;/em> MacBook Pro, &lt;em>MA10713&lt;/em>, serial number &lt;em>C02FK0XXQ05Q&lt;/em>. **The process failed miserably due to numerous errors, ultimately including&amp;hellip;&lt;/p></description></item><item><title>SNOWBALL</title><link>https://static.grinnell.edu/dlad-blog/posts/106-snowball/</link><pubDate>Sat, 15 May 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/106-snowball/</guid><description>&lt;div class="original">&lt;p>Digital.Grinnell and a handful of other servers/sites that I deal with crashed on the morning of Thursday, May 16. Really bad timing! I have yet to figure out what happened to trigger the tsunami, but it happened shortly before the college announced successful cut-over to a new emergency alert system. Related? I dunno.&lt;/p>
&lt;p>In any case, on Friday afternoon (yesterday) I got a steroid shot for a nasty sinus condition and my doctor warned that I might not be able to sleep well. I didn&amp;rsquo;t believe her at the time, but at about 4 AM this morning the prophecy came true.&lt;/p></description></item><item><title>Adding `.htaccess` to Apache Container `/tmp` Directory</title><link>https://static.grinnell.edu/dlad-blog/posts/105-adding-htaccess-to-apache-tmp-directory/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/105-adding-htaccess-to-apache-tmp-directory/</guid><description>&lt;p>For some time now we&amp;rsquo;ve had a problem lurking in &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a>, when large files are opened for viewing or download one of the &lt;em>DG&lt;/em> services makes a temporary copy of the file in the &lt;em>Apache&lt;/em> container&amp;rsquo;s &lt;code>/tmp&lt;/code> directory. Locally, and in staging I&amp;rsquo;ve debugged the code that is responsible for removing the temporary file once the operation is complete. Running locally or in staging the process does its job, the temporary files get deleted soon after creation, but this never happens in production. The result, our root disk on the production server fills up after a few days of use, and the server stops serving content. Even more sinister, the server doesn&amp;rsquo;t crash and restart &amp;ndash; a condition that would also clear the offending &lt;code>/tmp&lt;/code> files &amp;ndash; it doesn&amp;rsquo;t even report a fatal error, it just refuses to serve content, which is really its only function. Very frustrating indeed!&lt;/p></description></item><item><title>301 Redirect in Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/104-301-redirect-in-digital.grinnell/</link><pubDate>Wed, 14 Apr 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/104-301-redirect-in-digital.grinnell/</guid><description>&lt;p>A colleague and I were recently sifting through the &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> logs and came across some recurring 404, &amp;ldquo;page not found&amp;rdquo;, status messages. 404&amp;rsquo;s are not uncommon in &lt;em>DG&lt;/em>, but these were particularly troubling because they were requests of the form &lt;code>drupal/fedora/repository/grinnell:162&lt;/code> and &lt;code>drupal/fedora/repository/grinnell:86&lt;/code>. That&amp;rsquo;s the old, and by that I mean VERY OLD, like &lt;em>Drupal v6&lt;/em> vintage from 2012 or 2013, form for an object address. All such references were to some of &lt;em>DG&lt;/em>&amp;rsquo;s oldest digital objects, too.&lt;/p>
&lt;p>We tried to figure out where such old address references might be coming from, but we struck out. I wonder if it&amp;rsquo;s even possible to back-track a request like that given today&amp;rsquo;s &lt;a href="https://www.privacypolicies.com/blog/gdpr-privacy-policy/">GDPR&lt;/a> environment and related privacy practices?&lt;/p></description></item><item><title>Remote Atom</title><link>https://static.grinnell.edu/dlad-blog/posts/085-remote-atom/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/085-remote-atom/</guid><description>&lt;p>Earlier this year I installed and configured the &lt;a href="https://atom.io/packages/remote-atom">remote-atom&lt;/a> package to assist with editing content and code for my &lt;a href="https://blog.summittdweller.com">personal blog&lt;/a>. Naturally, I wrote a &lt;a href="https://blog.summittdweller.com/posts/2020/03/adding-remote-atom-to-my-digitalocean-server/">blog post&lt;/a> to document it.&lt;/p>
&lt;p>In the past week I&amp;rsquo;ve added the &lt;strong>remote-atom&lt;/strong> package, and configuration to many of my &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> servers. The installation and configuration was virtually identical to what I described in &lt;a href="https://blog.summittdweller.com/posts/2020/03/adding-remote-atom-to-my-digitalocean-server/">Adding remote-atom to my DigitalOcean Server&lt;/a>. Thus far the package and it&amp;rsquo;s configuration have been implemented on the following workstations, both personal and professional, with the following username@server configurations:&lt;/p></description></item><item><title>Debugging ISLE Local with PHPStorm</title><link>https://static.grinnell.edu/dlad-blog/posts/103-debugging-isle-local-with-phpstorm/</link><pubDate>Fri, 12 Mar 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/103-debugging-isle-local-with-phpstorm/</guid><description>&lt;p>For the past couple of years I&amp;rsquo;ve been working in &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> to remove as much &amp;ldquo;customization&amp;rdquo; as I can. The effort is coming along, but still, there&amp;rsquo;s a long way to go. Every now and then I come across a feature that we just can&amp;rsquo;t live without, and it&amp;rsquo;s in times like those that I turn to &lt;a href="https://www.jetbrains.com/phpstorm/">PHPStorm&lt;/a> for development and testing. Unfortunately, I&amp;rsquo;ve been operating without &lt;em>PHPStorm&lt;/em> in &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a> because I worried that configuring the &lt;em>PHPStorm&lt;/em> debugger in a Docker environment would be a time-consuming, tall task. It &lt;strong>was&lt;/strong> tricky, but worry no more!&lt;/p></description></item><item><title>Everything You Ever Wanted to Know About Digital.Grinnell Entities, but were Afraid to Ask</title><link>https://static.grinnell.edu/dlad-blog/posts/102-digital-grinnell-entities/</link><pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/102-digital-grinnell-entities/</guid><description>&lt;p>&lt;em>Digital.Grinnell&lt;/em> used to support and use &amp;ldquo;entities&amp;rdquo;, metadata-only objects that are referential in nature. Entities are best described in this &lt;a href="https://wiki.lyrasis.org/display/ISLANDORA715/Entities+Solution+Pack">Entities Solution Pack&lt;/a> documentation. Quoting from that resource&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>This module allows you to add person, place, event, and organization entities to an Islandora repository. Entities are small, metadata-based objects. A number of forms and additional features are provided in this module for those building an institutional repository with Islandora. Much of the functionality for batch ingest and autocomplete (to use entities as authority objects) centres [sic] around the MADS forms provided with the module.&lt;/p></description></item><item><title>Book Ingest in Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/097-book-ingest-in-digital-grinnell/</link><pubDate>Mon, 30 Nov 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/097-book-ingest-in-digital-grinnell/</guid><description>&lt;p>It&amp;rsquo;s high-time this was posted to my blog, but the canonical copy of this document can be found in &lt;code>smb://Storage/LIBRARY/mcfatem/DG-Book-Ingest-Workflow.md&lt;/code>.&lt;/p>
&lt;h2 id="valid-book-datastream-structure">Valid Book Datastream Structure&lt;/h2>
&lt;p>I want to begin here by showing what I see as a &amp;ldquo;proper&amp;rdquo; working book datastream structure in &lt;em>Digital.Grinnell&lt;/em>. The image below is a screen grab of the datastreams from the &lt;a href="https://digital.grinnell.edu/islandora/object/grinnell:23749">Grinnell College Yearbook 1961&lt;/a>, &lt;em>DG&lt;/em> object &lt;code>grinnell:23749&lt;/code>:&lt;/p>
&lt;link rel="stylesheet" href="https://static.grinnell.edu/dlad-blog/css/hugo-easy-gallery.css" />
&lt;div class="box" >
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
 &lt;div class="img">
 &lt;img itemprop="thumbnail" src="https://static.grinnell.edu/dlad-blog/images/post-097/grinnell-23749-datastreams.png" />
 &lt;/div>
 &lt;a href="https://static.grinnell.edu/dlad-blog/images/post-097/grinnell-23749-datastreams.png" itemprop="contentUrl">&lt;/a>
 &lt;figcaption>
 &lt;h4>Figure 1 &amp;middot; Valid Book Datastreams&lt;/h4>
 &lt;/figcaption>
 &lt;/figure>
&lt;/div>
&lt;h2 id="creating-a-valid-book-structure">Creating a Valid Book Structure&lt;/h2>
&lt;p>One of the biggest problems I have encountered with ingest of books is uploading very large multi-page PDFs. Fortunately, I&amp;rsquo;ve crafted the following procedure for working around that limitation.&lt;/p></description></item><item><title>Git Submodule Tips</title><link>https://static.grinnell.edu/dlad-blog/posts/100-git-submodule-tips/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/100-git-submodule-tips/</guid><description>&lt;p>I seem to have a never-ending struggle with &lt;strong>git submodules&lt;/strong>. Today, I need to add some new features to one of my submodules in a non-ISLE project, but I&amp;rsquo;ve elected to post this here because this blog is relatively easy to search. I also feel fortunate to have found &lt;a href="https://medium.com/@porteneuve/mastering-git-submodules-34c65e940407">Mastering Git Submodules&lt;/a> from &lt;a href="https://medium.com/@porteneuve">Christophe Porteneuve&lt;/a>.&lt;/p>
&lt;p>So, what I need to do now is update some submodule code, commit, and push that change back to its remote. I will also want to subsequentmly update a pair of projects that use the submodule so they are referencing the newest submodule code.&lt;/p></description></item><item><title>Debugging SSH Login Issues</title><link>https://static.grinnell.edu/dlad-blog/posts/073-debugging-ssh-login-issues/</link><pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/073-debugging-ssh-login-issues/</guid><description>&lt;p>Lately my passwordless, SSH logins to all my servers have quit working, at least they seem to have stopped working from the only accessible &amp;ldquo;work&amp;rdquo; workstation that I have at the moment, &lt;em>MA7053&lt;/em>. Since our enterprise malware mitigation agent, &lt;em>Traps&lt;/em>, is blocking my access to my &amp;ldquo;real&amp;rdquo; workstation, &lt;em>MA8660&lt;/em>, this has become more than just a nuisance.&lt;/p>
&lt;p>So here&amp;rsquo;s what I came up with as a process to try and determine exactly where the problems are&amp;hellip;&lt;/p>
&lt;h2 id="to-debug-sshd-issues-with-key-logins">To Debug SSHD Issues with Key Logins&lt;/h2>
&lt;p>From a terminal opened in the target (CentOS 7 in this example) server:&lt;/p></description></item><item><title>Changing Master to Main</title><link>https://static.grinnell.edu/dlad-blog/posts/101-changing-master-to-main/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/101-changing-master-to-main/</guid><description>&lt;p>In hindsight, this really should have been post number 100 in the blog, or perhaps it should have happened even earlier. In any event it&amp;rsquo;s high-time I made this move and captured the process. In June 2020 the good folks at &lt;em>GitHub&lt;/em> announced that they would begin removing references to &lt;em>master&lt;/em> as a small step forward in removing divisive language in tech. The change dictates that the default branch name of future repositories should be &lt;strong>main&lt;/strong> in place of &lt;em>master&lt;/em>.&lt;/p></description></item><item><title>Adding LASIR Features to DG</title><link>https://static.grinnell.edu/dlad-blog/posts/099-adding-lasir-features-to-dg/</link><pubDate>Tue, 12 Jan 2021 15:31:37 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/099-adding-lasir-features-to-dg/</guid><description>&lt;p>This afternoon I finally got back to trying to implement some features of &lt;a href="https://github.com/Islandora-Collaboration-Group/LASIR">LASIR&lt;/a>, the &lt;em>Liberal Arts Sprint for Institutional Repositories&lt;/em>. The information I found initially was not what I expected to encounter, and that left me scratching my head just a bit. Fortunately, a colleague at the &lt;a href="https://github.com/Islandora-Collaboration-Group">ICG&lt;/a> came through with the needed information and I immediately added it to my list of key resources. You can find those resources in my &lt;em>OneTab&lt;/em> at:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.one-tab.com/page/9OatzLo-TB6XuuizqbGrwA">https://www.one-tab.com/page/9OatzLo-TB6XuuizqbGrwA&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>And that&amp;rsquo;s a&amp;hellip; break. I hope to add some details, and more links, when I return.&lt;/p></description></item><item><title>Git Submodule Workflow in ISLE</title><link>https://static.grinnell.edu/dlad-blog/posts/098-git-submodule-workflow-in-isle/</link><pubDate>Mon, 07 Dec 2020 18:23:02 -0600</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/098-git-submodule-workflow-in-isle/</guid><description>&lt;p>In the past few days I&amp;rsquo;ve attempted to update the &amp;ldquo;staging&amp;rdquo; copy of &lt;em>Digital.Grinnell&lt;/em> at &lt;a href="https://dg-staging.grinnell.edu">https://dg-staging.grinnell.edu&lt;/a> and learned a valuable lesson regarding workflow around &lt;em>Git&lt;/em> and &lt;em>submodules&lt;/em>. Specifically, I found the following resource to be most helpful:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://intellipaat.com/community/9971/git-update-submodule-to-latest-commit-on-origin">https://intellipaat.com/community/9971/git-update-submodule-to-latest-commit-on-origin&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>In case that post ever disappers, here&amp;rsquo;s the gist of it&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>The &lt;code>git submodule update&lt;/code> command actually tells git that you simply want your submodules to each check out the commit already mentioned in the index of the superproject.&lt;/p>
&lt;p>If you want to update your submodules to the most recent commit available from their remote, you&amp;rsquo;ll try this directly within the submodules.&lt;/p></description></item><item><title>Production ISLE Installation: Migrate Existing Islandora Site - with Annotations</title><link>https://static.grinnell.edu/dlad-blog/posts/096-production-isle/</link><pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/096-production-isle/</guid><description>&lt;!--

&lt;div class="annotation">&lt;p>Attention: Take note that annotations stop where my process departed from this script in Step 16. Enter at your own risk beyond the annotation in Step 16!&lt;/p>
&lt;/div>

-->
&lt;p>This post is an addendum to earlier post &lt;a href="https://static.grinnell.edu/dlad-blog/posts/092-staging-isle/">092&lt;/a>. It is intended to chronicle my efforts to complete migration of our production instance of &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> from ISLE v1.1 to ISLE v1.5.1 on Linux node &lt;code>DGDocker1.grinnell.edu&lt;/code>. The remainder of this document is an annotated copy of &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/blob/master/docs/install/install-production-migrate.md">Production ISLE Installation: Migrate Existing Islandora Site&lt;/a>.&lt;/p>

&lt;div class="annotation">&lt;p>Annotations, with information specific to my experience with &lt;em>Digital.Grinnell&lt;/em> migration, appear in text blocks like this one.&lt;/p></description></item><item><title>Collaborating on Hugo Site Development</title><link>https://static.grinnell.edu/dlad-blog/posts/095-collaborating-on-hugo-site-development/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/095-collaborating-on-hugo-site-development/</guid><description>&lt;div class="original">&lt;p>I&amp;rsquo;ve nearly completed migration of all &lt;em>Grinnell College Libraries&amp;rsquo;&lt;/em> static sites to &lt;em>Azure&lt;/em> and I&amp;rsquo;m updating this post to reflect that move. Wherever possible I&amp;rsquo;ll strike-through outdated information &lt;strike>like this&lt;/strike>, and replace it with updated info.&lt;/p>
&lt;/div>

&lt;p>This post will instruct the reader to install necessary tools and engage the workflow I now use to develop and maintain a handful of &lt;em>Hugo&lt;/em> static websites. The list of sites now includes both professional, those owned and operated by &lt;a href="https://grinnell.edu">Grinnell College&lt;/a>, as well as &amp;ldquo;personal&amp;rdquo; sites that I develop, maintain and host myself.&lt;/p></description></item><item><title>Compact Build of dg.localdomain - Concise Instructions</title><link>https://static.grinnell.edu/dlad-blog/posts/094-compact-build-of-dg.localdomain/</link><pubDate>Tue, 20 Oct 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/094-compact-build-of-dg.localdomain/</guid><description>&lt;p>This post is an addendum to an earlier post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/087-rebuilding-isle-ld-again/">Local ISLE Installation: Migrate Existing Islandora Site - with Annotations&lt;/a>, where I exhaustively documented my workflow for building a local/development instance of ISLE to mimic the behavoir of &lt;em>Digital.Grinnell&lt;/em>.&lt;/p>
&lt;h2 id="goal">Goal&lt;/h2>
&lt;p>The goal of this project is to present a repeatable, minimal set of instructions for spinning up a safe, stand-alone, local/development instance of ISLE on any Mac running OS X.&lt;/p>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;p>This document assumes the user will be spinning up &lt;a href="https://dg.localdomain">https://dg.localdomain&lt;/a> on a Mac with a suitable &lt;code>DG-FEDORA&lt;/code> USB stick mounted and accessible. See my &lt;a href="https://gist.github.com/Digital-Grinnell/f0900e9af9341e67433633be3fa0895d">README.md&lt;/a> public gist for complete instructions regarding creation, updates and handling of such a USB stick. Additional prerequisites for running &lt;a href="https://dg.localdomain">https://dg.localdomain&lt;/a> can be found in ISLE documentation and in my &lt;a href="https://static.grinnell.edu/dlad-blog/posts/046-dg-fedora-a-portable-object-repository/">DG-FEDORA: A Portable FEDORA Repository&lt;/a> blog post.&lt;/p></description></item><item><title>Traefik and Acme.sh for DG-STAGING</title><link>https://static.grinnell.edu/dlad-blog/posts/093-traefik-and-acme.sh-for-dg-staging/</link><pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/093-traefik-and-acme.sh-for-dg-staging/</guid><description>&lt;p>This post is a follow-up to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/079-traefik-and-acme.sh-instead-of-dns-01/">Dockerized Traefik Host Using ACME DNS-01 Challenge&lt;/a> and &lt;a href="https://static.grinnell.edu/dlad-blog/posts/092-staging-isle/">Staging ISLE Installation: Migrate Existing Islandora Site - with Annotations&lt;/a>, specifically &lt;em>Step 11&lt;/em> in the later document. It introduces a &lt;em>Digital.Grinnell&lt;/em>-specific implementation of the &lt;em>Traefik&lt;/em> with &lt;em>Acme.sh&lt;/em>.&lt;/p>
&lt;h2 id="testing-with-mcfatemdocker-traefik2-acme-host">Testing with McFateM/docker-traefik2-acme-host&lt;/h2>
&lt;p>I started work on this implementation with a test, by cloning &lt;a href="https://github.com/McFateM/docker-traefik2-acme-host">https://github.com/McFateM/docker-traefik2-acme-host&lt;/a> and proceeding as directed in the repository&amp;rsquo;s &lt;a href="https://github.com/McFateM/docker-traefik2-acme-host/blob/master/README.md">README.md&lt;/a> document, as user &lt;code>islandora&lt;/code> on node &lt;em>DGDockerX&lt;/em>, like so:&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>DGDockerX Host Commands&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;code>cd ~&lt;/code> &lt;br/> &lt;code>git clone https://github.com/McFateM/docker-traefik2-acme-host host --recursive&lt;/code> &lt;br/> &lt;code>cd host&lt;/code>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h3 id="working-in-hostacme">Working in &lt;code>~/host/acme&lt;/code>&lt;/h3>
&lt;p>As suggested, I made a copy of the &lt;code>.env&lt;/code> file from the corresponding &lt;code>acme&lt;/code> directory on Grinnell&amp;rsquo;s &lt;code>dgdocker3.grinnell.edu&lt;/code> server, something like this:&lt;/p></description></item><item><title>Fixing 'Mixed Content' Errors</title><link>https://static.grinnell.edu/dlad-blog/posts/091-fixing-mixed-mode-errors/</link><pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/091-fixing-mixed-mode-errors/</guid><description>&lt;p>Last evening, just before the &lt;a href="https://en.wikipedia.org/wiki/Kansas_City_Chiefs">World Champion Kansas City Chiefs&lt;/a> kicked off the NFL&amp;rsquo;s 2020-21 season (I hope the season is healthy all the way into 2021), I attempted to update all the &lt;em>Drupal&lt;/em> contrib modules, and core, in my new &lt;a href="https://dg.localdomain">local instance of ISLE&lt;/a> as chronicled in the &lt;code>Next Steps&lt;/code> chapter of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/090-isle-local-migration-customization/">ISLE Local Migration Customization&lt;/a>. Ultimately that update process left me with a host of incorrect owner/group/permissions issues in the &lt;em>Drupal&lt;/em> code, and I was able to remedy those in short order. But that left me with lots of remaining &amp;lsquo;&lt;a href="https://developers.google.com/web/fundamentals/security/prevent-mixed-content/what-is-mixed-content">mixed content&lt;/a>&amp;rsquo;, or &amp;lsquo;mixed mode&amp;rsquo;, errors.&lt;/p></description></item><item><title>Staging ISLE Installation: Migrate Existing Islandora Site - with Annotations</title><link>https://static.grinnell.edu/dlad-blog/posts/092-staging-isle/</link><pubDate>Fri, 11 Sep 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/092-staging-isle/</guid><description>&lt;div class="annotation">&lt;p>Attention: Take note that annotations stop where my process departed from this script in Step 16. Enter at your own risk beyond the annotation in Step 16!&lt;/p>
&lt;/div>

&lt;p>This post is an addendum to earlier posts &lt;a href="https://static.grinnell.edu/dlad-blog/posts/087-rebuilding-isle-ld-again/">087&lt;/a> and &lt;a href="https://static.grinnell.edu/dlad-blog/posts/090-isle-local-migration-customization/">090&lt;/a>. It is intended to chronicle my efforts to migrate to a &lt;code>staging&lt;/code> instance of &lt;em>Digital.Grinnell&lt;/em> on Linux node &lt;code>DGDockerX.grinnell.edu&lt;/code>. The remainder of this document is an annotated copy of &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/blob/master/docs/install/install-staging-migrate.md">Staging ISLE Installation: Migrate Existing Islandora Site&lt;/a>.&lt;/p>

&lt;div class="annotation">&lt;p>Annotations, with information specific to my experience with &lt;em>Digital.Grinnell&lt;/em> migration, appear in text blocks like this one.&lt;/p></description></item><item><title>Local ISLE Installation: Migrate Existing Islandora Site - One-Time Customizations</title><link>https://static.grinnell.edu/dlad-blog/posts/090-isle-local-migration-customization/</link><pubDate>Mon, 07 Sep 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/090-isle-local-migration-customization/</guid><description>&lt;p>This post is an addendum to earlier &lt;a href="https://static.grinnell.edu/dlad-blog/posts/087-rebuilding-isle-ld-again/">post 087&lt;/a>. It is intended to chronicle my &lt;em>customization&lt;/em> efforts, necessary steps that follow the aforementioned document&amp;rsquo;s &lt;code>Step 11&lt;/code>, to migrate to a &lt;code>local development&lt;/code> instance of &lt;em>Digital.Grinnell&lt;/em> on my work-issued iMac, &lt;code>MA8660&lt;/code>, currently identified as &lt;code>MAD25W812UJ1G9&lt;/code>. Please refer to Steps 0 - 11 in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/087-rebuilding-isle-ld-again/">post 087&lt;/a> for background info.&lt;/p>

&lt;div class="original">&lt;p>Note that it &lt;strong>should NOT be necessary to repeat steps taken in this document&lt;/strong>. Pertinent changes made herein were saved into a new &lt;code>completed-install-local-migrate&lt;/code> branch of my &lt;a href="https://github.com/Digital-Grinnell/dg-islandora/">dg-islandora&lt;/a> project repository, effectively capturing all progress made within.&lt;/p></description></item><item><title>Stop Mac OS X from Requiring a Repeat of User Name</title><link>https://static.grinnell.edu/dlad-blog/posts/089-stop-macosx-from-requiring-user-name/</link><pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/089-stop-macosx-from-requiring-user-name/</guid><description>&lt;p>Ever since moving to a new college-controlled VPN client, &lt;em>Cisco AnyConnect&lt;/em>, for VPN access on August 1, 2020, I&amp;rsquo;ve had to &lt;strong>repeatedly&lt;/strong> enter both my username and system password every time I launch a VPN connection. The annoying prompt/dialog looked like this:&lt;/p>
&lt;link rel="stylesheet" href="https://static.grinnell.edu/dlad-blog/css/hugo-easy-gallery.css" />
&lt;div class="box" >
 &lt;figure itemprop="associatedMedia" itemscope itemtype="http://schema.org/ImageObject">
 &lt;div class="img">
 &lt;img itemprop="thumbnail" src="https://static.grinnell.edu/dlad-blog/images/post-089/Access-Keychain-Prompt.png" />
 &lt;/div>
 &lt;a href="https://static.grinnell.edu/dlad-blog/images/post-089/Access-Keychain-Prompt.png" itemprop="contentUrl">&lt;/a>
 &lt;figcaption>
 &lt;h4>Figure 1 &amp;middot; Keychain Access Prompt&lt;/h4>
 &lt;/figcaption>
 &lt;/figure>
&lt;/div>
&lt;p>Fortunately, I found &lt;a href="https://superuser.com/a/1306894">this post and answer&lt;/a> explaining how to enable Keychain Access without having to repeat the User Name twice each time. The suggested process is this:&lt;/p>

&lt;div class="original">&lt;p>Launch /Applications/Utilities/Keychain Access&lt;/p></description></item><item><title>Local ISLE Installation: Migrate Existing Islandora Site - with Annotations</title><link>https://static.grinnell.edu/dlad-blog/posts/087-rebuilding-isle-ld-again/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/087-rebuilding-isle-ld-again/</guid><description>&lt;p>This post is an addendum to earlier posts 021 and 058, with simiar titles. It is intended to chronicle my efforts to migrate to a &lt;code>local development&lt;/code> instance of &lt;em>Digital.Grinnell&lt;/em> on my work-issued iMac, &lt;code>MA8660&lt;/code>, currently identified as &lt;code>MAD25W812UJ1G9&lt;/code>.&lt;/p>
&lt;h2 id="goal">Goal&lt;/h2>
&lt;p>The goal of this project is once again to spin up a local Islandora stack using &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/">the ISLE project&lt;/a> following the guidance of the project&amp;rsquo;s &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/blob/master/docs/install/install-local-migrate.md">install-local-migrate&lt;/a> document. My process will be slightly different than documented since I&amp;rsquo;ve already created a pair of private &lt;a href="https://github.com/Digital-Grinnell/dg-isle/">dg-isle&lt;/a> and &lt;a href="https://github.com/Digital-Grinnell/dg-islandora/">dg-islandora&lt;/a> repositories. This workflow will also take steps to introduce elements like the &lt;a href="https://github.com/DigitalGrinnell/digital_grinnell_theme/">Digital Grinnell theme&lt;/a> and custom modules like &lt;a href="https://github.com/DigitalGrinnell/dg7/">DG7&lt;/a>. Once these pieces are in-place and working, I&amp;rsquo;ll begin adding other critical components as well as a robust set of data gleaned from &lt;a href="https://digital.grinnell.edu/">https://digital.grinnell.edu/&lt;/a>.&lt;/p></description></item><item><title>Synergy with a KM (Keyboard/Mouse) Switch: A Near-Perfect Combination</title><link>https://static.grinnell.edu/dlad-blog/posts/088-synergy-with-a-km-switch/</link><pubDate>Fri, 28 Aug 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/088-synergy-with-a-km-switch/</guid><description>&lt;div class="original">&lt;p>Update: September 4, 2020&lt;/p>
&lt;p>As of this morning my &lt;code>Synergy&lt;/code> solution stopped working and I could not easily get it back in-sync between machines. This has happened before, more than once, and it&amp;rsquo;s largely the reason I abandoned &lt;code>Synergy&lt;/code> in favor of &lt;code>Sharemouse&lt;/code>. But &lt;code>Sharemouse&lt;/code> was plagued with similar issues, and it absolutely didn&amp;rsquo;t work well with VPN active.&lt;/p>
&lt;p>The other factor today&amp;hellip; now that my GC iMac has a new &amp;ldquo;assigned identity&amp;rdquo;, I think the old system tag has to be removed from my config because &lt;code>Synergy&lt;/code> keeps expecting to find that hostname.&lt;/p></description></item><item><title>Islandora MODS Post-Processing</title><link>https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing/</link><pubDate>Fri, 24 Jul 2020 18:37:10 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 this optional, but recommended, sixth step was added to the workflow that is documented in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams&lt;/a> and &lt;a href="https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams: Technical Details&lt;/a>. This addtional workflow step comes in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;h2 id="purpose">Purpose&lt;/h2>
&lt;p>Many of the objects in &lt;em>Digital.Grinnell&lt;/em> are &amp;ldquo;shared&amp;rdquo; between two or more collections. For example, &lt;a href="https://digital.grinnell.edu/islandora/object/grinell:10361">grinnell:10361&lt;/a> can be found in both the &lt;a href="https://digital.grinnell.edu/islandora/object/grinnell:social-justice">&amp;ldquo;Social Justice&amp;rdquo;&lt;/a> and &lt;a href="https://digital.grinnell.edu/islandora/object/grinnell:student-scholarship">&amp;ldquo;Student Scholarship&amp;rdquo;&lt;/a> collections.&lt;/p>
&lt;p>This step in the workflow is designed to account for all of an object&amp;rsquo;s &amp;ldquo;duplicate&amp;rdquo; MODS record exports, no matter which collection(s) they appear in. The intent is to make the &amp;ldquo;duplicates&amp;rdquo; easy to recognize so that editors don&amp;rsquo;t spend time modifying the same record more than once.&lt;/p></description></item><item><title>Scheduled Updates for a Hugo Static Site</title><link>https://static.grinnell.edu/dlad-blog/posts/086-scheduled-updates-for-a-hugo-static-site/</link><pubDate>Sat, 18 Jul 2020 16:56:04 -0500</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/086-scheduled-updates-for-a-hugo-static-site/</guid><description>&lt;p>A few months ago I migrated a site, &lt;a href="https://compassroseband.net">The Compass Rose Band&lt;/a>, from Drupal to Hugo for my Uncle. Since then I have been maintaining the site, adding and removing dates, and updating the site about every other week. With the passage of time events on the site &amp;ldquo;automatically&amp;rdquo; move from &amp;ldquo;upcoming&amp;rdquo; to &amp;ldquo;past&amp;rdquo;, but since it is a &amp;ldquo;static&amp;rdquo; site, that only happens when I recompile and rebuild the site. So I needed to automate builds.&lt;/p>
&lt;p>I tried a few different ideas I&amp;rsquo;d heard about, including &lt;a href="http://crontab.org">crontab&lt;/a>, but on my Mac desktop I ended up settling on an &lt;a href="https://support.apple.com/guide/automator/welcome/mac">Automator&lt;/a> workflow tied to a &lt;em>Calendar&lt;/em> event.&lt;/p></description></item><item><title>Back in (Scarlet and) Black</title><link>https://static.grinnell.edu/dlad-blog/posts/083-back-in-scarlet-and-black/</link><pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/083-back-in-scarlet-and-black/</guid><description>&lt;p>Once upon a time this blog had an address of &lt;a href="https://static.grinnell.edu/blogs/McFateM">https://static.grinnell.edu/blogs/McFateM&lt;/a> and it used a theme called &lt;a href="https://github.com/vaga/hugo-theme-m10c">M10c&lt;/a>. Well, what was once is once again. If you read my &lt;a href="https://static.grinnell.edu/dlad-blog/posts/067-new-blog-style-and-features/">New Blog Style and Features&lt;/a> post you can learn a little more of this blog&amp;rsquo;s &amp;ldquo;interim&amp;rdquo; history.&lt;/p>
&lt;p>By the way, if you&amp;rsquo;re reading this post at &lt;a href="https://dlad.summittdweller.com">https://dlad.summittdweller.com&lt;/a>, then you&amp;rsquo;re missing out. &lt;em>If you are looking at that old blog you probably see something more like this:&lt;/em>&lt;/p>
&lt;p>&lt;img src="https://static.grinnell.edu/dlad-blog/images/post-083/dlad-blog.png" alt="DLAD Blog" title="The 'interim' DLAD Blog">&lt;/p>
&lt;p>Please jump to &lt;a href="https://static.grinnell.edu/blogs/McFateM">https://static.grinnell.edu/blogs/McFateM&lt;/a> and catch up as quick as you can! I think you&amp;rsquo;ll be happier in the end, I know I will.&lt;/p></description></item><item><title>How to Add a Collection to Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/084-how-to-add-a-collection-to-digital-grinnell/</link><pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/084-how-to-add-a-collection-to-digital-grinnell/</guid><description>&lt;p>So, you want to add a new collection or sub-collection (they are really the same thing) to &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a>, eh? It&amp;rsquo;s easy, but there are some things to consider before I show you how.&lt;/p>
&lt;h2 id="collection-guidelines">Collection Guidelines&lt;/h2>
&lt;p>There are no &amp;ldquo;formal&amp;rdquo; guidelines for the creation of a collection or sub-collection in &lt;em>Digital.Grinnell&lt;/em>, but I can think of a couple &amp;ldquo;informal&amp;rdquo; things to consider.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Are there or will there ever be enough objects, old and/or new, with something in common to warrant a new collection? How many is &amp;ldquo;enough&amp;rdquo;? I dunno, but anything fewer than a dozen individual objects is borderline at best, at least in my book.&lt;/p></description></item><item><title>Here There Be WARCs</title><link>https://static.grinnell.edu/dlad-blog/posts/082-here-there-be-warcs/</link><pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/082-here-there-be-warcs/</guid><description>&lt;p>The term &lt;code>WARC&lt;/code>, an abbreviation of &lt;a href="https://en.wikipedia.org/wiki/Web_ARChive">Web ARChive&lt;/a>, always reminds me of things like hobbits, elves, dark lords, and orcs, of course. But this post has nothing to do with those things so I need to clear my head and press on.&lt;/p>
&lt;p>A WARC is essentially a file format used to capture the content and organization of a web site. Recently, I was asked to add a pair of WARCs to &lt;em>Digital.Grinnell&lt;/em>. Doing so proved to be quite an adventure, but I am pleased to report that we now have these two objects to show for it:&lt;/p></description></item><item><title>New Host Config: Vulnerability Scan</title><link>https://static.grinnell.edu/dlad-blog/posts/081-new-host-config-vulnerability-scan/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/081-new-host-config-vulnerability-scan/</guid><description>&lt;p>Today I elected to run a vulnerability scan against our new instance of the &lt;code>docker-traefik2-acme-host&lt;/code> configuration that&amp;rsquo;s running on &lt;a href="https://static.grinnell.edu/whoami/">static.grinnell.edu&lt;/a>. The command I used, and the results, are posted below.&lt;/p>
&lt;pre tabindex="0">&lt;code>╭─islandora@dgdockerx ~
╰─$ /home/islandora/testssl.sh/testssl.sh static.grinnell.edu

###########################################################
 testssl.sh 3.0rc4 from https://testssl.sh/dev/

 This program is free software. Distribution and
 modification under GPLv2 permitted.
 USAGE w/o ANY WARRANTY. USE IT AT YOUR OWN RISK!

 Please file bugs @ https://testssl.sh/bugs/

###########################################################

 Using &amp;#34;OpenSSL 1.0.2-chacha (1.0.2k-dev)&amp;#34; [~183 ciphers]
 on dgdockerx:/home/islandora/testssl.sh/bin/openssl.Linux.x86_64
 (built: &amp;#34;Jan 18 17:12:17 2019&amp;#34;, platform: &amp;#34;linux-x86_64&amp;#34;)


 Start 2020-06-11 17:33:25 --&amp;gt;&amp;gt; 132.161.151.30:443 (static.grinnell.edu) &amp;lt;&amp;lt;--

 rDNS (132.161.151.30): vaf.grinnell.edu. rootstalk.grinnell.edu. static.grinnell.edu. rootstalk-static.grinnell.edu.
 Service detected: HTTP


 Testing protocols via sockets except NPN+ALPN

 SSLv2 not offered (OK)
 SSLv3 not offered (OK)
 TLS 1 offered
 TLS 1.1 offered
 TLS 1.2 offered (OK)
 TLS 1.3 offered (OK): final
 NPN/SPDY not offered
 ALPN/HTTP2 h2, http/1.1 (offered)

 Testing cipher categories

 NULL ciphers (no encryption) not offered (OK)
 Anonymous NULL Ciphers (no authentication) not offered (OK)
 Export ciphers (w/o ADH+NULL) not offered (OK)
 LOW: 64 Bit + DES, RC[2,4] (w/o export) not offered (OK)
 Triple DES Ciphers / IDEA offered (NOT ok)
 Average: SEED + 128+256 Bit CBC ciphers offered
 Strong encryption (AEAD ciphers) offered (OK)


 Testing robust (perfect) forward secrecy, (P)FS -- omitting Null Authentication/Encryption, 3DES, RC4

 PFS is offered (OK) TLS_AES_256_GCM_SHA384 TLS_CHACHA20_POLY1305_SHA256 ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES256-SHA
 ECDHE-RSA-CHACHA20-POLY1305 TLS_AES_128_GCM_SHA256 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-SHA
 Elliptic curves offered: prime256v1 secp384r1 secp521r1 X25519


 Testing server preferences

 Has server cipher order? yes (OK) -- only for &amp;lt; TLS 1.3
 Negotiated protocol TLSv1.3
 Negotiated cipher TLS_AES_256_GCM_SHA384, 253 bit ECDH (X25519)
 Cipher order
 TLSv1: ECDHE-RSA-AES256-SHA AES256-SHA ECDHE-RSA-AES128-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA
 TLSv1.1: ECDHE-RSA-AES256-SHA AES256-SHA ECDHE-RSA-AES128-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA
 TLSv1.2: ECDHE-RSA-AES256-GCM-SHA384 ECDHE-RSA-AES256-SHA ECDHE-RSA-CHACHA20-POLY1305 AES256-GCM-SHA384 AES256-SHA
 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES128-SHA AES128-GCM-SHA256 AES128-SHA ECDHE-RSA-DES-CBC3-SHA DES-CBC3-SHA
 TLSv1.3: TLS_AES_256_GCM_SHA384 TLS_CHACHA20_POLY1305_SHA256 TLS_AES_128_GCM_SHA256


 Testing server defaults (Server Hello)

 TLS extensions (standard) &amp;#34;session ticket/#35&amp;#34; &amp;#34;renegotiation info/#65281&amp;#34; &amp;#34;EC point formats/#11&amp;#34; &amp;#34;supported versions/#43&amp;#34;
 &amp;#34;key share/#51&amp;#34; &amp;#34;application layer protocol negotiation/#16&amp;#34;
 Session Ticket RFC 5077 hint no -- no lifetime advertised
 SSL Session ID support yes
 Session Resumption Tickets no, ID: no
 TLS clock skew Random values, no fingerprinting possible
 Signature Algorithm SHA256 with RSA
 Server key size RSA 2048 bits
 Server key usage Digital Signature, Key Encipherment
 Server extended key usage TLS Web Server Authentication, TLS Web Client Authentication
 Serial / Fingerprints 035B28222F66FCE82AB86834D316C249EDB3 / SHA1 385FFF215983EFA46B2CAFCA6768356348475307
 SHA256 F2A91B6B1BE83479550EE679AEA78B9551CA00D1D5BC0DA4B80D1FA1B4E3ED25
 Common Name (CN) static.grinnell.edu (CN in response to request w/o SNI: TRAEFIK DEFAULT CERT)
 subjectAltName (SAN) static.grinnell.edu
 Issuer Let&amp;#39;s Encrypt Authority X3 (Let&amp;#39;s Encrypt from US)
 Trust (hostname) Ok via SAN and CN (SNI mandatory)
 Chain of trust NOT ok (chain incomplete)
 EV cert (experimental) no
 &amp;#34;eTLS&amp;#34; (visibility info) not present
 Certificate Validity (UTC) 88 &amp;gt;= 30 days (2020-06-10 11:51 --&amp;gt; 2020-09-08 11:51)
 # of certificates provided 1
 Certificate Revocation List --
 OCSP URI http://ocsp.int-x3.letsencrypt.org
 OCSP stapling not offered
 OCSP must staple extension --
 DNS CAA RR (experimental) not offered
 Certificate Transparency yes (certificate extension)


 Testing HTTP header response @ &amp;#34;/&amp;#34;

 HTTP Status Code 200 OK
 HTTP clock skew 0 sec from localtime
 Strict Transport Security not offered
 Public Key Pinning --
 Server banner nginx/1.17.10
 Application banner --
 Cookie(s) (none issued at &amp;#34;/&amp;#34;)
 Security headers --
 Reverse Proxy banner --


 Testing vulnerabilities

 Heartbleed (CVE-2014-0160) not vulnerable (OK), no heartbeat extension
 CCS (CVE-2014-0224) not vulnerable (OK)
 Ticketbleed (CVE-2016-9244), experiment. not vulnerable (OK), reply empty
 ROBOT not vulnerable (OK)
 Secure Renegotiation (CVE-2009-3555) not vulnerable (OK)
 Secure Client-Initiated Renegotiation not vulnerable (OK)
 CRIME, TLS (CVE-2012-4929) not vulnerable (OK)
 BREACH (CVE-2013-3587) no HTTP compression (OK) - only supplied &amp;#34;/&amp;#34; tested
 POODLE, SSL (CVE-2014-3566) not vulnerable (OK)
 TLS_FALLBACK_SCSV (RFC 7507) Downgrade attack prevention supported (OK)
 SWEET32 (CVE-2016-2183, CVE-2016-6329) VULNERABLE, uses 64 bit block ciphers
 FREAK (CVE-2015-0204) not vulnerable (OK)
 DROWN (CVE-2016-0800, CVE-2016-0703) not vulnerable on this host and port (OK)
 make sure you don&amp;#39;t use this certificate elsewhere with SSLv2 enabled services
 https://censys.io/ipv4?q=F2A91B6B1BE83479550EE679AEA78B9551CA00D1D5BC0DA4B80D1FA1B4E3ED25 could help you to find out
 LOGJAM (CVE-2015-4000), experimental not vulnerable (OK): no DH EXPORT ciphers, no DH key detected with &amp;lt;= TLS 1.2
 BEAST (CVE-2011-3389) TLS1: ECDHE-RSA-AES256-SHA AES256-SHA ECDHE-RSA-AES128-SHA AES128-SHA ECDHE-RSA-DES-CBC3-SHA
 DES-CBC3-SHA
 VULNERABLE -- but also supports higher protocols TLSv1.1 TLSv1.2 (likely mitigated)
 LUCKY13 (CVE-2013-0169), experimental potentially VULNERABLE, uses cipher block chaining (CBC) ciphers with TLS. Check patches
 RC4 (CVE-2013-2566, CVE-2015-2808) no RC4 ciphers detected (OK)


 Testing 370 ciphers via OpenSSL plus sockets against the server, ordered by encryption strength

Hexcode Cipher Suite Name (OpenSSL) KeyExch. Encryption Bits Cipher Suite Name (IANA/RFC)
-----------------------------------------------------------------------------------------------------------------------------
 x1302 TLS_AES_256_GCM_SHA384 ECDH 253 AESGCM 256 TLS_AES_256_GCM_SHA384
 x1303 TLS_CHACHA20_POLY1305_SHA256 ECDH 253 ChaCha20 256 TLS_CHACHA20_POLY1305_SHA256
 xc030 ECDHE-RSA-AES256-GCM-SHA384 ECDH 521 AESGCM 256 TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
 xc014 ECDHE-RSA-AES256-SHA ECDH 521 AES 256 TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
 xcca8 ECDHE-RSA-CHACHA20-POLY1305 ECDH 521 ChaCha20 256 TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
 x9d AES256-GCM-SHA384 RSA AESGCM 256 TLS_RSA_WITH_AES_256_GCM_SHA384
 x35 AES256-SHA RSA AES 256 TLS_RSA_WITH_AES_256_CBC_SHA
 x1301 TLS_AES_128_GCM_SHA256 ECDH 253 AESGCM 128 TLS_AES_128_GCM_SHA256
 xc02f ECDHE-RSA-AES128-GCM-SHA256 ECDH 521 AESGCM 128 TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
 xc013 ECDHE-RSA-AES128-SHA ECDH 521 AES 128 TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
 x9c AES128-GCM-SHA256 RSA AESGCM 128 TLS_RSA_WITH_AES_128_GCM_SHA256
 x2f AES128-SHA RSA AES 128 TLS_RSA_WITH_AES_128_CBC_SHA
 xc012 ECDHE-RSA-DES-CBC3-SHA ECDH 521 3DES 168 TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
 x0a DES-CBC3-SHA RSA 3DES 168 TLS_RSA_WITH_3DES_EDE_CBC_SHA


 Running client simulations (HTTP) via sockets

 Android 4.2.2 TLSv1.0 ECDHE-RSA-AES256-SHA, 521 bit ECDH (P-521)
 Android 4.4.2 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 521 bit ECDH (P-521)
 Android 5.0.0 TLSv1.2 ECDHE-RSA-AES256-SHA, 521 bit ECDH (P-521)
 Android 6.0 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 256 bit ECDH (P-256)
 Android 7.0 TLSv1.2 ECDHE-RSA-CHACHA20-POLY1305, 253 bit ECDH (X25519)
 Chrome 65 Win 7 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 253 bit ECDH (X25519)
 Chrome 70 Win 10 TLSv1.3 TLS_AES_128_GCM_SHA256, 253 bit ECDH (X25519)
 Firefox 59 Win 7 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 253 bit ECDH (X25519)
 Firefox 62 Win 7 TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256, 253 bit ECDH (X25519)
 IE 6 XP No connection
 IE 7 Vista TLSv1.0 AES128-SHA, No FS
 IE 8 Win 7 TLSv1.0 AES128-SHA, No FS
 IE 8 XP TLSv1.0 DES-CBC3-SHA, No FS
 IE 11 Win 7 TLSv1.2 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 IE 11 Win 8.1 TLSv1.2 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 IE 11 Win Phone 8.1 TLSv1.2 AES128-SHA, No FS
 IE 11 Win 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Edge 13 Win 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Edge 13 Win Phone 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Edge 15 Win 10 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 253 bit ECDH (X25519)
 Safari 9 iOS 9 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Safari 9 OS X 10.11 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Safari 10 OS X 10.12 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Apple ATS 9 iOS 9 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 Tor 17.0.9 Win 7 TLSv1.0 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 Java 6u45 No connection
 Java 7u25 TLSv1.0 ECDHE-RSA-AES128-SHA, 256 bit ECDH (P-256)
 Java 8u161 TLSv1.2 ECDHE-RSA-AES256-SHA, 256 bit ECDH (P-256)
 Java 9.0.4 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)
 OpenSSL 1.0.1l TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 521 bit ECDH (P-521)
 OpenSSL 1.0.2e TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384, 256 bit ECDH (P-256)

 Done 2020-06-11 17:34:48 [ 85s] --&amp;gt;&amp;gt; 132.161.151.30:443 (static.grinnell.edu) &amp;lt;&amp;lt;--
&lt;/code>&lt;/pre>&lt;h2 id="controling-tls-ciphers">Controling TLS Ciphers&lt;/h2>
&lt;p>In previous server configs that used &lt;em>Traefik v1.x&lt;/em> I was able to eliminate some potential vulnerabilities by removing old, weak ciphers. In that old environment I used a few &lt;em>command:&lt;/em> options in the &lt;code>docker-compose.yml&lt;/code> file along with a declaration of stronger ciphers in a &lt;code>traefik.toml&lt;/code> file. That config change is documented in &lt;a href="https://static.grinnell.edu/dlad-blog/en/posts/005-removing-traefik-weak-ciphers">Removing Traefik Weak Ciphers&lt;/a>.&lt;/p></description></item><item><title>Host Config: docker-traefik2-acme-host</title><link>https://static.grinnell.edu/dlad-blog/posts/080-host-config-docker-traefik2-acme-host/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/080-host-config-docker-traefik2-acme-host/</guid><description>&lt;p>This post is celebrating the completion (really, is anything ever complete?) of a new server/host/stack deployment project: &lt;a href="https://github.com/McFateM/docker-traefik2-acme-host">docker-traefik2-acme-host&lt;/a>. In order to make this post really easy to read, I&amp;rsquo;m going to wrap it up in one bullet&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/McFateM/docker-traefik2-acme-host/blob/master/README.md">README.md&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>Should you ever encounter an error like the one below, be sure to ask your IT provider if they created the proper &lt;code>CNAME&lt;/code> record when creating your DNS entry.&lt;/p>
&lt;pre tabindex="0">&lt;code>[Tue Jun 30 20:53:50 UTC 2020] ohscribe.grinnell.edu:Verify error:DNS problem: NXDOMAIN looking up TXT for _acme-challenge.ohscribe.grinnell.edu - check that a DNS record exists for this domain
&lt;/code>&lt;/pre>&lt;p>That turned out to be the source of this error for me when I tried to obtain a cert for &lt;code>ohscribe.grinnell.edu&lt;/code> on node &lt;code>DGDocker3&lt;/code>.&lt;/p></description></item><item><title>Remote Connection to MA6879</title><link>https://static.grinnell.edu/dlad-blog/posts/078-remote-connection-to-ma6879/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/078-remote-connection-to-ma6879/</guid><description>&lt;p>&lt;em>MA6879&lt;/em> is the tag ID of the Mac Mini student-workstation in my &lt;em>Grinnell College&lt;/em> office in Burling Library. During the COVID-19 pandemic it&amp;rsquo;s the only Mac that I have access to on campus. But the Macs here in my home office are not allowed to run &lt;a href="https://edovia.com/en/screens-mac/">Screens 4&lt;/a>, the software that I formerly used to make remote connections between Macs. Fortunately, since the IP address of &lt;em>MA6879&lt;/em> is &amp;ldquo;static&amp;rdquo; and known (by me!), I can use built-in tools to make my screen-share and remote-control connections.&lt;/p></description></item><item><title>Traefik and Acme.sh Instead of DNS-01</title><link>https://static.grinnell.edu/dlad-blog/posts/079-traefik-and-acme.sh-instead-of-dns-01/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/079-traefik-and-acme.sh-instead-of-dns-01/</guid><description>&lt;p>This post is a follow-up to &lt;a href="https://static.grinnell.edu/dlad-blog/en/posts/071-dockerized-traefik-using-acme-dns-01">Dockerized Traefik Host Using ACME DNS-01 Challenge&lt;/a>. It introduces an alternative to the failed process that was proposed in that earlier post.&lt;/p>
&lt;blockquote>
&lt;p>Note that the following config-specific elements have been replaced below:&lt;/p>
&lt;ul>
&lt;li>6 occurances of &lt;code>?.grinnell.edu&lt;/code> now say &lt;code>example-1.grinnell.edu&lt;/code>, and&lt;/li>
&lt;li>2 occurances of &lt;code>?.info&lt;/code> now say &lt;code>example-2.info&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="new-proposal">New Proposal&lt;/h2>
&lt;p>On June 1 my colleage, Matt, suggested the following&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>As much as I would like to resolve the DNS-01 challenge using Traefik alone, I don&amp;rsquo;t believe it will support what we&amp;rsquo;re trying to do here. I&amp;rsquo;m a bit disappointed by that as Nginx makes this process very easy, and my reading through the Traefik documentation and my own tests lead me to believe that CNAME following is not currently supported in Traefik, and is basically impossible. Until the they allow for the verification domain to be specified as a provider option (in this case, specifying example-2.info as the domain for the Azure DNS provider), using the built-in ACME functionality in Traefik won&amp;rsquo;t work, no matter which DNS provider is in use.&lt;/p></description></item><item><title>Oral History Transcription Workflow</title><link>https://static.grinnell.edu/dlad-blog/posts/077-oral-history-transcription-workflow/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/077-oral-history-transcription-workflow/</guid><description>&lt;p>&lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> features a fair number of transcribed digital oral histories. Most are interviews conducted with Grinnelleans as they return to campus annualy for alumni &lt;a href="https://alumni.grinnell.edu/events/reunion-and-alumni-college">Reunion&lt;/a> or Grinnell&amp;rsquo;s &lt;a href="http://magazine.grinnell.edu/news/evolution-multicultural-reunion">Multicultural Reunion&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>What follows is largely sharable &amp;ldquo;public&amp;rdquo; content lifted from a &amp;ldquo;private&amp;rdquo; GitHub repository at &lt;a href="https://github.com/McFateM/OHScribe">https://github.com/McFateM/OHScribe&lt;/a>, the README.md and WORKFLOW.md files in particular.&lt;/p>
&lt;/blockquote>
&lt;h2 id="ohscribe">OHScribe!&lt;/h2>
&lt;p>&lt;a href="https://ohscribe.grinnell.edu">https://ohscribe.grinnell.edu&lt;/a> &lt;strong>Note: This link was disabled in the spring of 2020, but is working again as of July 1, 2020, on host DGDocker3.&lt;/strong>&lt;/p>
&lt;p>This is a &lt;em>Python 3&lt;/em> and &lt;em>Flask&lt;/em> web application designed to transform oral history transcripts, presumably created using &lt;a href="https://www.inqscribe.com">InqScribe&lt;/a>, into XML suitable for ingest into the &lt;strong>&lt;a href="https://github.com/Islandora-Labs/islandora_solution_pack_oralhistories">Islandora Oral Histories Solution Pack&lt;/a>&lt;/strong> to populate a TRANSCRIPT datastream and its derivatives. &lt;em>Islandora Oral Histories&lt;/em> and the aforementioned solution pack are commonly referred to as &lt;strong>IOH&lt;/strong> throughout this document.&lt;/p></description></item><item><title>Digital.Grinnell Custom MODS Display</title><link>https://static.grinnell.edu/dlad-blog/posts/076-digital.grinnell-custom-mods-display/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/076-digital.grinnell-custom-mods-display/</guid><description>&lt;p>&lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> has seen a lot of customization over the years, and quite a bit of it relates to how an object&amp;rsquo;s metadata, especially its &lt;a href="http://www.loc.gov/standards/mods/">MODS&lt;/a> metadata, is displayed. My aim for the past couple of years has been to remove as much customization as possible, but I&amp;rsquo;ve found it difficult to remove features of our MODS display because those features seem to be rather popular. This is particulary true of our compound object display.&lt;/p>
&lt;h2 id="custom-compoundchild-mods-display">Custom Compound/Child MODS Display&lt;/h2>
&lt;p>At present, May 28, 2020, the MODS display for a typical compound/child object in Digital.Grinnell looks something like the example image from &lt;a href="https://digital.grinnell.edu/islandora/object/grinnell:10365">grinnell:10365&lt;/a> included here:&lt;/p></description></item><item><title>Simplified Testing of Traefik 2 with ACME DNS-01 Challenge</title><link>https://static.grinnell.edu/dlad-blog/posts/074-simplified-testing-traefik-2-with-acme-dns-01/</link><pubDate>Tue, 19 May 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/074-simplified-testing-traefik-2-with-acme-dns-01/</guid><description>&lt;p>This post is a simplified and focused follow-up to &lt;a href="https://static.grinnell.edu/dlad-blog/en/posts/071-dockerized-traefik-using-acme-dns-01/">Dockerized Traefik Host Using ACME DNS-01 Challenge&lt;/a>.&lt;/p>
&lt;h2 id="simplify">Simplify&lt;/h2>
&lt;p>Today, 19-May-2020, I&amp;rsquo;m going to take a shot at simplifying my testing on &lt;code>dgdocker3.grinnell.edu&lt;/code> by removing unnecessary things and consolidating as much as possible to reduce clutter in the logs and get right to the point. I&amp;rsquo;m also going to have a look to see if there are additional logs that can tell give me more detail. &lt;strong>Everything&lt;/strong> used here, and everything that takes place here, will be found in a new directory, &lt;code>/opt/containers/test&lt;/code> on &lt;em>DGDocker3&lt;/em>.&lt;/p></description></item><item><title>Enhancing 'motd' with 'server-info'</title><link>https://static.grinnell.edu/dlad-blog/posts/072-enhancing-motd-with-server-info/</link><pubDate>Tue, 05 May 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/072-enhancing-motd-with-server-info/</guid><description>&lt;p>My memory isn&amp;rsquo;t what it used to be, but I have this blog. &amp;#x1f604; And on the handful of CentOS and Ubuntu servers that I maintain, I have my &lt;a href="https://github.com/McFateM/server-info">&lt;em>server-info&lt;/em>&lt;/a> script, my replacement for &lt;a href="'https://en.wikipedia.org/wiki/Motd_(Unix)'">&lt;em>motd&lt;/em>&lt;/a>. &amp;#x1f601;&lt;/p>
&lt;h2 id="requirements-_mdv_-and-_figlet_">Requirements: &lt;em>mdv&lt;/em> and &lt;em>figlet&lt;/em>&lt;/h2>
&lt;p>The &lt;em>server-info&lt;/em> script/command relies on a pair of utilities, namely &lt;a href="https://github.com/axiros/terminal_markdown_viewer">&lt;em>mdv&lt;/em>&lt;/a> and &lt;a href="http://www.figlet.org/">&lt;em>figlet&lt;/em>&lt;/a>.&lt;/p>
&lt;h2 id="the-_server-info_-script">The &lt;em>server-info&lt;/em> Script&lt;/h2>
&lt;p>You&amp;rsquo;ll find the script itself in &lt;a href="https://gist.github.com/McFateM/98a3247a388b826a16c7f985e1d0351c">this gist&lt;/a>. Sample installation of the script is documented below, and the content template can be found in &lt;a href="https://gist.github.com/McFateM/8a81e74be780697cf8ab6e63a707052f">this gist&lt;/a>.&lt;/p>
&lt;h2 id="sample-installation-on-dgdocker3-a-centos-7-host">Sample Installation on DGDocker3, a CentOS 7 Host&lt;/h2>
&lt;p>&lt;a href="https://dgdocker3.grinnell.edu">DGdocker3.Grinnell.edu&lt;/a> is a &lt;em>CentOS 7 / Docker&lt;/em> server that I use for development and testing at &lt;em>Grinnell College&lt;/em>. This is what I did on &lt;em>DGDocker3&lt;/em> to install my &lt;em>server-info&lt;/em> command:&lt;/p></description></item><item><title>Dockerized Traefik Host Using ACME DNS-01 Challenge</title><link>https://static.grinnell.edu/dlad-blog/posts/071-dockerized-traefik-using-acme-dns-01/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/071-dockerized-traefik-using-acme-dns-01/</guid><description>&lt;p>This post builds on &lt;a href="https://dlad.summittdweller.com/en/posts/042-my-dockerized-server-config/">My dockerized-server Config&lt;/a> and attempts to change what was a problematic &lt;a href="https://docs.traefik.io/https/acme/#httpchallenge">ACME HTTP-01 or httpChallenge&lt;/a> in &lt;a href="https://traefik.io">Traefik&lt;/a> and &lt;a href="https://letsencrypt.org">Let&amp;rsquo;s Encrypt&lt;/a> to an &lt;a href="https://docs.traefik.io/https/acme/#dnschallenge">ACME DNS-01 or dnsChallenge&lt;/a>. The problem with the old &lt;em>HTTP-01&lt;/em> or &lt;em>httpChallenge&lt;/em> is that it requires the creation of a valid and widely accessible &amp;ldquo;A&amp;rdquo; record in our DNS &lt;em>before&lt;/em> the creation of a cert; the record has to be in place so that the &lt;em>Let&amp;rsquo;s Encrypt&lt;/em> CA-server can find it to confirm that the request is valid. However, doing this puts the cart-before-the-horse, so-to-speak, since we like to have a valid cert in place &lt;em>before&lt;/em> we add a new DNS record.&lt;/p></description></item><item><title>Exporting, Editing, &amp; Replacing MODS Datastreams: Technical Details</title><link>https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>. See my new post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing/">Islandora MODS Post Processing&lt;/a> for complete details.&lt;/p>
&lt;/blockquote>
&lt;h1 id="a-5-step-workflow">A 5-Step Workflow&lt;/h1>
&lt;p>This document is follow-up, with technical details, to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams&lt;/a>, post 069, in my blog. In case you missed it, the aforementioned post was written specifically for metadata editors working on the 2020 &lt;em>Grinnell College Libraries&lt;/em> review of &lt;em>Digital Grinnell&lt;/em> MODS metadata.&lt;/p></description></item><item><title>Exporting, Editing, &amp; Replacing MODS Datastreams</title><link>https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/069-exporting-editing-replacing-mods-datastreams/</guid><description>&lt;blockquote>
&lt;p>Attention: On 21-May-2020 an optional, but recommended, sixth step was added to this workflow in the form of a new &lt;em>Drush&lt;/em> command: &lt;em>islandora_mods_post_processing&lt;/em>, an addition to my previous work in &lt;a href="https://github.com/DigitalGrinnell/islandora_mods_via_twig">islandora_mods_via_twig&lt;/a>. See my new post, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/075-islandora-mods-post-processing">Islandora MODS Post Processing&lt;/a> for complete details.&lt;/p>
&lt;/blockquote>
&lt;p>The transition to distance learning, social distancing, and more remote work at &lt;em>Grinnell College&lt;/em> in the wake of the &lt;em>COVID-19&lt;/em> pandemic may afford &lt;em>GC Libraries&lt;/em> an opportunity to do some overdue and necessary metadata cleaning in &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a>.&lt;/p>
&lt;h1 id="a-5-step-workflow">A 5-Step Workflow&lt;/h1>
&lt;p>This turned out to be a much more difficult undertaking than I imagined, but as of mid-April, 2020, I have a 5-step workflow that actually works. This post will introduce all five steps, but only provides details for Step 3, &lt;a href="#editing-a-modstsv-file">Editing a MODS TSV File&lt;/a>, the portion that metadata editors need to be most aware of. All technical details, as well as steps 1, 2, 4 and 5, will be addressed in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/070-exporting-editing-replacing-mods-datastreams-technical-details/">Exporting, Editing, &amp;amp; Replacing MODS Datastreams: Technical Details&lt;/a>.&lt;/p></description></item><item><title>Updating DG's Collection Views</title><link>https://static.grinnell.edu/dlad-blog/posts/068-updating-dgs-collection-views/</link><pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/068-updating-dgs-collection-views/</guid><description>&lt;p>&lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> employs a custom-built &lt;em>Drupal&lt;/em> &amp;ldquo;view&amp;rdquo; we call the &lt;em>dg7 Collection View&lt;/em>; it&amp;rsquo;s part of the code in our custom &lt;a href="https://github.com/DigitalGrinnell/dg7">dg7 module&lt;/a> where all of &lt;em>Digital.Grinnell&lt;/em>&amp;rsquo;s hook implementations are also defined. Experience leads me to beleive that keeping a complex &lt;em>Drupal&lt;/em> view in code is prudent, but overriding that code with a database copy of the view helps tremendously in terms of system performance. So, I recommend keeping the view code in the module, but that means that when significant changes are made, like the addition of a new colleciton, the code should be updated in the database to speed things up. &lt;em>Digital.Grinnell&lt;/em> employs the following workflow to keep the view in code, but allow it to be selectively updated in the database as needed:&lt;/p></description></item><item><title>New Blog Style and Features</title><link>https://static.grinnell.edu/dlad-blog/posts/067-new-blog-style-and-features/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/067-new-blog-style-and-features/</guid><description>&lt;p>Welcome to my new blog theme/style with new features. All of the content, aka &amp;lsquo;posts&amp;rsquo;, from my old blog have been moved here, but there are still lots of remnants of the new theme, &lt;a href="https://themes.gohugo.io/theme/hugo-theme-zzo/en">Zzo&lt;/a>, lurking here. Please be patient with this new format while I work to fully implement all the features that this setup provides.&lt;/p>
&lt;p>Also, thank you, Mackenzie. My daughter played an important role in helping me with this transition.&lt;/p>
&lt;p>And it&amp;rsquo;s time to do some real work&amp;hellip; I&amp;rsquo;ll be back to share more here soon. &amp;#x1f604;&lt;/p></description></item><item><title>Archiving What Git Ignores</title><link>https://static.grinnell.edu/dlad-blog/posts/066-archiving-what-git-ignores/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/066-archiving-what-git-ignores/</guid><description>&lt;p>I love &lt;em>git&lt;/em> and &lt;em>GitHub&lt;/em>, and I can certainly appreciate the usefullness of &lt;em>.gitignore&lt;/em>, but there are times when I&amp;rsquo;d really like to move an ENTIRE project to a new home. I have in my head a process that might play out like this&amp;hellip;&lt;/p>
&lt;ol>
&lt;li>Fetch a list of all the files and directories that &lt;em>.gitignore&lt;/em> is ignoring.&lt;/li>
&lt;li>Pass that list to a &lt;em>tar&lt;/em> or &lt;em>gzip&lt;/em> command (maybe two of them) &lt;strong>with encryption&lt;/strong> to create a secure, compressed archive.&lt;/li>
&lt;li>Commit the archive to the project repo in &lt;em>GitHub&lt;/em>, or keep it in a safe place for restoration in the future.&lt;/li>
&lt;li>Navigate in your terminal to a target and restore the archive using the&lt;/li>
&lt;/ol>
&lt;h3 id="step-1">Step 1&lt;/h3>
&lt;p>Ok, the first step looks pretty easy. According to &lt;a href="https://stackoverflow.com/a/1446609">this &lt;em>StackOverflow&lt;/em> answer&lt;/a> we can use one or two &lt;em>git&lt;/em> commands to do the trick, specifically:&lt;/p></description></item><item><title>How to Create a New GitHub Repo from an Existing Branch</title><link>https://static.grinnell.edu/dlad-blog/posts/065-create-new-github-project-from-a-branch/</link><pubDate>Wed, 26 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/065-create-new-github-project-from-a-branch/</guid><description>&lt;p>I just found a handy &lt;em>git&lt;/em>/&lt;em>GitHub&lt;/em> workflow in a &lt;a href="https://www.quora.com">Quora&lt;/a> post titled &lt;a href="https://www.quora.com/How-do-I-create-a-new-GitHub-repository-from-a-branch-in-an-existing-repository">&amp;ldquo;How do I create a new GitHub repository from a branch in an existing repository?&amp;rdquo;&lt;/a>. And I used it, successfully, to create a new &lt;em>GitHub&lt;/em> repo for my updated &lt;em>Drupal 8&lt;/em> rendition of the &lt;a href="https://Wieting.TamaToledo.com">Wieting Theatre&amp;rsquo;s website&lt;/a>.&lt;/p>
&lt;p>The new &lt;em>GitHub&lt;/em> repo is &lt;a href="https://github.com/SummittDweller/wieting-D8-DO">wieting-D8-DO&lt;/a> and it was created from the &lt;code>wieting&lt;/code> branch of &lt;a href="https://github.com/SummittDweller/docker-compose-drupal">docker-compose-drupal&lt;/a>.&lt;/p>
&lt;p>The commands I used looked something like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>cd ~/GitHub
git clone https://github.com/SummittDweller/docker-compose-drupal.git
cd docker-compose-drupal
git checkout master
git reset --hard origin/wieting
git checkout wieting
git remote rm origin
git remote add origin https://github.com/SummittDweller/wieting-D8-DO.git
git config user.name &amp;#34;SummittDweller&amp;#34;
git config user.email summitt.dweller@gmail.com
git push -u origin master
&lt;/code>&lt;/pre>&lt;p>And that&amp;rsquo;s a wrap&amp;hellip; until next time. &amp;#x1f604;&lt;/p></description></item><item><title>Migration to Lando</title><link>https://static.grinnell.edu/dlad-blog/posts/064-migration-to-lando/</link><pubDate>Mon, 17 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/064-migration-to-lando/</guid><description>&lt;p>I have ITS tickets, for seemingly simple DNS changes, that are now more than a month old, and because of that I&amp;rsquo;ve taken steps to try and do some &lt;em>ISLE&lt;/em> staging work on one of my &lt;em>DigitalOcean&lt;/em> droplets, namely &lt;em>summitt-services-droplet-01&lt;/em>. In order to accommodate that I&amp;rsquo;ve moved nearly all of the sites and services from that droplet to my other, &lt;em>summitt-dweller-DO-docker&lt;/em>. The site migration was a smooth process except for &lt;a href="https://wieting.tamatoledo.com">https://Wieting.TamaToledo.com&lt;/a>. That &lt;em>Drupal 8&lt;/em> site has been difficult to upgrade and migrate largely because it was deployed using my old &lt;em>Port-Ability&lt;/em> scripts, and about a year ago I scrapped &lt;em>Port-Ability&lt;/em> in favor of &lt;a href="https://docksal.io">Docksal&lt;/a>, but I never got around to moving that particular site to a &lt;em>Docksal&lt;/em> environment. Well, now I&amp;rsquo;m finding it almost impossible to complete that migration to &lt;em>Docksal&lt;/em>.&lt;/p></description></item><item><title>Installing ZSH in Catalina</title><link>https://static.grinnell.edu/dlad-blog/posts/063-installing-zsh-in-catalina/</link><pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/063-installing-zsh-in-catalina/</guid><description>&lt;p>These days I like to do all my terminal/command-line work in &lt;em>zsh&lt;/em>, more specifically, with &lt;a href="https://ohmyz.sh/">Oh My ZSH!&lt;/a> and the &lt;a href="https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/bira.zsh-theme">bira&lt;/a> theme. This &lt;a href="https://static.grinnell.edu/dlad-blog/posts/044-installing-zsh-in-centos/">previous post&lt;/a> described the process I used on each of my &lt;em>Linux&lt;/em> servers, and this post is similar, but written specifically for my &lt;em>Catalina&lt;/em> (&lt;em>Macintosh OS X v10.15.x&lt;/em>), workstations.&lt;/p>
&lt;p>This is how I installed and configured &lt;em>zsh&lt;/em>, and some other goodies, on my student &lt;em>Mac Mini&lt;/em> workstation, &lt;code>MA6879&lt;/code>&amp;hellip;&lt;/p>
&lt;pre tabindex="0">&lt;code>brew update
brew install nano zsh
chsh -s /bin/zsh mark
exit # log back in after this
echo $SHELL
brew install wget git hugo docker # Docker and Hugo added just for good measure
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
source ~/.zshrc
cd ~/.oh-my-zsh/themes/
ls -a
nano ~/.zshrc # In the editor add (or replace similar) the following lines but without the leading #
 # ZSH_THEME=&amp;#39;bira&amp;#39;
 # plugins=(git extract web-search yum git-extras docker)
exit # log back in after this
&lt;/code>&lt;/pre>&lt;p>And that&amp;rsquo;s a wrap&amp;hellip; until next time. &amp;#x1f604;&lt;/p></description></item><item><title>Hugo, Goldmark and CommonMark Compliance</title><link>https://static.grinnell.edu/dlad-blog/posts/061-hugo-and-commmonmark-compliance/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/061-hugo-and-commmonmark-compliance/</guid><description>&lt;p>Just making a note here that &lt;a href="https://gohugo.io">Hugo&lt;/a>, as of version &lt;code>0.60.0&lt;/code>, is now using the &lt;a href="https://github.com/yuin/goldmark/">Goldmark&lt;/a> markdown rendering library, and that library is &lt;a href="https://spec.commonmark.org/">CommonMark&lt;/a> compliant. The official word, from &lt;a href="https://gohugo.io/getting-started/configuration-markup/#goldmark">this document&lt;/a> states that:&lt;/p>

&lt;div class="original">&lt;p>Goldmark is from Hugo 0.60 the default library used for Markdown. It’s fast, it’s CommonMark compliant and it’s very flexible. Note that the feature set of Goldmark vs Blackfriday isn’t the same; you gain a lot but also lose some, but we will work to bridge any gap in the upcoming Hugo versions.&lt;/p></description></item><item><title>Staging Digital.Grinnell (DG) on DigitalOcean (DO)</title><link>https://static.grinnell.edu/dlad-blog/posts/062-testing-dg-staging-on-digitalocean/</link><pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/062-testing-dg-staging-on-digitalocean/</guid><description>&lt;p>ISLE v1.3.0 has been running on my staging server, &lt;code>DGDockerX&lt;/code>, for months now and it seems to be performing as-expected with one exception&amp;hellip; when I try to import a batch of objects using IMI, the &lt;em>Islandora Multi-Importer&lt;/em>, I get the following error:&lt;/p>
&lt;pre tabindex="0">&lt;code>The website encountered an unexpected error. Please try again later.
&lt;/code>&lt;/pre>&lt;p>Examinations of &lt;a href="https://isle-stage.grinnell.edu/admin/reports/dblog">Recent log messages&lt;/a> seem to point to &lt;em>DNS&lt;/em> issues that I&amp;rsquo;m unable to overcome because I have no control over our &lt;em>DNS&lt;/em> records, campus networking, or firewalls. So this post is intended to chronicle steps I&amp;rsquo;m taking to stand-up an instance of &lt;a href="https://github.com/Digital-Grinnell/dg-isle">dg-isle&lt;/a> and &lt;a href="https://github.com/Digital-Grinnell/dg-islandora">dg-islandora&lt;/a> on a &amp;ldquo;clean&amp;rdquo; &lt;em>DigitalOcean&lt;/em> droplet, namely &lt;em>summitt-services-droplet-01&lt;/em>, that I have been leasing for the past couple of years.&lt;/p></description></item><item><title>ISLE Workflow Test</title><link>https://static.grinnell.edu/dlad-blog/posts/060-isle-workflow-test/</link><pubDate>Mon, 27 Jan 2020 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/060-isle-workflow-test/</guid><description>&lt;p>ISLE v1.3.0 has been running on my staging server, &lt;code>DGDockerX&lt;/code>, for about 6 weeks now and it seems to be performing as-expected with one exception&amp;hellip; when I try to import a batch of objects using IMI, the &lt;em>Islandora Multi-Importer&lt;/em>, I get the following error:&lt;/p>
&lt;pre tabindex="0">&lt;code>The website encountered an unexpected error. Please try again later.
&lt;/code>&lt;/pre>&lt;p>An examination of &lt;a href="https://isle-stage.grinnell.edu/admin/reports/dblog">Recent log messages&lt;/a> shows&amp;hellip;&lt;/p>
&lt;pre tabindex="0">&lt;code>GuzzleHttp\Exception\ConnectException: cURL error 6: Could not resolve host: sheets.googleapis.com (see https://curl.haxx.se/libcurl/c/libcurl-errors.html) in GuzzleHttp\Handler\CurlFactory::createRejection() (line 200 of /var/www/html/sites/all/modules/islandora/islandora_multi_importer/vendor/guzzlehttp/guzzle/src/Handler/CurlFactory.php).
&lt;/code>&lt;/pre>&lt;h2 id="engaging-the-local-workflow">Engaging the Local Workflow&lt;/h2>
&lt;p>Since I&amp;rsquo;m not at all sure what&amp;rsquo;s wrong, I feel like I need to rewind my process a bit and try to reproduce the same configuration, and error, on a &lt;strong>local&lt;/strong> instance of this ISLE stack. This post will chronicle the steps I take to do so.&lt;/p></description></item><item><title>Pushing ISLE to Staging</title><link>https://static.grinnell.edu/dlad-blog/posts/059-pushing-isle-to-staging/</link><pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/059-pushing-isle-to-staging/</guid><description>&lt;p>This post chronicles the steps I took to push my local &lt;code>dg.localdomain&lt;/code> project, an ISLE v1.3.0 build, to staging on node &lt;code>DGDockerX&lt;/code> as &lt;code>https://isle-stage.grinnell.edu&lt;/code> using my &lt;a href="https://github.com/Digital-Grinnell/dg-isle">dg-isle&lt;/a> and &lt;a href="https://github.com/Digital-Grinnell/dg-islandora">dg-islandora&lt;/a> repositories.&lt;/p>
&lt;h2 id="directories">Directories&lt;/h2>
&lt;p>I&amp;rsquo;ll begin by opening a terminal on the staging host, &lt;code>DGDockerX&lt;/code> as user &lt;code>islandora&lt;/code>. Then I very carefully (note the use of the &lt;code>--recursive&lt;/code> flags!) clone the aforementioned projects to &lt;code>DGDockerX&lt;/code> like so:&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Host / DGDockerX Commands&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>cd /opt &lt;br/> git clone &amp;ndash;recursive &lt;a href="https://github.com/Digital-Grinnell/dg-isle.git">https://github.com/Digital-Grinnell/dg-isle.git&lt;/a> &lt;br/> git clone &amp;ndash;recursive &lt;a href="https://github.com/Digital-Grinnell/dg-islandora.git">https://github.com/Digital-Grinnell/dg-islandora.git&lt;/a> &lt;br/> cd dg-isle &lt;br/> git checkout staging&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="one-useful-git-config-change">One Useful Git Config Change&lt;/h2>
&lt;p>One thing I learned during this process is that all of the &lt;code>dg-isle&lt;/code> config files that I’ve modified and/or mapped into the containers show up as “modified” when I do a &lt;code>git status&lt;/code> on the host. The only apparent “modification” is that these are all owned on the host by &lt;code>mcfatem:mcfatem&lt;/code>, but prior to spin-up these were owned by &lt;code>islandora:islandora&lt;/code>. The files/directories are:&lt;/p></description></item><item><title>Rebuilding ISLE-ld (for Local Development)</title><link>https://static.grinnell.edu/dlad-blog/posts/058-rebuilding-isle-ld/</link><pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/058-rebuilding-isle-ld/</guid><description>&lt;p>This post replaces my earlier post 021 with the same title. It is intended to chronicle my efforts to build a new ISLE v1.3.0 &lt;code>local development&lt;/code> instance of &lt;em>Digital.Grinnell&lt;/em> on my work-issued MacBook Air, &lt;code>MA7053&lt;/code>.&lt;/p>
&lt;h2 id="goal">Goal&lt;/h2>
&lt;p>The goal of this project is to spin up a pristine, local Islandora stack using &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/">the ISLE project&lt;/a> at &lt;a href="https://github.com/Digital-Grinnell/dg-isle/">https://github.com/Digital-Grinnell/dg-isle/&lt;/a>, then introduce elements like the &lt;a href="https://github.com/DigitalGrinnell/digital_grinnell_theme/">Digital Grinnell theme&lt;/a> and custom modules like &lt;a href="https://github.com/DigitalGrinnell/dg7/">DG7&lt;/a>. Once these pieces are in-place and working, I&amp;rsquo;ll begin adding other critical components as well as a robust set of data gleaned from &lt;a href="https://digital.grinnell.edu/">https://digital.grinnell.edu/&lt;/a>.&lt;/p></description></item><item><title>Granular ISLE Customization: Install 'Backup and Migrate'</title><link>https://static.grinnell.edu/dlad-blog/posts/057-granular-isle-customization-instal-backup-and-migrate/</link><pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/057-granular-isle-customization-instal-backup-and-migrate/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu/">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customization-series-guidelines/">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post we will install &lt;em>&lt;em>Backup and Migrate&lt;/em>&lt;/em>, a tremendous &lt;em>Drupal&lt;/em> module that I use extensively for backup, restoration, migration and maintenance of &lt;em>Digital.Grinnell&lt;/em>.&lt;/p>
&lt;h2 id="install-and-enable-the-_backup-and-migrate_-module-using-_drush_">Install and Enable the &lt;em>Backup and Migrate&lt;/em> Module using &lt;em>Drush&lt;/em>&lt;/h2>
&lt;p>&lt;em>DG7&lt;/em> is installed and enabled in the same manner as most &lt;em>Drupal&lt;/em> or &lt;em>Islandora&lt;/em> contrib modules, like so:&lt;/p></description></item><item><title>How to Work with Git</title><link>https://static.grinnell.edu/dlad-blog/posts/056-how-to-work-with-git/</link><pubDate>Tue, 19 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/056-how-to-work-with-git/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Credits: This document is an abstraction of some &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/wiki/How-to-Work-with-Git">fine documentation&lt;/a> authored and posted by my &lt;a href="https://github.com/Islandora-Collaboration-Group">ICG&lt;/a> colleague and friend, &lt;a href="https://github.com/dwk2">David Keiser-Clark&lt;/a>.&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="icg-git-workflow-how-to-work-with-git">ICG Git Workflow: How to work with Git&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>The examples in this document use my work with the Islandora Collaboration Group&amp;rsquo;s (ICG) &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools">ISLE-Drupal-Build-Tools&lt;/a> repository, as well as &lt;a href="https://github.com/Digital-Grinnell/ISLE-Drupal-Build-Tools">my fork&lt;/a> and local clone of that repository.&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>I recommend having a look at the &lt;a href="https://help.github.com/en/github/getting-started-with-github/github-glossary">GitHub Glossary&lt;/a> for a list of terms used frequently in this post, and many of the referenced documents.&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>The terms &lt;code>original&lt;/code>, &lt;code>canonical&lt;/code>, and &lt;code>upstream&lt;/code> are also used in this post to describe the &lt;em>GitHub&lt;/em> repository at the root of the project being managed.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Configuration: In most cases you will do Steps 1-3 only once! If you move to a new machine execute Steps 2-3 only.&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Only &amp;ldquo;fork&amp;rdquo; once! Do not repeat Step 1 if you&amp;rsquo;ve already forked the original/canonical repo.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Only &amp;ldquo;clone&amp;rdquo; once! Do not repeat Step 2 if you already have a local clone of your fork.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Only add this remote once! Do not perform this step if your local repo already has an &lt;code>upstream&lt;/code> remote.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;ol>
&lt;li>Always &lt;em>fork&lt;/em> the repo (repository) you are working on.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>This is accomplished by logging into your &lt;em>GitHub&lt;/em> account and selecting &lt;strong>Fork&lt;/strong> near the top right of the repo&amp;rsquo;s page.
&lt;ul>
&lt;li>Navigate your browser to the &lt;em>GitHub&lt;/em> project you wish to work on. Example: &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools">https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools&lt;/a>&lt;/li>
&lt;li>Click the &lt;strong>Fork&lt;/strong> button near the top right of the repo&amp;rsquo;s &lt;em>GitHub&lt;/em> page.&lt;/li>
&lt;li>This will either create a new fork in your own &lt;em>GitHub&lt;/em> account, or prompt you to choose an account if you have more than one. In either case, make a note of where the fork is created! In this document we&amp;rsquo;ll reference your fork&amp;rsquo;s URI as &lt;code>upstream&lt;/code>. Example: &lt;a href="https://github.com/Digital-Grinnell/ISLE-Drupal-Build-Tools">https://github.com/Digital-Grinnell/ISLE-Drupal-Build-Tools&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>Clone your fork down to your local machine.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Navigate your browser to the fork. Example: &lt;a href="https://github.com/Digital-Grinnell/ISLE-Drupal-Build-Tools">https://github.com/Digital-Grinnell/ISLE-Drupal-Build-Tools&lt;/a>&lt;/li>
&lt;li>Click on the &lt;strong>Clone&lt;/strong> button to copy the fork&amp;rsquo;s URI to your clipboard.&lt;/li>
&lt;li>Open terminal/shell/powershell/cmd, navigate to your preferred project &amp;ldquo;parent&amp;rdquo; directory, and &lt;code>git clone &amp;lt;paste from clipboard&amp;gt;&lt;/code>.&lt;/li>
&lt;li>Change into the directory (&lt;code>cd&lt;/code>) with the files you just cloned.&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>Before you start working, add an &lt;code>upstream&lt;/code> pointer to the original/canonical repo that you forked.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Navigate your browser back to the original/canonical &lt;em>GitHub&lt;/em> project. Example: &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools">https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools&lt;/a>&lt;/li>
&lt;li>From this repo, NOT your fork or local clone, click on the &lt;strong>Clone&lt;/strong> button and copy the &lt;em>https&lt;/em> URI to your clipboard.&lt;/li>
&lt;li>In terminal/shell/powershell/cmd enter &lt;code>git remote add upstream &amp;lt;paste from clipboard&amp;gt;&lt;/code>.&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Make certain your &lt;code>master&lt;/code> branches are even with the original/canonical &lt;code>master&lt;/code>&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;ol start="4">
&lt;li>STOP! Get up-to-date before you do anything, fetch your remotes so your local clone has the most recent commits.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Change into the directory (&lt;code>cd&lt;/code>) with the files you cloned.&lt;/li>
&lt;li>In terminal/shell/powershell/cmd enter &lt;code>git fetch --all&lt;/code>.&lt;/li>
&lt;/ul>
&lt;ol start="5">
&lt;li>Checkout and pull the &lt;code>upsteam master&lt;/code> to your local &lt;code>master&lt;/code> branch.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Checkout your master: &lt;code>git checkout master&lt;/code>&lt;/li>
&lt;li>Pull the &lt;code>upstream&lt;/code> master into yours so your local is up-to-date: &lt;code>git pull upstream master&lt;/code>&lt;/li>
&lt;li>Push your local &lt;code>master&lt;/code> branch BACK to your fork in &lt;em>GitHub&lt;/em>.
&lt;ul>
&lt;li>If all is well and your &lt;code>git pull...&lt;/code> resulted in a fast-forward or &amp;ldquo;Already up to date.&amp;rdquo;, then: &lt;code>git push origin master&lt;/code>&lt;/li>
&lt;li>If your &lt;code>git pull...&lt;/code> did not fast-forward and a merge message appeared, then there were differences in your branches. Never work on &lt;code>master&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Create an &lt;em>issue&lt;/em> and a topic/fix/enhancement/document &lt;em>branch&lt;/em> for your work, and have at!&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;/tbody>
&lt;/table>
&lt;ol start="6">
&lt;li>Create an &lt;em>issue&lt;/em> for your work.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Navigate your browser to the original/canonical &lt;em>GitHub&lt;/em> project you wish to work on. Example: &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools">https://github.com/Islandora-Collaboration-Group/ISLE-Drupal-Build-Tools&lt;/a>&lt;/li>
&lt;li>Find and open the &lt;code>Issues&lt;/code> tab (its icon is an exclamation point in a circle) near the top of the page.&lt;/li>
&lt;li>Look through the list of all issues, both &lt;code>Open&lt;/code> and &lt;code>Closed&lt;/code>, for any mention of the problem you wish to solve.
&lt;ul>
&lt;li>If you find an existing issue, study it and determine if you can add your work to the existing issue.&lt;/li>
&lt;li>If an appropriate existing issue is not found, click &lt;code>New issue&lt;/code> to create one and describe the problem you will be attacking.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Take note of the new, or existing, sequential number assigned to your issue. In subsequent steps you should refer to your issue using its number (Example: #20) in references like these examples: &lt;code>#20&lt;/code>, &lt;code>issue-20&lt;/code>.&lt;/li>
&lt;/ul>
&lt;ol start="7">
&lt;li>Create your branch and check it out.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Create a branch with: &lt;code>git branch &amp;lt;helpful and identifying name&amp;gt;&lt;/code>. Example: &lt;code>git branch issue-20&lt;/code>&lt;/li>
&lt;li>Checkout your new branch with &lt;code>git checkout &amp;lt;helpful and identifying name&amp;gt;&lt;/code>. Example: &lt;code>git checkout issue-20&lt;/code>&lt;/li>
&lt;/ul>
&lt;ol start="8">
&lt;li>Start your work and commit locally, aka &amp;ldquo;save your work&amp;rdquo;, at times (probably more than once) that feel logical.&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Create logical checkpoints (i.e., commits) when you feel you&amp;rsquo;ve finished on a particular &amp;ldquo;part&amp;rdquo; of your work. Example: You&amp;rsquo;ve just created a new file and added some stubbed content: Commit it!
&lt;ul>
&lt;li>Commits are references in your work and can be helpful if you need to go back to an earlier version of your work, sort of like an &amp;ldquo;undo&amp;rdquo; command. By committing regularly, you give yourself utmost flexibility and it&amp;rsquo;s a good practice/habit.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;ol start="9">
&lt;li>
&lt;p>Creating commits.&lt;/p></description></item><item><title>Easily Change GitHub User in OSX</title><link>https://static.grinnell.edu/dlad-blog/posts/055-easily-change-github-user-in-osx/</link><pubDate>Mon, 18 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/055-easily-change-github-user-in-osx/</guid><description>&lt;p>The first step is to run &lt;code>git config -l&lt;/code> to see what the current configuration is. If the &lt;code>user.name&lt;/code> and/or &lt;code>user.email&lt;/code> properties are incorrect, change them using something like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>git config --global user.name &amp;#34;Mark McFate&amp;#34;
git config --global user.email &amp;#34;yourEMail@address.here&amp;#34;
&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s only half the battle. I love &lt;em>OSX&lt;/em> and the &lt;em>Keychain Access&lt;/em> app is wonderful, except when I&amp;rsquo;m working with &lt;em>git&lt;/em> and &lt;em>GitHub&lt;/em> in a terminal, which I do quite often. The real problem is that I have 4 different identities in &lt;em>GitHub&lt;/em>&amp;hellip; crazy, I know. Changing from one identity to another has been a real pain-in-the-a$$, up until I found &lt;a href="https://docs.github.com/en/github/using-git/updating-credentials-from-the-osx-keychain#updating-your-credentials-via-keychain-access">this gem of a post&lt;/a>.&lt;/p></description></item><item><title>Moving Omeka-S Data to NFS</title><link>https://static.grinnell.edu/dlad-blog/posts/054-moving-omeka-s-data-to-nfs/</link><pubDate>Wed, 13 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/054-moving-omeka-s-data-to-nfs/</guid><description>&lt;p>Grinnell&amp;rsquo;s dockerized version of &lt;em>Omeka-S&lt;/em> has been running for several weeks now, and we recently ran out of disk space for object data on the host, a &lt;em>CentOS&lt;/em> node we named &lt;em>DGDocker2&lt;/em>. My posts 041, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/">Configuring DGDocker2&lt;/a> and 042, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/042-my-dockerized-server-config/">My dockerized-server Config&lt;/a> address the original configuration of &lt;em>DGDocker2&lt;/em> in detail.&lt;/p>
&lt;p>&lt;em>Omeka-S&lt;/em> is configured on &lt;em>DGDocker2&lt;/em> to reside in &lt;code>/opt/omeka-s-docker&lt;/code>, and inside that directory is a subdirectory named &lt;code>volume&lt;/code>. The portions of the application stack that deliver &lt;em>Omeka-S&lt;/em> are configured largely in &lt;code>/opt/omeka-s-docker/docker-compose.yml&lt;/code>, and portions of that file related to this discussion include:&lt;/p></description></item><item><title>DG's ISLE Git Workflow</title><link>https://static.grinnell.edu/dlad-blog/posts/053-dgs-isle-git-workflow/</link><pubDate>Tue, 12 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/053-dgs-isle-git-workflow/</guid><description>&lt;p>For some time now &lt;em>Digital.Grinnell&lt;/em> has been using &lt;em>ISLE&lt;/em> in production, with an instance that was built from a &amp;ldquo;non-standard&amp;rdquo; workflow, one that was a little different than the &lt;em>Git&lt;/em> workflow established in the &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/tree/master/docs/install">&lt;em>ISLE&lt;/em> install docs&lt;/a>. Consequently, &lt;em>DG&amp;rsquo;s&lt;/em> situation is a little different than what&amp;rsquo;s documented for &lt;em>ISLE&lt;/em>, so my mission here is to describe and execute the steps I&amp;rsquo;m taking to get back into the documented workflow.&lt;/p>
&lt;p>The steps will involve and achieve the following:&lt;/p>
&lt;ul>
&lt;li>Establish a working, local instance of my &lt;a href="https://digital.grinnell.edu">production &lt;em>DG&lt;/em> site&lt;/a> with an &lt;em>ISLE-1.3.0&lt;/em> code base.&lt;/li>
&lt;li>Create (or find) and run a script to remove all bits of past &lt;em>Git&lt;/em> workflows from the working local instance.&lt;/li>
&lt;li>Follow the &lt;em>Git&lt;/em> workflow steps of &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/blob/ISLE-1.3.0/docs/install/install-local-new.md">&lt;code>install-local-new.md&lt;/code>&lt;/a> and &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/blob/ISLE-1.3.0/docs/install/install-local-migrate.md">&lt;code>install-local-migrate.md&lt;/code>&lt;/a> to create NEW &lt;em>dg-isle&lt;/em> and &lt;em>dg-islandora&lt;/em> projects from the working, local &lt;em>DG&lt;/em>. These are the &lt;code>yourprojectnamehere-isle&lt;/code> and &lt;code>yourprojectnamehere-islandora&lt;/code> pieces mentioned in the documents.&lt;/li>
&lt;/ul>
&lt;p>The following &lt;a href="https://docs.google.com/presentation/d/1Eg6HiGm8i5eJMFWAiYty_TygO4Hng1bwWd4FxKE0Tnk/edit#slide=id.p1">ISLE Workflows&lt;/a> presentation from one of the &lt;em>ICG&lt;/em>&amp;rsquo;s recent events should prove useful in this adventure.&lt;/p></description></item><item><title>Granular ISLE Customization: Installing the DG Theme</title><link>https://static.grinnell.edu/dlad-blog/posts/052-granular-isle-customization-installing-the-dg-theme/</link><pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/052-granular-isle-customization-installing-the-dg-theme/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customizations-the-series/">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post we will install &lt;em>Digital.Grinnell&lt;/em>&amp;rsquo;s custom-built theme, namely &lt;a href="https://github.com/DigitalGrinnell/digital_grinnell_bootstrap">digital_grinnell_bootstrap&lt;/a>. The experience documented here involves an existing ISLE instance created using &lt;a href="https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.3.0-ld/">Building ISLE 1.3.0 (ld) for Local Development&lt;/a>.&lt;/p>
&lt;h2 id="commands">Commands&lt;/h2>
&lt;p>The install and config process was simply this stream of commands entered directly into the running &lt;em>Apache&lt;/em> container:&lt;/p></description></item><item><title>Migrating Digital.Grinnell (DG) to ISLE 1.3.0 (ld) for Local Development</title><link>https://static.grinnell.edu/dlad-blog/posts/051-migrating-dg-to-isle-1.3.0-ld/</link><pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/051-migrating-dg-to-isle-1.3.0-ld/</guid><description>&lt;p>This is a follow-up to previous posts 034, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.2.0-ld/">Building ISLE 1.2.0 (ld)&lt;/a> and 037, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/037-migrating-dg-to-isle-1.2.0-ld/">Migrating Digital.Grinnell (DG) to ISLE 1.2.0 (ld) for Local Development&lt;/a> where I successfully completed a &amp;ldquo;local&amp;rdquo; build of ISLE v1.2.0 and subsequently started &amp;ldquo;customization&amp;rdquo; of that local instance. So, this post&amp;rsquo;s intent is to complete the goal stated in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/037-migrating-dg-to-isle-1.2.0-ld/">Migrating Digital.Grinnell (DG) to ISLE 1.2.0 (ld) for Local Development&lt;/a>, but for &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/tree/master">ISLE 1.3.0&lt;/a>, specifically to:&lt;/p>

&lt;div class="original">&lt;p>The goal of this project is to spin up a pristine, local Islandora stack using an updated fork of &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">the ISLE project&lt;/a> at &lt;a href="https://github.com/Digital-Grinnell/dg-isle">https://github.com/Digital-Grinnell/dg-isle&lt;/a>, then introduce elements like the &lt;a href="https://github.com/DigitalGrinnell/digital_grinnell_theme">Digital Grinnell theme&lt;/a> and custom modules like &lt;a href="https://github.com/DigitalGrinnell/dg7">DG7&lt;/a>. Once these pieces are in-place and working, I&amp;rsquo;ll begin adding other critical components as well as a robust set of data gleaned from &lt;a href="https://digital.grinnell.edu">https://digital.grinnell.edu&lt;/a>.&lt;/p></description></item><item><title>Granular ISLE Customization: Installing DG7</title><link>https://static.grinnell.edu/dlad-blog/posts/050-granular-isle-customization-installing-dg7/</link><pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/050-granular-isle-customization-installing-dg7/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Warning!&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>The DG7 module contains code with numerous dependencies, and the most sinister of these is a Grinnell-specific version of the Solr schema. Do NOT attempt to use this module early in a stack-building process, nor outside the Digital.Grinnell environment.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customization-series-guidelines">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post we will install &lt;em>&lt;em>DG7&lt;/em>&lt;/em>, the &lt;a href="https://github.com/DigitalGrinnell/dg7.git">Digital Grinnell v7&lt;/a> module, into an existing ISLE instance created using the &lt;a href="https://github.com/DigitalGrinnell/public-isle">DigitalGrinnell/public-isle&lt;/a> project.&lt;/p></description></item><item><title>Granular ISLE Customization: Implementing IMI Hooks</title><link>https://static.grinnell.edu/dlad-blog/posts/049-granular-isle-customization-implementing-imi-hooks/</link><pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/049-granular-isle-customization-implementing-imi-hooks/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customization-series-guidelines">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post I&amp;rsquo;ll introduce two customizations to IMI that implement and engage &lt;em>Drupal&lt;/em> &amp;ldquo;hook&amp;rdquo; functions, namely:&lt;/p>
&lt;ul>
&lt;li>hook_islandora_multi_importer_remote_file_get(), and&lt;/li>
&lt;li>hook_form_islandora_multi_importer_form_alter().&lt;/li>
&lt;/ul>
&lt;h2 id="drupal-7-hooks">Drupal 7 Hooks&lt;/h2>
&lt;p>See &lt;a href="https://www.drupal.org/docs/7/creating-custom-modules/understanding-the-hook-system-for-drupal-modules">Understanding the hook system for Drupal modules&lt;/a> to better understand what &lt;em>Drupal v7&lt;/em> hook functions are, and how they work. If you would like additional assistance with &amp;ldquo;hooks&amp;rdquo; do not hesitate to contact the author of this post using [this email link](mailto:digital@grinnell.edu?subject=Implementing IMI Hooks).&lt;/p></description></item><item><title>Granular ISLE Customization: Installing IMI</title><link>https://static.grinnell.edu/dlad-blog/posts/048-granular-isle-customization-installing-imi/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/048-granular-isle-customization-installing-imi/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post is part of a series describing &lt;a href="https://digital.grinnell.edu/">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>An index of all documents in this series is included at the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customization-series-guidelines/">Granular ISLE Customization: Series Guidelines&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>In this &amp;ldquo;granular&amp;rdquo; post we will install &lt;em>&lt;em>IMI&lt;/em>&lt;/em>, the &lt;a href="https://github.com/mnylc/islandora_multi_importer.git">Islandora Multi-Importer&lt;/a> module, into an existing ISLE instance, for example: &lt;a href="https://dg.localdomain/">https://dg.localdomain/&lt;/a>.&lt;/p>
&lt;h2 id="install-the-islandora-multi-importer-imi">Install the Islandora Multi-Importer (IMI)&lt;/h2>
&lt;p>It&amp;rsquo;s important that we take this step BEFORE other customizations, otherwise the module may not install properly. The result is captured in &lt;a href="https://gist.github.com/McFateM/d8e7694032298e0518a88b3370872db8/">this gist&lt;/a>.&lt;/p></description></item><item><title>Granular ISLE Customization: Series Guidelines</title><link>https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customizations-the-series/</link><pubDate>Fri, 27 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/047-granular-isle-customizations-the-series/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Granular ISLE Customization&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>This post provides guidelines for a series of posts describing &lt;a href="https://digital.grinnell.edu/">Digital.Grinnell&lt;/a> customizations to &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE/">ISLE&lt;/a>, in a &amp;ldquo;granular&amp;rdquo; format&amp;hellip; one small customization at a time.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h1 id="using-the-_granular-isle-customization_-posts">Using the &lt;em>Granular ISLE Customization&lt;/em> Posts&lt;/h1>
&lt;p>There are just a couple of notes regarding the subject posts that I&amp;rsquo;d like to pass along to make them more useful.&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Gists&lt;/strong> - You will find a few places in this series where I generated a &lt;a href="https://help.github.com/en/articles/creating-gists/">gist&lt;/a> to take the place of lengthy command output. Instead of a long stream of text you&amp;rsquo;ll find a simple &lt;a href="https://gist.github.com/McFateM/98d09fdcc29f88ac88bf7b3cbfb8324d/">link to a gist&lt;/a> like this.&lt;/p></description></item><item><title>Repairing Static.Grinnell.edu</title><link>https://static.grinnell.edu/dlad-blog/posts/045-repairing-static.grinnell.edu/</link><pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/045-repairing-static.grinnell.edu/</guid><description>&lt;p>This morning, Tuesday, September 17, 2019, I awoke to find our &lt;a href="https://static.grinnell.edu">https://static.grinnell.edu&lt;/a> server, and all of the services on it, unreachable via the web. I managed to open a shell on the host and found that the server was up-and-running as expected, but a quick &lt;code>docker ps&lt;/code> command indicated that one of the key services on the server, namely &lt;em>Traefik&lt;/em>, had stopped and then failed to restart, repeatedly. &lt;em>Traefik&lt;/em> is the service that&amp;rsquo;s responsible for routing web traffic on the &lt;em>static&lt;/em> host. No wonder the web sites were not responding!&lt;/p></description></item><item><title>DG-FEDORA: A Portable FEDORA Repository</title><link>https://static.grinnell.edu/dlad-blog/posts/046-dg-fedora-a-portable-object-repository/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/046-dg-fedora-a-portable-object-repository/</guid><description>&lt;h2 id="teaser">Teaser&lt;/h2>
&lt;p>Late last night (don&amp;rsquo;t ask how late it was) I discovered a really slick trick, aka &amp;ldquo;feature&amp;rdquo;, of &lt;em>docker-compose&lt;/em>. Full disclosure: I love &lt;em>docker-compose&lt;/em> &amp;ldquo;overrides&amp;rdquo;, a feature I found a couple of months ago. However, implementing overrides in a granular fashion, as I&amp;rsquo;d like, and within a &lt;em>docker-compose&lt;/em> hierarchy of environments like the &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a> stack, can be difficult and counter-productive. I may have found a workable compromise last night. If you&amp;rsquo;re interested, please, read on&amp;hellip;&lt;/p>
&lt;h2 id="history">History&lt;/h2>
&lt;p>About a year ago I created a &amp;ldquo;portable&amp;rdquo; &lt;em>FEDORA&lt;/em> object repository &amp;ldquo;on a stick&amp;rdquo;, a USB stick. I call that &amp;ldquo;stick&amp;rdquo; &lt;em>DG-FEDORA&lt;/em>, because it contains a number of sample objects gleaned from &lt;a href="https://digital.grinnell.edu">Digital.Grinnell.edu&lt;/a>. Shortly after I created the &amp;ldquo;stick&amp;rdquo; I started using a &lt;em>docker-compose.override.yml&lt;/em> file (see &lt;a href="https://docs.docker.com/compose/extends#adding-and-overriding-configuration">Adding and overriding configuration&lt;/a> for details) to implement it in some of my &lt;em>ISLE&lt;/em> work. But there were lots of other &amp;ldquo;customizations&amp;rdquo; that I also wanted to implement, and over time my &lt;em>docker-compose.override.yml&lt;/em> grew too large to be easily maintained&amp;hellip;there was just too much stuff to squeeze into a file that was supposed to make life easier.&lt;/p></description></item><item><title>Installing ZSH in CentOS</title><link>https://static.grinnell.edu/dlad-blog/posts/044-installing-zsh-in-centos/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/044-installing-zsh-in-centos/</guid><description>&lt;p>These days I like to do all my terminal/command-line work in &lt;em>zsh&lt;/em>, more specifically, with &lt;a href="https://ohmyz.sh/">Oh My ZSH!&lt;/a> and the &lt;a href="https://github.com/robbyrussell/oh-my-zsh/blob/master/themes/bira.zsh-theme">bira&lt;/a> theme. So, on my new node &lt;em>dgdocker3&lt;/em>, I added &lt;em>nano&lt;/em>, &lt;em>zsh&lt;/em>, and some other goodies by largely following &lt;a href="https://www.howtoforge.com/tutorial/how-to-setup-zsh-and-oh-my-zsh-on-linux/">How to Setup ZSH and Oh-my-zsh on Linux&lt;/a>.&lt;/p>
&lt;p>This is how I did it&amp;hellip;&lt;/p>
&lt;pre tabindex="0">&lt;code>sudo yum install nano
sudo yum install zsh
chsh -s /bin/zsh mcfatem
exit # log back in after this
echo $SHELL
sudo yum install wget git
wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc
source ~/.zshrc
cd ~/.oh-my-zsh/themes/
ls -a
nano ~/.zshrc # In the editor add (or replace similar) the following lines but without the leading #
 # ZSH_THEME=&amp;#39;bira&amp;#39;
 # plugins=(git extract web-search yum git-extras docker)
exit # log back in after this
&lt;/code>&lt;/pre>&lt;p>And that&amp;rsquo;s a wrap&amp;hellip; until next time. &amp;#x1f604;&lt;/p></description></item><item><title>A Dockerized 'Handle' Server</title><link>https://static.grinnell.edu/dlad-blog/posts/043-a-dockerzied-handle-server/</link><pubDate>Tue, 10 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/043-a-dockerzied-handle-server/</guid><description>&lt;p>Today&amp;rsquo;s quest&amp;hellip; to build a new &lt;a href="http://www.handle.net">Handle.net&lt;/a> server for &lt;em>Digital.Grinnell&lt;/em>, preferably one that is &amp;ldquo;Dockerized&amp;rdquo;. I&amp;rsquo;m going to start by forking &lt;a href="https://github.com/datacite/docker-handle">datacite/docker-handle&lt;/a>, a project that looks promising, and following it along with the documentation in chapter 3 of the &lt;a href="http://www.handle.net/tech_manual/HN_Tech_Manual_9.pdf">HANDLE.NET (version 9) Technical Manual&lt;/a>. The aforementioned fork can now be found in &lt;a href="https://github.com/DigitalGrinnell/docker-handle">DigitalGrinnell/docker-handle&lt;/a>.&lt;/p>
&lt;h2 id="the-_digital7_-saga">The &lt;em>digital7&lt;/em> Saga&lt;/h2>
&lt;p>My old friend and server (or should that be servant?), &lt;em>digital7&lt;/em>, used to be the home of &lt;a href="https://digital.grinnell.edu">Digital.Grinnell&lt;/a> in &lt;a href="https://islandora.ca">Islandora v7&lt;/a>, before &lt;a href="https://en.wikipedia.org/wiki/Docker_(software)">Docker&lt;/a> and &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">ISLE&lt;/a> came along. It&amp;rsquo;s an &lt;a href="https://ubuntu.com/">Ubuntu 14.04.5 LTS&lt;/a> server, and in addition to hosting &lt;em>Digital.Grinnell&lt;/em>, it also used to host our &lt;em>HANDLE.NET&lt;/em> server. Hmmm&amp;hellip;&lt;/p></description></item><item><title>My dockerized-server Config</title><link>https://static.grinnell.edu/dlad-blog/posts/042-my-dockerized-server-config/</link><pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/042-my-dockerized-server-config/</guid><description>&lt;p>This post picks up from where &lt;a href="https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2">Configuring DGDocker2&lt;/a> left off. In it I will establish a workflow to setup a &amp;ldquo;Dockerized&amp;rdquo; server complete with &lt;em>Traefik&lt;/em>, &lt;em>Portainer&lt;/em>, and &lt;em>Who Am I&lt;/em>. It should be relatively easy to add additional non-static services to any server that is initially configured using this package. For &amp;ldquo;static&amp;rdquo; servers have a look at post &lt;a href="https://static.grinnell.edu/dlad-blog/posts/008-docker-bootstrap-workflow/">008 docker-bootstrap Workflow &lt;/a>.&lt;/p>
&lt;h2 id="capture-as-a-project">Capture As a Project&lt;/h2>
&lt;p>Picking up from the end of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2">Configuring DGDocker2&lt;/a>, my first step on the &lt;em>dgdocker2&lt;/em> server was to move everything into a single subdirectory of &lt;em>/opt&lt;/em>; I called the new directory &lt;em>dockerized-server&lt;/em>, like so:&lt;/p></description></item><item><title>Configuring DGDocker2</title><link>https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/</link><pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/041-configuring-dgdocker2/</guid><description>&lt;p>My mission today is to successfully migrate the images/containers/services chronicled in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/">post 030, &amp;ldquo;Dockerized Omeka-S: Starting Over&amp;rdquo;&lt;/a> to Docker-ready node &lt;em>dgdocker2&lt;/em> without compromising any of the services that already run there.&lt;/p>
&lt;h2 id="pushing-wmi-omeka-s-to-production-on-_dgdocker2_">Pushing WMI Omeka-S to Production on &lt;em>dgdocker2&lt;/em>&lt;/h2>
&lt;p>Grinnell&amp;rsquo;s &lt;em>dgdocker2&lt;/em> server, specifically &lt;em>dgdocker2.grinnell.edu&lt;/em> with an IP address of 132.161.132.143, is a Docker-ready CentOS 7 node that&amp;rsquo;s currently supporting the following containers and configuration:&lt;/p>
&lt;pre tabindex="0">&lt;code>╭─root@dgdocker2 ~
╰─# docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
ef20d71ffea8 mcfatem/ohscribe &amp;#34;./boot.sh&amp;#34; 6 days ago Up 6 days 5000/tcp ohscribe
b525f4670cd2 mariadb:latest &amp;#34;docker-entrypoint.s…&amp;#34; 2 weeks ago Up 2 weeks 3306/tcp omekasdocker_mariadb_1
7f107a24c204 traefik:latest &amp;#34;/traefik --docker -…&amp;#34; 2 weeks ago Up 2 weeks 0.0.0.0:80-&amp;gt;80/tcp, 0.0.0.0:443-&amp;gt;443/tcp, 0.0.0.0:8080-&amp;gt;8080/tcp traefik_proxy
9282ab53ecc4 portainer/portainer:latest &amp;#34;/portainer --admin-…&amp;#34; 5 weeks ago Up 5 weeks 0.0.0.0:9000-&amp;gt;9000/tcp portainer
60ce06301101 dodeeric/omeka-s:latest &amp;#34;docker-php-entrypoi…&amp;#34; 7 weeks ago Up 7 weeks 80/tcp omekasdocker_omeka_1
54bd82694f3c phpmyadmin/phpmyadmin:latest &amp;#34;/docker-entrypoint.…&amp;#34; 2 months ago Up 2 months 80/tcp omekasdocker_pma_1
0cd019c5456e emilevauge/whoami &amp;#34;/whoamI&amp;#34; 2 months ago Up 2 months 80/tcp omekasdocker_whoami_1
7b3d4961ec21 v2tec/watchtower &amp;#34;/watchtower&amp;#34; 2 months ago Up 2 months watchtower
&lt;/code>&lt;/pre>&lt;p>Grinnell&amp;rsquo;s DNS is configured with the following addresses pointed to &lt;em>dgdocker2&lt;/em>:&lt;/p></description></item><item><title>Digital.Grinnell's IMI Workflow</title><link>https://static.grinnell.edu/dlad-blog/posts/040-digital.grinnells-imi-workflow/</link><pubDate>Wed, 21 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/040-digital.grinnells-imi-workflow/</guid><description>&lt;p>Note: The abbreviation &lt;strong>IMI&lt;/strong> is used frequently in this post to represent the &lt;a href="https://github.com/mnylc/islandora_multi_importer.git">Islandora Multi-Importer&lt;/a>, a CSV-file-driven batch ingest tool used by numerous institutions in the Islandora community.&lt;/p>
&lt;p>Also, while updating this post I found this gem&amp;hellip; &lt;a href="https://medium.com/technical-writing-is-easy/diagrams-in-documentation-markdown-guide-4e78419e8d2f">Diagrams in Documentation (Markdown Guide)&lt;/a>.&lt;/p>
&lt;p>This post is an addition to the discussion in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/">post 028, Mounting //Storage for IMI Ingest in Digital.Grinnell &lt;/a> which was written largely to remind me how the //Storage mount works. &amp;#x1f615; Unlike &lt;a href="https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/">post 028&lt;/a>, this post is meant for myself AND for others at Grinnell College who prepare digital objects for ingest via IMI. For those individuals&amp;hellip; it&amp;rsquo;s not necessary that you understand all of this, but it you choose to read-on, I hope you find this information helpful.&lt;/p></description></item><item><title>Omeka-S in Docksal</title><link>https://static.grinnell.edu/dlad-blog/posts/039-omeka-s-in-docksal/</link><pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/039-omeka-s-in-docksal/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Attention!&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>The Docksal portion of this discussion DID NOT WORK PROPERLY so I&amp;rsquo;ve hidden it from public view. Don&amp;rsquo;t use this project with Docksal (&lt;code>fin&lt;/code> commands) until further notice!&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;!--
Please pay no attention to the [Docksal](https://docksal.io) portions of my previous [Omeka-S](https://omeka.org/ss) blog [post 030](/posts/030-dockerized-omeka-s-starting-over/)... it is fatally flawed! It doesn't "properly" build an Omeka-S environment in Docksal, but that is what this post will attempt to do.

As mentioned in earlier posts, I've created a fork of [dodeeric/omeka-s-docker](https://github.com/dodeeric/omeka-s-docker) at [DigitalGrinnell/omeka-s-docker](https://github.com/DigitalGrinnell/omeka-s-docker), and I'll be working in a new `docksal-proper` branch of that work here.

## Proper "Docksal-ization"
In this post I'm going to try to do this "properly", by following the guidance that's specific to the [Configuration: Dockerfile](https://docs.docksal.io/stack/extend-images/#docker-file) portion of the Docksal documentation. Essentially I'm going to "borrow" the key elements of the [dodeeric/omeka-s-docker Dockerfile](https://github.com/dodeeric/omeka-s-docker/blob/master/Dockerfile) and integrate them into Docksal's `cli` service in similar fashion to [this example](https://docs.docksal.io/stack/extend-images/#docker-file).

## Creating a New `cli` Dockerfile
The first, and most significant, step in this process was to do as the documentation says and create a new `Dockerfile` to "extend" `cli`. I did this like so:

| Workstation Commands |
| --- |
| cd ~/Projects/omeka-s-docker; &lt;br/> git checkout -b docksal-proper &lt;br/> mkdir -p .docksal/services/cli &lt;br/> cp -f Dockerfile ./docksal/services/cli/Dockerfile &lt;br/> atom . |

In case you haven't seen me do this before, that last `atom .` command simply opens the entire project directory in my [Atom](https://atom.io) editing environment. Slick. Next step was to edit my new `Dockerfile` and experiment with it a bit. At the very top of the file I made one essential change, replacing this:

```
FROM php:apache

# Omeka-S web publishing platform for digital heritage collections (https://omeka.org/s/)
# Initial maintainer: Oldrich Vykydal (o1da) - Klokan Technologies GmbH 
MAINTAINER Eric Dodemont &lt;eric.dodemont@skynet.be>
```
...with this:
```
FROM docksal/cli:2-php7.2
# FROM php:apache

# Omeka-S web publishing platform for digital heritage collections (https://omeka.org/s/)
# Initial maintainer: Oldrich Vykydal (o1da) - Klokan Technologies GmbH 
# Dockerized by: Eric Dodemont &lt;eric.dodemont@skynet.be>
MAINTAINER Mark McFate &lt;mcfatem@grinnell.edu>
```

I let the rest of the `Dockerfile` stand as-is, just to see what will, or will not, happen. Since the project already has a `.docksal/docksal.yml` with a history of changes, I moved that to a new `.docksal/out-of-the-way/` directory just to get a fresh start, like so:

| Workstation Commands |
| --- |
| cd ~/Projects/omeka-s-docker; &lt;br/> git checkout docksal-proper &lt;br/> mkdir -p .docksal/out-of-the-way &lt;br/> mv -f ./.docksal/docksal.yml .docksal/out-of-the-way/ |

## First Launch
Let's see what happens... `fin up`!

The outcome was not too bad, not too bad at all. From the `fin up` output I gleaned this significant (?) info:

```
Pulling db (docksal/mysql:5.6-1.4)...
Pulling cli (docksal/cli:2.6-php7.2)...

Creating omeka-s-docker_cli_1 ... done
Creating omeka-s-docker_db_1 ... done
Creating omeka-s-docker_web_1 ... done
```
I'm not sure if those versions of things will work, but they should not be hard to upgrade if necessary. I am *encouraged* by the fact that we have only the 3 "standard" Docksal containers running, with no mysterious "extras". :smile:

When I visited the prompted address in my browser, the `install` script came right up, but produced this output:

```
Some installation requirements were not satisfied.

 "/var/www/html/files" is not a writable directory.
 An exception occured in driver: SQLSTATE[HY000] [1045] Access denied for user 'omeka'@'192.168.160.2' (using password: YES)
```

I'm not surprised by that first issue... and it should be easy to resolve. The 2nd issue I have seen before, and I think all that's needed are some proper database username and password settings; that can happen in the `docksal.yml` file.

## Second Launch
So, based on that first experience let's bring back the lean `docksal.yml` file from the old `docksal` branch with just database credentials in it. 


So, I think the reported `"/var/www/html/files" is not a writable directory` message is because the new `Dockerfile` does this:

```
...
&amp;&amp; rm -Rf /var/www/html/files/ \
&amp;&amp; ln -s /var/www/html/volume/files/ /var/www/html/files \
...
```
This basically blows away the "default" `files` directory and replaces it with a symbolic link, so the directory that it links to has to exist, and it exists as part of the `omeka:` Docker volume created above.

Let's see if this will fly... `fin up`!


&lt;!--

If your workstation is able to run the aforementioned required components then the following steps can be used to launch and develop a local instance. Assuming your workstation is Linux or a Mac, you'll need to edit your `/etc/hosts` with an editor of your choice, and `sudo` privileges might be required. For me this was...

```
sudo nano /etc/hosts
```

In the `/etc/hosts` file comment out any line beginning with `127.0.0.1` and add the following two lines just above it...
```
### For omeka-s-docker
127.0.0.1 localhost omeka.localdomain pma.localdomain gramps.localdomain
```
The new `127.0.0.1...` line will enable you to use `http://omeka.localdomain` to open and work with your new Omeka-S instance in any browser on your workstation.

Now to launch Omeka-S, return to your workstation terminal and...

```
cd ~/Projects # or any path of your choice
git clone https://github.com/DigitalGrinnell/omeka-s-docker.git
cd omeka-s-docker
docker-compose up -d
```

The `docker-compose up -d` command in this sequence should launch the project locally. Once it is complete you should be able to open any browser and visit `http://omeka.localdomain` to work with Omeka-S, or `http://pma.localdomain` if you want PHPMyAdmin.

## Capturing the Configuration
So, having successfully started my new, local Omeka-S stack with `docker-compose up -d`, I wanted to visit the primary container and capture all of the pristine Omeka-S config and code. The project does NOT map the document root to a persistent directory on the host, so to capture it I did this:

| Workstation Commands |
| --- |
| cd ~/Projects/omeka-s-docker; &lt;br/> mkdir html; &lt;br/> docker cp omeka-s-docker_omeka_1:/var/www/html/. ./html/ |

The last command above, `docker cp...`, is the key. It copies the established docroot, '/var/www/html', from inside the Omeka container, out to the new `./html` directory on host.

## Adding a Custom Docksal Configuration
Having successfully captured a pristine Omeka-S docroot, I executed a `fin config generate` command on the host from my `~/Projects/omeka-s-docker` project directory. The result was this:
```
╭─mark@Marks-Air.grinnell.edu ~/Projects/omeka-s-docker ‹docksal*›
╰─➤ fin config generate
DOCROOT has been detected as html. Is that correct? [y/n]: y
Configuration was generated. You can start it with fin project start
```
Following the prompted suggestion, I then executed `fin project start` and the stack did come alive. However, when I visit http://omeka-s-docker.docksal I get an "Internal Server Error" page, probably because my database config isn't right yet? I subsequently did `fin logs` at my command prompt and got back...

```
╭─mark@Marks-Air.grinnell.edu ~/Projects/omeka-s-docker ‹docksal*›
╰─➤ fin logs
Attaching to omeka-s-docker_web_1, omeka-s-docker_cli_1, omeka-s-docker_db_1
web_1 | Configuring Apache2 environment variables...
web_1 | [Thu Jul 25 15:45:58.407927 2019] [ssl:warn] [pid 1:tid 140419333643144] AH01909: web:443:0 server certificate does NOT include an ID which matches the server name
web_1 | [Thu Jul 25 15:45:58.417368 2019] [ssl:warn] [pid 1:tid 140419333643144] AH01909: web:443:0 server certificate does NOT include an ID which matches the server name
web_1 | [Thu Jul 25 15:45:58.419233 2019] [mpm_event:notice] [pid 1:tid 140419333643144] AH00489: Apache/2.4.35 (Unix) LibreSSL/2.6.5 configured -- resuming normal operations
web_1 | [Thu Jul 25 15:45:58.419345 2019] [core:notice] [pid 1:tid 140419333643144] AH00094: Command line: 'httpd -D FOREGROUND'
web_1 | [Thu Jul 25 15:49:00.969960 2019] [core:alert] [pid 10:tid 140419332627176] [client 172.24.0.5:35076] /var/www/html/.htaccess: Invalid command 'php_value', perhaps misspelled or defined by a module not included in the server configuration
web_1 | 172.24.0.5 - - [25/Jul/2019:15:49:00 +0000] "GET / HTTP/1.1" 500 528
web_1 | [Thu Jul 25 15:49:01.222289 2019] [core:alert] [pid 8:tid 140419332156136] [client 172.24.0.5:35078] /var/www/html/.htaccess: Invalid command 'php_value', perhaps misspelled or defined by a module not included in the server configuration
web_1 | 172.24.0.5 - - [25/Jul/2019:15:49:01 +0000] "GET /favicon.ico HTTP/1.1" 500 528
web_1 | [Thu Jul 25 15:49:18.852967 2019] [core:alert] [pid 10:tid 140419332721384] [client 172.24.0.5:35082] /var/www/html/.htaccess: Invalid command 'php_value', perhaps misspelled or defined by a module not included in the server configuration
web_1 | 172.24.0.5 - - [25/Jul/2019:15:49:18 +0000] "GET /install HTTP/1.1" 500 528
web_1 | [Thu Jul 25 15:58:27.745096 2019] [core:alert] [pid 10:tid 140419332344552] [client 172.24.0.5:35086] /var/www/html/.htaccess: Invalid command 'php_value', perhaps misspelled or defined by a module not included in the server configuration
web_1 | 172.24.0.5 - - [25/Jul/2019:15:58:27 +0000] "GET / HTTP/1.1" 500 528
web_1 | [Thu Jul 25 16:48:15.623872 2019] [core:alert] [pid 8:tid 140419332061928] [client 172.24.0.5:35090] /var/www/html/.htaccess: Invalid command 'php_value', perhaps misspelled or defined by a module not included in the server configuration
web_1 | 172.24.0.5 - - [25/Jul/2019:16:48:15 +0000] "GET / HTTP/1.1" 500 528
cli_1 | 2019-07-25 15:45:56 | Updating docker user uid/gid to 501/20 to match the host user uid/gid...
cli_1 | 2019-07-25 15:45:58 | Resetting permissions on /home/docker and /var/www...
cli_1 | 2019-07-25 15:45:58 | Preliminary initialization completed.
cli_1 | 2019-07-25 15:45:58 | Passing execution to: supervisord
cli_1 | 2019-07-25 15:46:00,068 CRIT Supervisor running as root (no user in config file)
cli_1 | 2019-07-25 15:46:00,069 INFO Included extra file "/etc/supervisor/conf.d/supervisord.conf" during parsing
cli_1 | 2019-07-25 15:46:00,107 INFO RPC interface 'supervisor' initialized
cli_1 | 2019-07-25 15:46:00,107 CRIT Server 'unix_http_server' running without any HTTP authentication checking
cli_1 | 2019-07-25 15:46:00,108 INFO supervisord started with pid 1
cli_1 | 2019-07-25 15:46:01,111 INFO spawned: 'cron' with pid 29
cli_1 | 2019-07-25 15:46:01,115 INFO spawned: 'sshd' with pid 30
cli_1 | 2019-07-25 15:46:01,118 INFO spawned: 'php-fpm' with pid 31
cli_1 | 2019-07-25 15:46:01,918 DEBG fd 16 closed, stopped monitoring &lt;POutputDispatcher at 140451264069856 for &lt;Subprocess at 140451264308792 with name php-fpm in state STARTING> (stdout)>
cli_1 | 2019-07-25 15:46:01,951 DEBG 'php-fpm' stderr output:
cli_1 | [25-Jul-2019 15:46:01] NOTICE: fpm is running, pid 31
cli_1 |
cli_1 | 2019-07-25 15:46:01,953 DEBG 'php-fpm' stderr output:
cli_1 | [25-Jul-2019 15:46:01] NOTICE: ready to handle connections
cli_1 |
cli_1 | 2019-07-25 15:46:02,955 INFO success: cron entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
cli_1 | 2019-07-25 15:46:02,955 INFO success: sshd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
cli_1 | 2019-07-25 15:46:02,955 INFO success: php-fpm entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
db_1 | Running init scripts in /docker-entrypoint.d/ as root...
db_1 | Including custom configuration from /var/www/.docksal/etc/mysql/my.cnf
db_1 | 2019-07-25 15:45:57 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).
db_1 | 2019-07-25 15:45:57 0 [Note] mysqld (mysqld 5.6.43) starting as process 1 ...
db_1 | 2019-07-25 15:45:57 1 [Note] Plugin 'FEDERATED' is disabled.
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Using atomics to ref count buffer pool pages
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: The InnoDB memory heap is disabled
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Memory barrier is not used
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Compressed tables use zlib 1.2.11
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Using Linux native AIO
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Using CPU crc32 instructions
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Initializing buffer pool, size = 256.0M
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Completed initialization of buffer pool
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Highest supported file format is Barracuda.
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: 128 rollback segment(s) are active.
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: Waiting for purge to start
db_1 | 2019-07-25 15:45:57 1 [Note] InnoDB: 5.6.43 started; log sequence number 1626143
db_1 | 2019-07-25 15:45:57 1 [Note] Server hostname (bind-address): '*'; port: 3306
db_1 | 2019-07-25 15:45:57 1 [Note] IPv6 is available.
db_1 | 2019-07-25 15:45:57 1 [Note] - '::' resolves to '::';
db_1 | 2019-07-25 15:45:57 1 [Note] Server socket created on IP: '::'.
db_1 | 2019-07-25 15:45:57 1 [Warning] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
db_1 | 2019-07-25 15:45:57 1 [Warning] 'proxies_priv' entry '@ root@db' ignored in --skip-name-resolve mode.
db_1 | 2019-07-25 15:45:58 1 [Note] Event Scheduler: Loaded 0 events
db_1 | 2019-07-25 15:45:58 1 [Note] mysqld: ready for connections.
db_1 | Version: '5.6.43' socket: '/var/run/mysqld/mysqld.sock' port: 3306 MySQL Community Server (GPL)
``` 

The `web_1... Invalid command 'php_value'` looks odd so I opened the `./html/.htaccess` file on the host and commented out the last two lines (where the `php_value` statements were). I was also concerned that this configuration doesn't specify any database name or credentials, so following [this documentation](https://docs.docksal.io/stack/extend-images/#extend-docksal.yml) I added to `./.docksal/docksal.yml` in the project directory so that it now has the following initial content:

```
version: "2.1"

services:
 db:
 environment:
 MYSQL_ROOT_PASSWORD: root
 MYSQL_DATABASE: omeka
 MYSQL_USER: omeka
 MYSQL_PASSWORD: omeka
```

Then a new `fin up` and http://omeka-s-docker.docksal successfully **opened the Omeka install page!** 

# Woot!
I'm pushing the latest changes to the `docksal` branch of https://github.com/DigitalGrinnell/omeka-s-docker NOW!

NOT a wrap. As Arnold Schwarzenegger would say: "I'll be back!"

--></description></item><item><title>Building My `dg-islandora` Code Repository</title><link>https://static.grinnell.edu/dlad-blog/posts/038-building-my-dg-islandora-code-repository/</link><pubDate>Fri, 16 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/038-building-my-dg-islandora-code-repository/</guid><description>&lt;p>As promised in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/037-migrating-dg-to-isle-1.2.0-ld/">post 037&lt;/a>, this post combines elements of &lt;a href="https://static.grinnell.edu/dlad-blog/posts/021-rebuilding-isle-ld/">post 021&lt;/a> with &lt;a href="https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.3.0-ld/">updated post 034&lt;/a> to create a &amp;ldquo;customized&amp;rdquo; local ISLE instance with features of Digital.Grinnell. In this November 2019 update I&amp;rsquo;m building the repository on my MacBook &lt;em>ma7053&lt;/em> using ISLE-1.3.0. The target of this endeavor will be a properly populated &lt;a href="https://github.com/Digital-Grinnell/dg-islandora">Digital.Grinnell custom Islandora code repository&lt;/a> featuring ISLE-1.3.0 code.&lt;/p>
&lt;h2 id="process-overview">Process Overview&lt;/h2>
&lt;p>I believe the process I need to engage here can be outlined like this:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Repeat or follow-up on &lt;a href="https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.3.0-ld/">post 034&lt;/a>. Assuming a successful test of the site produced in that post, the next steps will include&amp;hellip;&lt;/p></description></item><item><title>Migrating Digital.Grinnell (DG) to ISLE 1.2.0 (ld) for Local Development</title><link>https://static.grinnell.edu/dlad-blog/posts/037-migrating-dg-to-isle-1.2.0-ld/</link><pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/037-migrating-dg-to-isle-1.2.0-ld/</guid><description>&lt;p>This post is a follow-up to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.2.0-ld/">previous post 034&lt;/a> where I successfully completed a &amp;ldquo;local&amp;rdquo; build of ISLE v1.2.0, but did no &amp;ldquo;customization&amp;rdquo; of that local instance. So, this post&amp;rsquo;s intent is to complete the goal stated in &lt;a href="https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.2.0-ld/">post 034&lt;/a>, specifically to:&lt;/p>

&lt;div class="original">&lt;p>The goal of this project is to spin up a pristine, local Islandora stack using an updated fork of &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">the ISLE project&lt;/a> at &lt;a href="https://github.com/DigitalGrinnell/dg-isle">https://github.com/DigitalGrinnell/dg-isle&lt;/a>, then introduce elements like the &lt;a href="https://github.com/DigitalGrinnell/digital_grinnell_theme">Digital Grinnell theme&lt;/a> and custom modules like &lt;a href="https://github.com/DigitalGrinnell/dg7">DG7&lt;/a>. Once these pieces are in-place and working, I&amp;rsquo;ll begin adding other critical components as well as a robust set of data gleaned from &lt;a href="https://digital.grinnell.edu">https://digital.grinnell.edu&lt;/a>.&lt;/p></description></item><item><title>Building Grocy in Docksal</title><link>https://static.grinnell.edu/dlad-blog/posts/036-building-grocy-in-docksal/</link><pubDate>Thu, 08 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/036-building-grocy-in-docksal/</guid><description>&lt;p>&lt;a href="https://github.com/grocy/grocy">Grocy&lt;/a> looks lika a great little PHP stack application for me. It&amp;rsquo;s aim is to help folks organize and inventory their &amp;ldquo;stuff&amp;rdquo;, with a slant toward food and groceries. I need this!&lt;/p>
&lt;p>Since I&amp;rsquo;m also a big fan of &lt;a href="https://docker.io">Docker&lt;/a> and &lt;a href="https://docksal.io">Docksal&lt;/a>, naturally I wanted to spin Grocy up in one of these environments. Thankfully, the heavy lifting of getting this &amp;ldquo;Dockerized&amp;rdquo; has already been done, and that fine work is shared in GitHub at &lt;a href="https://github.com/grocy/grocy-docker">grocy/grocy-docker&lt;/a>. So my quest last evening started with a fork of this GitHub project to &lt;a href="https://github.com/SummittDweller/grocy-docker">SummittDweller/grocy-docker&lt;/a>, where I&amp;rsquo;ve created a new &lt;code>docksal&lt;/code> branch.&lt;/p></description></item><item><title>CanonifyURLs in Hugo</title><link>https://static.grinnell.edu/dlad-blog/posts/035-canonifyurls-in-hugo/</link><pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/035-canonifyurls-in-hugo/</guid><description>&lt;p>I&amp;rsquo;ve been seeing a lot of &lt;code>.URL will be deprecated...&lt;/code> warnings in my Hugo compilations lately, and just now figured out a slick replacement for it: &lt;code>canonifyURLs = true&lt;/code>. The documentation for this parameter says&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>By default, all relative URLs encountered in the input are left unmodified, e.g. /css/foo.css would stay as /css/foo.css. The canonifyURLs field in your site config has a default value of false.&lt;/p>
&lt;p>By setting canonifyURLs to true, all relative URLs would instead be canonicalized using baseURL. For example, assuming you have baseURL = &lt;a href="https://example.com/">https://example.com/&lt;/a>, the relative URL /css/foo.css would be turned into the absolute URL &lt;a href="https://example.com/css/foo.css">https://example.com/css/foo.css&lt;/a>.&lt;/p></description></item><item><title>Building ISLE 1.3.0 (ld) for Local Development</title><link>https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.3.0-ld/</link><pubDate>Mon, 05 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/034-building-isle-1.3.0-ld/</guid><description>&lt;p>This post, an updated (the original was written in August 2019 for ISLE-1.2.0) follow-up to &lt;a href="https://static.grinnell.edu/dlad-blog/posts/021-rebuilding-isle-ld/">a previous post&lt;/a> is intended to chronicle my efforts to build a new &lt;del>ISLE v1.2.0&lt;/del> ISLE-1.3.0, &lt;em>ld&lt;/em>, or &lt;em>local development&lt;/em>, instance of Digital.Grinnell on my work-issued MacBook, &lt;em>ma7053&lt;/em>.&lt;/p>
&lt;h2 id="goal-statement">Goal Statement&lt;/h2>
&lt;p>The goal of this project is to spin up a pristine, local Islandora stack using an updated fork of &lt;a href="https://github.com/Islandora-Collaboration-Group/ISLE">the ISLE project&lt;/a> at &lt;a href="https://github.com/Digital-Grinnell/dg-isle">https://github.com/Digital-Grinnell/dg-isle&lt;/a>, then introduce elements like the &lt;a href="https://github.com/DigitalGrinnell/digital_grinnell_theme">Digital Grinnell theme&lt;/a> and custom modules like &lt;a href="https://github.com/DigitalGrinnell/dg7">DG7&lt;/a>. Once these pieces are in-place and working, I&amp;rsquo;ll begin adding other critical components as well as a robust set of data gleaned from &lt;a href="https://digital.grinnell.edu">https://digital.grinnell.edu&lt;/a>.&lt;/p></description></item><item><title>Adding a LastMod Date</title><link>https://static.grinnell.edu/dlad-blog/posts/033-adding-lastmod-date/</link><pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/033-adding-lastmod-date/</guid><description>&lt;p>So, &lt;code>Hugo&lt;/code> supports the use of &lt;a href="https://gohugo.io/content-management/front-matter/">front matter&lt;/a> &amp;ldquo;date&amp;rdquo; variables including: &lt;code>date&lt;/code>, &lt;code>publishDate&lt;/code> and &lt;code>lastmod&lt;/code>. I won&amp;rsquo;t explain the details of each variable because the &lt;a href="https://gohugo.io/content-management/front-matter/">aforementioned resource&lt;/a> has a nice, concise explanation of them all.&lt;/p>
&lt;p>Until recently this blog only dealt with the &amp;ldquo;date&amp;rdquo; field since I used to have &lt;a href="https://atom.io">Atom&lt;/a> configured to automatically update that field for me when I save changes to a file. However, &lt;code>Hugo&lt;/code> treats &amp;ldquo;date&amp;rdquo; more like the date of publication (publishDate) than the last modification (lastmod) date, so things got a little screwy if/when I edited an old post.&lt;/p></description></item><item><title>Deleting Config Items in Drupal 8</title><link>https://static.grinnell.edu/dlad-blog/posts/032-deleting-config-items-in-drupal-8/</link><pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/032-deleting-config-items-in-drupal-8/</guid><description>&lt;p>None of this is my creation, but it&amp;rsquo;s too valuable to forget! So kudos to &lt;a href="https://gorannikolovski.com">Goran Nikolovski&lt;/a> and &lt;a href="https://gorannikolovski.com/blog/4-ways-delete-configuration-items-drupal-8">his blog post&lt;/a>.&lt;/p>
&lt;p>The problem I ran into involved the Drupal &lt;code>update.php&lt;/code> script, and an orphaned bit of configuration data. When I tried running &lt;code>update.php&lt;/code> the first of 13 pending database updates kept throwing an exception telling me of a missing plugin, and that effectively killed the other 12 updates. &amp;#x1f626; Well, I really didn&amp;rsquo;t care that it was missing (and Drupal should not either) because the update was there to delete it, but since the update kept failing, we had ourselves an impossible loop.&lt;/p></description></item><item><title>Resetting Docker</title><link>https://static.grinnell.edu/dlad-blog/posts/031-resetting-docker/</link><pubDate>Sat, 27 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/031-resetting-docker/</guid><description>&lt;h2 id="this-command-snippet-needs-a-blog-post-of-its-own">This command snippet needs a blog post of its own!&lt;/h2>
&lt;p>I typically use the following command stream to clean up any Docker cruft before I begin anew. Note: Uncomment the third line ONLY if you want to delete images and download new ones. If you do, be patient, it could take several minutes depending on connection speed.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Workstation Commands&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>docker stop $(docker ps -q) &lt;br/> docker rm -v $(docker ps -qa) &lt;br/> # docker image rm $(docker image ls -q) &lt;br/> docker system prune &amp;ndash;force&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>And that&amp;rsquo;s a wrap. Until next time&amp;hellip;&lt;/p></description></item><item><title>Dockerized Omeka-S: Starting Over</title><link>https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/</link><pubDate>Thu, 25 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Attention!&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>The Docksal portion of this discussion DID NOT WORK PROPERLY so I&amp;rsquo;ve hidden it from public view. &lt;strong>Don&amp;rsquo;t use this project with Docksal (&lt;code>fin&lt;/code> commands) until further notice!&lt;/strong>&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>I&amp;rsquo;ve created a new fork of &lt;a href="https://github.com/dodeeric/omeka-s-docker">dodeeric/omeka-s-docker&lt;/a> at &lt;a href="https://github.com/DigitalGrinnell/omeka-s-docker">DigitalGrinnell/omeka-s-docker&lt;/a>, and it introduces a new &lt;code>docker-compose.yml&lt;/code> file for spinning &lt;a href="https://omeka.org/s/">Omeka-S&lt;/a> up locally, but WITHOUT Docksal (due to problems with the integration originally documented &lt;a href="https://static.grinnell.edu/dlad-blog/posts/019-dockerized-omeka-s/">here&lt;/a>).&lt;/p>
&lt;p>System requirements for local development of this project currently include:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.docker.com/install/">Docker (Community Edition)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">Git&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="local-development-and-testing">Local Development and Testing&lt;/h2>
&lt;p>If your workstation is able to run the aforementioned required components then the following steps can be used to launch and develop a local instance. Assuming your workstation is Linux or a Mac, you&amp;rsquo;ll need to edit your &lt;code>/etc/hosts&lt;/code> with an editor of your choice, and &lt;code>sudo&lt;/code> privileges might be required. For me this was&amp;hellip;&lt;/p></description></item><item><title>PDF Ingest in Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/029-pdf-ingest-in-digital-grinnell/</link><pubDate>Wed, 24 Jul 2019 16:56:44 -0700</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/029-pdf-ingest-in-digital-grinnell/</guid><description>&lt;p>A set of 21 PDF objects were ingested into &lt;em>Digital.Grinnell&amp;rsquo;s&lt;/em> &lt;em>Faculty Scholarship&lt;/em> collection using &lt;a href="https://github.com/DigitalGrinnell/islandora_multi_importer">IMI&lt;/a> on 22-July-2019; unfortunately none of these PDFs contained OCR (optical character recognition) or &amp;ldquo;text recognition&amp;rdquo; data, so none of them generated a valid FULL_TEXT datastream. FULL_TEXT datastreams are required to make PDF, and similar text content, searchable and discoverable in &lt;em>Digital.Grinnell&lt;/em>.&lt;/p>
&lt;p>In order to confirm that the lack of OCR was in fact the problem, I ran a little test on &lt;a href="https://digital.grinnell.edu/islandora/object/grinnell:26702">https://digital.grinnell.edu/islandora/object/grinnell:26702&lt;/a>, one of the 21 objects.&lt;/p></description></item><item><title>Mounting //STORAGE for IMI Ingest in Digital.Grinnell</title><link>https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/028-mounting-storage-for-imi-ingest-in-digital-grinnell/</guid><description>&lt;p>Claiming another small victory today! Why? Well, the &lt;em>Digital.Grinnell&lt;/em> instance of &lt;a href="https://github.com/DigitalGrinnell/islandora_multi_importer">IMI (Islandora Multi-Importer) module&lt;/a> is customized so that choosing &amp;ldquo;*local&amp;rdquo; as an object ingest source invokes a hook function I created in our &lt;a href="https://github.com/DigitalGrinnell/dg7">DG7&lt;/a> module. That hook enables &lt;em>IMI&lt;/em> to &amp;ldquo;find&amp;rdquo; named files/content (things like PDFs, images, etc.) in the &lt;em>Grinnell College&lt;/em> &lt;code>//STORAGE&lt;/code> server. &lt;code>//STORAGE&lt;/code> can be mounted as a &lt;a href="https://www.techopedia.com/definition/1867/common-internet-file-system-cifs">CIFS (Common Internet File System)&lt;/a> and used to drive ingest &lt;strong>if&lt;/strong> the right package/drivers are made available to &lt;em>Islandora&lt;/em>. That can be a little tricky in &lt;em>ISLE&lt;/em>, but it&amp;rsquo;s manageable.&lt;/p></description></item><item><title>Replace OSX Terminal with iTerm2 for SSH</title><link>https://static.grinnell.edu/dlad-blog/posts/027-replace-osx-terminal-with-iterm2-for-ssh/</link><pubDate>Mon, 22 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/027-replace-osx-terminal-with-iterm2-for-ssh/</guid><description>&lt;p>My memory isn&amp;rsquo;t what it used to be, but I have this blog. &amp;#x1f604; So when I realized that my primary work machine, an iMac, had not been configured with &lt;em>iTerm2&lt;/em> as its default terminal for &lt;code>ssh&lt;/code>, I went looking for the solution&amp;hellip;again. Found it &lt;a href="https://www.iterm2.com/faq.html">here&lt;/a>!&lt;/p>
&lt;p>The trick is to open &lt;em>iTerm2&lt;/em> and follow these two simple steps&amp;hellip;&lt;/p>

&lt;div class="original">&lt;p>Q: How do I set iTerm2 as the handler for ssh:// links?&lt;/p>
&lt;p>A: Two steps:&lt;/p>
&lt;ol>
&lt;li>Create a new profile called &amp;ldquo;ssh&amp;rdquo;. In the General tab, select the Command: button and enter $$ as the command.&lt;/li>
&lt;li>In Preferences-&amp;gt;Profiles-&amp;gt;General, select &amp;ldquo;ssh&amp;rdquo; for &amp;ldquo;Select URL Schemes&amp;hellip;.&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;/div>

&lt;p>And that&amp;rsquo;s a wrap. Until next time&amp;hellip;&lt;/p></description></item><item><title>Missing Oral History Transcripts in DG - Fixed</title><link>https://static.grinnell.edu/dlad-blog/posts/026-oral-history-solr-fix/</link><pubDate>Fri, 19 Jul 2019 13:09:54 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/026-oral-history-solr-fix/</guid><description>&lt;p>I recently constructed a new, local/development instance of &lt;em>ISLE&lt;/em> (see &lt;a href="https://static.grinnell.edu/dlad-blog/posts/021-rebuilding-isle-ld/">my previous post&lt;/a>) largely in order to debug a mystery in &lt;em>Digital.Grinnell&lt;/em>&amp;rsquo;s display of oral histories. My &lt;em>Trello&lt;/em> card for the issue reads:&lt;/p>
&lt;blockquote>
&lt;p>Our newest AOH entries, and some older objects, will not display a transcript after upgrade to the latest version of the OH module. OHScribe is needed to aid in re-processing transcripts for these objects, and some XDebug work will also be required.&lt;/p>
&lt;/blockquote>
&lt;p>Engaging &lt;em>XDebug&lt;/em> and &lt;em>PHPStorm&lt;/em> allowed me to peek inside the relatively complex oral histories (OH) module where I found that some of our OH objects were missing key &lt;em>Solr&lt;/em> field elements, like &lt;code>or_transcripts&lt;/code> and &lt;code>or_speaker&lt;/code>. Ultimately I tracked the problem to our &lt;em>Solr&lt;/em> config which is based on work found in &lt;a href="https://github.com/discoverygarden/islandora_transforms">https://github.com/discoverygarden/islandora_transforms&lt;/a> and &lt;a href="https://github.com/discoverygarden/basic-solr-config;">https://github.com/discoverygarden/basic-solr-config;&lt;/a> the former repository here lists the later as a dependency.&lt;/p></description></item><item><title>Compiling SCSS (SASS) for This Blog</title><link>https://static.grinnell.edu/dlad-blog/posts/024-compiling-scss-for-this-blog/</link><pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/024-compiling-scss-for-this-blog/</guid><description>&lt;p>While working on another post I finally made the decision to improve the appearance of this blog a bit, and unfortunately I&amp;rsquo;d forgotten exactly how to do that. Even more unfortunate, I never blogged about the process so I had to &amp;ldquo;discover&amp;rdquo; the details all over again. &amp;#x1f622; This post is intended to remedy that.&lt;/p>
&lt;h2 id="sass">SASS&lt;/h2>
&lt;p>The &lt;a href="https://github.com/McFateM/hugo-theme-m10c">theme&lt;/a> used here, &lt;code>m10c&lt;/code>, employs &lt;code>.scss&lt;/code>, or &lt;a href="https://sass-lang.com/">SASS&lt;/a> (Syntactically Awesome Style Sheets) files. Subsequently, a &lt;code>SASS&lt;/code> compiler is required to process them and produce suitable &lt;code>.css&lt;/code> to control the display you see now.&lt;/p></description></item><item><title>Debugging PHP in ISLE: a Kludge</title><link>https://static.grinnell.edu/dlad-blog/posts/025-kludge-debugging-isle/</link><pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/025-kludge-debugging-isle/</guid><description>&lt;p>In an earlier &lt;a href="https://static.grinnell.edu/dlad-blog/posts/021-rebuilding-isle-ld/">post&lt;/a> I chronicle the exhaustive steps taken to create a &amp;ldquo;debuggable&amp;rdquo; local/development instance of Digital.Grinnell that behaves exactly like the &lt;a href="https://digital.grinnell.edu">real thing&lt;/a>, except with a much smaller, portable &lt;em>FEDORA&lt;/em> repository under it. I&amp;rsquo;m claiming success on that front, but there is one glaring kludge in the process that I have yet to work out.&lt;/p>
&lt;h3 id="the-kludge">The Kludge&lt;/h3>
&lt;p>So, my debugging of an &lt;em>ISLE&lt;/em> stack involves the coordinated configuration and engagement of &lt;a href="https://xdebug.org/">XDebug&lt;/a> inside the &lt;em>Apache&lt;/em> container, and &lt;a href="https://www.jetbrains.com/phpstorm/">PHPStorm&lt;/a>, along with persistence of the stack&amp;rsquo;s PHP codebase&amp;hellip; and therein lies the rub.&lt;/p></description></item><item><title>Debugging ISLE-ld (Local Development) in PHPStorm</title><link>https://static.grinnell.edu/dlad-blog/posts/023-debugging-isle-ld-in-phpstorm/</link><pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/023-debugging-isle-ld-in-phpstorm/</guid><description>&lt;h1 id="debugging-isle-on-a-mac">Debugging ISLE on a Mac&lt;/h1>
&lt;p>This guidance applies to debugging PHP code in a local &lt;code>ISLE-ld&lt;/code>, that&amp;rsquo;s &lt;a href="http://isle.localdomain">http://isle.localdomain&lt;/a>, instance using &lt;a href="https://www.jetbrains.com/phpstorm/">PHPStorm&lt;/a>.&lt;/p>
&lt;h2 id="modify-isles-docker-composeoverrideyml">Modify ISLE&amp;rsquo;s &lt;code>docker-compose.override.yml&lt;/code>&lt;/h2>
&lt;p>Before engaging &lt;em>PHPStorm&lt;/em> we need to make one change to our &lt;code>ISLE-ld&lt;/code> configuration by running a &lt;code>docker cp&lt;/code> command, making a change to our &lt;code>docker-compose.override.yml&lt;/code> file, and restarting the stack. Here are the commands and procedure.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Workstation Commands&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>cd ~/Projects/ISLE &lt;br/> mkdir -p persistent/html &lt;br/> docker cp isle-apache-ld:/var/www/html/. ./persistent/html&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>The above commands will make a new &lt;code>./persistent/html&lt;/code> directory on the host, if one does not already exist, and the &lt;code>docker cp&lt;/code> command will copy the current contents of the &lt;em>Apache&lt;/em> container&amp;rsquo;s &lt;code>/var/www/html&lt;/code> directory to the host. Next we need to modify &lt;code>docker-compose.override.yml&lt;/code> to map the &lt;code>./persistent/html&lt;/code> directory into the container.&lt;/p></description></item><item><title>Awesome Hugo Resource - Config Variables Summary</title><link>https://static.grinnell.edu/dlad-blog/posts/022-awesome-hugo-resource-config-variables/</link><pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/022-awesome-hugo-resource-config-variables/</guid><description>&lt;p>I&amp;rsquo;m working remotely from a desk on the 3rd floor of the MSOE (Milwaukee School of Engineering) this morning and just ran into a problem with this blog&amp;hellip; some of my single and double quotes are rendered as &amp;ldquo;curly quotes&amp;rdquo; so I can&amp;rsquo;t effectively copy and paste them into a command line. While searching for a fix I found an &lt;a href="https://gohugobrasil.netlify.com/getting-started/configuration/">awesome Hugo resource&lt;/a>. It lists, among other things, ALL of Hugo&amp;rsquo;s standard configuration variables!&lt;/p>
&lt;p>The settings I&amp;rsquo;m most interested in right now are part of &lt;em>BlackFriday&lt;/em>, Hugo&amp;rsquo;s markdown rendering engine. I&amp;rsquo;m setting them in &lt;code>config.toml&lt;/code> with a section like this:&lt;/p></description></item><item><title>Lessons Learned: Vacationing In Europe</title><link>https://static.grinnell.edu/dlad-blog/posts/020-lesson-learned-vacationing-in-europe/</link><pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/020-lesson-learned-vacationing-in-europe/</guid><description>&lt;p>I just returned from 12-days of vacation and travel that took me unexpectedly to Paris and northern Finland, and as-expected to Norway (nearly all of it), and Iceland (expected, but not as promised). Since this is a professional blog I won&amp;rsquo;t elaborate here, but look for my &amp;ldquo;personal&amp;rdquo; blog at &lt;a href="https://blog.summittdweller.com/posts/">https://blog.summittdweller.com/posts/&lt;/a>, a perpetual work-in-progress. I will briefly comment on two things:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>It IS possible to work remotely from Europe, and even from a cruise at sea, but I found it difficult to be really productive. We cruised aboard the &lt;em>MS Finnmarken&lt;/em>, a &lt;em>Hutigruten&lt;/em> working-boat cruise (they also ferry mail, small cargo, and vehicles between coastal cities, so we made port perhaps 20 times) for 5 days from Kirkenes to Bergen along the coast of Norway. The Wi-Fi on the ship was great for most things, but not suitable for sustained SSH connections like the one I require to effectively work in remote locations. SSH was supported, but only for periods of about 5 minutes at a time&amp;hellip;not long enough to connect and get a lot done.&lt;/p></description></item><item><title>A Dockerized Omeka-S for Development and Staging</title><link>https://static.grinnell.edu/dlad-blog/posts/019-dockerized-omeka-s/</link><pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/019-dockerized-omeka-s/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Update: 24-July-2019&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>The Docksal process outlined here is NOT working reliably. See &lt;a href="https://static.grinnell.edu/dlad-blog/posts/030-dockerized-omeka-s-starting-over/">this new post&lt;/a> for updated info.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>My fork of the &lt;a href="https://github.com/dodeeric/omeka-s-docker">dodeeric/omeka-s-docker&lt;/a> project can be found at &lt;a href="https://github.com/McFateM/omeka-s-docker">McFateM/omeka-s-docker&lt;/a>, and it introduces a new &lt;code>docker-compose.yml&lt;/code> file for spinning &lt;a href="https://omeka.org/s/">Omeka-S&lt;/a> up on any Dockerized server, and a Docksal &lt;code>.docksal&lt;/code> directory to enable local development using &lt;code>fin up&lt;/code>.&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Note&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>What follows is reflected in the &lt;code>README.md&lt;/code> file at &lt;a href="https://github.com/McFateM/omeka-s-docker">https://github.com/McFateM/omeka-s-docker&lt;/a>.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>System requirements for local development of this project currently include:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.docker.com/install/">Docker (Community Edition)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://git-scm.com/book/en/v2/Getting-Started-Installing-Git">Git&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docksal.io">Docksal&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>The workflows mentioned here were created on a Mac workstation and successfully pushed to a staging environment running Ubuntu 16.04.&lt;/p></description></item><item><title>Free Ports 80 and 8080 in OSX</title><link>https://static.grinnell.edu/dlad-blog/posts/018-free-ports-80-and-8080-in-osx/</link><pubDate>Fri, 07 Jun 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/018-free-ports-80-and-8080-in-osx/</guid><description>&lt;p>Ok, this is info I should have documented here a long, long time ago. For many months now this tidbit of wisdom has lived on a post-it in my office. Not the best strategy for someone who works from home and travels a lot.&lt;/p>
&lt;p>Apparently OSX ships with built-in &lt;a href="https://https://httpd.apache.org/">Apache&lt;/a> and/or &lt;a href="https://www.nginx.com/resources/wiki/">NGINX&lt;/a> servers, presumably to facilitate creation of web content that&amp;rsquo;s local to the machine. Well, in my Dockerized workflows those port assignments typically get in the way. When they do, like when I do a &lt;code>fin up&lt;/code> to launch a local development project using &lt;a href="https://docksal.io">Docksal&lt;/a>, I see error messages like the following in my terminal:&lt;/p></description></item><item><title>Drupal Flyover Camp 2019</title><link>https://static.grinnell.edu/dlad-blog/posts/017-drupal-flyover-camp-2019/</link><pubDate>Sat, 01 Jun 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/017-drupal-flyover-camp-2019/</guid><description>&lt;p>The last couple days I attended &lt;a href="https://www.flyovercamp.org/">Drupal Flyover Camp 2019&lt;/a> at UMKC in Kansas City, MO. I picked up on a few tricks and tools that I thought I&amp;rsquo;d mention here, just so I don&amp;rsquo;t forget some of the details.&lt;/p>
&lt;h3 id="friday---day-1">Friday - Day 1&lt;/h3>
&lt;p>My favorite presentation of the day was &lt;a href="http://visual-regression.davidneedham.me">Visual Regression Testing with BackstopJS&lt;/a> by &lt;a href="https://twitter.com/davidneedham">David Needham&lt;/a>. There&amp;rsquo;s some cool tech here that I think could be very useful with things like &lt;a href="https://digital.grinnell.edu">Digital Grinnell&lt;/a>, &lt;a href="https://rootstalk.grinnell.edu">Rootstalk&lt;/a>, and even &lt;a href="https://static.grinnell.edu/blogs/McFateM">this blog&lt;/a>.&lt;/p>
&lt;p>David Needham&amp;rsquo;s presentation also included some live command line work and I was also impressed with his terminal and environment. David used &lt;a href="https://www.iterm2.com/index.html">iTerm2&lt;/a> as a replacement for the standard Mac &amp;ldquo;Terminal&amp;rdquo; app, and combined that with &lt;a href="https://en.wikipedia.org/wiki/Z_shell#Oh_My_Zsh">Z shell or &amp;lsquo;zsh&amp;rsquo;&lt;/a> instead of &amp;lsquo;bash&amp;rsquo;. I have since started using both and am finding lots of nice features that I believe will help me in my work. I&amp;rsquo;ve adopted the &lt;a href="https://github.com/robbyrussell/oh-my-zsh/wiki/themes#bira">bira&lt;/a> theme for &amp;lsquo;zsh&amp;rsquo; and am loving it. David also shared a &lt;a href="https://gist.github.com/davidneedham/4014378">gist&lt;/a> with some nice &amp;lsquo;bash&amp;rsquo; profile improvements.&lt;/p></description></item><item><title>Fixing the VAF Cert Problem</title><link>https://static.grinnell.edu/dlad-blog/posts/016-fixing-vaf-cert-problems/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/016-fixing-vaf-cert-problems/</guid><description>&lt;p>True to form, &lt;strong>just after&lt;/strong> posting my &lt;a href="https://static.grinnell.edu/dlad-blog/posts/015-working-with-lets-encrypt">lengthy description of VAF cert problems&lt;/a> I figured out what was wrong and how to fix it. Naturally, &lt;strong>just after&lt;/strong>.&lt;/p>
&lt;p>So, the root of my &lt;em>VAF&lt;/em> woes stemmed from the fact that &lt;em>Let&amp;rsquo;s Encrypt&lt;/em>, upon my request, had previously issued an untrusted cert for &lt;a href="https://vaf.grinnell.edu">https://vaf.grinnell.edu&lt;/a> (because I used the staging environment during development of this blog), and I was unable to find it or override it with a trusted cert. I was under the impression that in my workflow the cert was being stored inside one of my Docker containers&amp;hellip; and it was. But I couldn&amp;rsquo;t fathom why the untrusted cert seemed to &amp;ldquo;persist&amp;rdquo;, even though I had deleted and regenerated those containers many times. Hmmm&amp;hellip;&lt;/p></description></item><item><title>Working with Let's Encrypt to Generate Certs</title><link>https://static.grinnell.edu/dlad-blog/posts/015-working-with-lets-encrypt/</link><pubDate>Wed, 29 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/015-working-with-lets-encrypt/</guid><description>&lt;p>The workflow I use to create, publish, and update this blog is discussed in three of my earlier posts, namely &lt;a href="https://static.grinnell.edu/dlad-blog/posts/008-docker-bootstrap-workflow">docker-bootstrap Workflow&lt;/a>, &lt;a href="https://static.grinnell.edu/dlad-blog/posts/002-building-this-blog">Building This Blog&lt;/a>, and &lt;a href="https://static.grinnell.edu/dlad-blog/posts/012-developing-this-blog">Developing This Blog&lt;/a>. This workflow works nicely in the case of this blog, but my daughter and I created another site, &lt;a href="https://vaf.grinnell.edu">Visualizing Abolition and Freedom&lt;/a>, frequently referred to as simply &lt;code>VAF&lt;/code>, where the same workflow doesn&amp;rsquo;t quite work. The problem, I believe is with the manner in which I attempted to obtain TLS certs from &lt;em>&lt;a href="https://letsencrypt.org/">Let&amp;rsquo;s Encrypt&lt;/a>&lt;/em>.&lt;/p>
&lt;p>In a nutshell, information security policy here at Grinnell College dictates that a site/server be scanned for vulnerabilities and deemed &amp;ldquo;safe&amp;rdquo; before we open the firewall to allow traffic from outside the campus network. Prudent practice indeed. However, &lt;em>Let&amp;rsquo;s Encrypt&lt;/em> is one such agent and their &lt;a href="https:/letsencrypt.org/docs/challenge-types/">HTTP-01 Challenge&lt;/a> that I use needs access to a site in order to validate any certificate requests I make. So we sort of have a chicken/egg, &lt;em>Catch-22&lt;/em> scenario&amp;hellip; &lt;em>I can&amp;rsquo;t get a trusted cert until the site/server is secure and open, and I can&amp;rsquo;t secure or open the site until I have a trusted cert&lt;/em>.&lt;/p></description></item><item><title>Updates to Atom and Themes</title><link>https://static.grinnell.edu/dlad-blog/posts/014-updates-to-atom-and-themes/</link><pubDate>Sat, 25 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/014-updates-to-atom-and-themes/</guid><description>&lt;p>Recently I made several significant updates to this blog, including changes to my &lt;em>Atom&lt;/em> configuration, and the introduction of a new theme, plus a &amp;ldquo;theme component&amp;rdquo; to help manage &lt;em>search&lt;/em>. Both of these updates are perhaps best described in &lt;a href="https://github.com/McFateM/blogs-McFateM/blob/master/README.md#an-even-easier-update">this portion of the README.md file&lt;/a> in my blog&amp;rsquo;s Github repo so I won&amp;rsquo;t bother with the details here.&lt;/p>
&lt;p>And that’s a wrap. Until next time…&lt;/p></description></item><item><title>New Theme and Search</title><link>https://static.grinnell.edu/dlad-blog/posts/013-new-theme-and-search/</link><pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/013-new-theme-and-search/</guid><description>&lt;p>I recently made changes to this blog that made the old theme &amp;ldquo;un-responsive&amp;rdquo;, it no longer reformatted nicely for small, mobile devices. So I&amp;rsquo;ve switched the theme to use &lt;a href="https://github.com/vaga/hugo-theme-m10c">hugo-theme-m10c&lt;/a>, and I think it&amp;rsquo;s a welcome improvement.&lt;/p>
&lt;p>In addition, I found &lt;a href="https://github.com/kaushalmodi/hugo-search-fuse-js">this repo&lt;/a> which provides an awesome wrapper in the form of a very elegant &lt;a href="https://gohugo.io/themes/theme-components/">Hugo theme component&lt;/a> around some work that I mentioned in an &lt;a href="https://static.grinnell.edu/dlad-blog/blogs/McFateM/posts/011-search-me">earlier post&lt;/a>, namely &lt;a href="https://gist.github.com/eddiewebb/735feb48f50f0ddd65ae5606a1cb41ae#layoutspagesearchhtml">this awesome gist&lt;/a>. Consequently, the &lt;a href="https://markjs.io/">mark.js&lt;/a> keyword highlighting that was &amp;ldquo;broken&amp;rdquo; in my earlier search implementation is now working!&lt;/p></description></item><item><title>Help!</title><link>https://static.grinnell.edu/dlad-blog/add-a-simple-page/</link><pubDate>Thu, 23 May 2019 10:58:27 -0700</pubDate><guid>https://static.grinnell.edu/dlad-blog/add-a-simple-page/</guid><description>&lt;p>&lt;img src="https://static.grinnell.edu/dlad-blog/img/hugo-logo.png" alt="hugo logo">&lt;/p>
&lt;hr/>
Looking to add a simple, single, new page to this site? Have a look at this content in the site's `./content/add-a-simple-page.md` file.
&lt;p>Pay particular attention to the &lt;code>front matter&lt;/code> where the &lt;code>type&lt;/code> and &lt;code>layout&lt;/code> are declared, as well as a list of &lt;code>aliases:&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>aliases:
 - help
 - add-this-page
 - add-a-page-to-the-site
type: page
layout: single
&lt;/code>&lt;/pre>&lt;p>But note that all of these &lt;code>aliases&lt;/code> re-direct to the canonical URL which takes its name, &lt;code>./add-a-simple-page&lt;/code>, from the name of this markdown document, &lt;code>./content/add-a-simple-page.md&lt;/code>.&lt;/p></description></item><item><title>About Me</title><link>https://static.grinnell.edu/dlad-blog/about/</link><pubDate>Thu, 23 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/about/</guid><description>&lt;p>I am &lt;strong>DevOps&lt;/strong> and I love &lt;strong>Hugo&lt;/strong>&amp;hellip; in spite of the fact that the logo colors clash with my blog theme. &amp;#x1f604; &lt;img src="https://static.grinnell.edu/dlad-blog/img/hugo-logo.png" alt="hugo logo">&lt;/p>
&lt;h2 id="more-about-me">More About Me&lt;/h2>
&lt;p>What more do you need to know? Ok, so my official title at &lt;em>Grinnell College&lt;/em> is actually &lt;strong>Digital Library Applications Developer&lt;/strong>.&lt;/p></description></item><item><title>Developing This Blog</title><link>https://static.grinnell.edu/dlad-blog/posts/012-developing-this-blog/</link><pubDate>Mon, 20 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/012-developing-this-blog/</guid><description>&lt;p>I realized today that I previously documented how to &amp;ldquo;begin&amp;rdquo; a blog like this using &lt;a href="https://docksal.io">Docksal&lt;/a> to assist, but I failed to remind myself how to make structural/programming changes to it now that it is well-established. Since I&amp;rsquo;d like to add &lt;a href="https://blevesearch.com/">BleveSearch&lt;/a> to this blog, and similar sites, I need to make some &amp;ldquo;structural&amp;rdquo; changes, and I want to do so locally before pushing them to production.&lt;/p>
&lt;p>The process of making updates like this is basically:&lt;/p>
&lt;ol>
&lt;li>Open a local terminal and navigate to this project. In my case that means &lt;code>cd ~/Projects/blogs-McFateM&lt;/code>.&lt;/li>
&lt;li>If there&amp;rsquo;s no &lt;code>./themes&lt;/code> folder here I need to add one and populate it like so: &lt;code>mkdir themes &amp;amp;&amp;amp; cd $_; git clone https://github.com/digitalcraftsman/hugo-minimalist-theme.git&lt;/code>.&lt;/li>
&lt;li>Now, do a &lt;code>fin up&lt;/code> to get &lt;em>Docksal&lt;/em> restarted. This will provide a local address where you can access the project in a browser, but it &lt;em>WILL NOT WORK!&lt;/em>&lt;/li>
&lt;li>So do &lt;code>fin develop&lt;/code> to get it re-started properly in our &lt;em>Hugo&lt;/em> environment. Just remember that your terminal/shell is running the local development copy, so you have to execute a &lt;code>CTRL-c&lt;/code> in the terminal to terminate it.&lt;/li>
&lt;/ol>
&lt;p>And that’s a wrap. Until next time…&lt;/p></description></item><item><title>Search Me?</title><link>https://static.grinnell.edu/dlad-blog/posts/011-search-me/</link><pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/011-search-me/</guid><description>&lt;p>Yes, yes you can!&lt;/p>
&lt;p>It&amp;rsquo;s not &amp;ldquo;done&amp;rdquo; yet (is anything ever really done?) but you can now &amp;lsquo;search&amp;rsquo; the content, titles, and tags of this blog! For now just visit &lt;a href="../../search/">the new /search page&lt;/a> and enter the term(s) you would like to look for. I&amp;rsquo;ll explain this better once it is &amp;ldquo;done&amp;rdquo;, I hope.&lt;/p>
&lt;p>This wonderful addition to the site comes to you compliments of &lt;a href="https://gist.github.com/eddiewebb/735feb48f50f0ddd65ae5606a1cb41ae#layoutspagesearchhtml">this awesome gist&lt;/a>, with a little hacking by your&amp;rsquo;s truly.&lt;/p>
&lt;p>There&amp;rsquo;s just one problem, perhaps summarized &lt;a href="https://gist.github.com/eddiewebb/735feb48f50f0ddd65ae5606a1cb41ae#gistcomment-2921320">in my comment on the gist&lt;/a> posted moments ago. The original comment says:&lt;/p></description></item><item><title>Updating This Blog with Atom</title><link>https://static.grinnell.edu/dlad-blog/posts/010-updating-this-blog-with-atom/</link><pubDate>Thu, 16 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/010-updating-this-blog-with-atom/</guid><description>&lt;p>So I have my &lt;a href="https://atom.io/">Atom&lt;/a> config stored in a &lt;a href="https://github.com/SummittDweller/Atom-Config">Github repo&lt;/a> so that I can easily keep &lt;em>Atom&lt;/em> in-sync between the various platforms I use here and at home. Today I added the &lt;a href="https://atom.io/packages/atom-shell-commands">atom-shell-commands&lt;/a> package to my &lt;em>Atom&lt;/em> config and have configured it with a “command” that takes care of updating my blog when I add a new post (like this one).&lt;/p>
&lt;p>The command configuration in my &lt;code>.atom/config.cson&lt;/code> looks like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;atom-shell-commands&amp;#34;:
 commands: [
 {
 name: &amp;#34;Update My Blog&amp;#34;
 command: &amp;#34;./update-blog.sh&amp;#34;
 options:
 cwd: &amp;#34;{ProjectDir}&amp;#34;
 keymap: &amp;#39;ctrl-2&amp;#39;
 save: &amp;#34;True&amp;#34;
 }
 ]
&lt;/code>&lt;/pre>&lt;p>The &lt;code>./update-blog.sh&lt;/code> script referenced in the configuration contains:&lt;/p></description></item><item><title>docker-bootstrap Workflow</title><link>https://static.grinnell.edu/dlad-blog/posts/008-docker-bootstrap-workflow/</link><pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/008-docker-bootstrap-workflow/</guid><description>&lt;p>This post is as much about adding an image to a &amp;ldquo;live&amp;rdquo; &lt;em>Markdown&lt;/em> document (this blog post), as it is about my &lt;a href="https://github.com/McFateM/docker-bootstrap">docker-bootstrap&lt;/a> workflow.&lt;/p>
&lt;p>The workflow is perhaps best described and summarized in a &lt;a href="https://github.com/McFateM/docker-bootstrap/blob/master/docker-bootstrap%20Diagram.pdf">diagram&lt;/a> I recently created, and exported to a PDF. It should be self-explanatory, and with any luck you can see it below&amp;hellip;&lt;/p>
&lt;p>Posting an &amp;ldquo;inline&amp;rdquo; image into a &lt;em>Markdown&lt;/em> document is pretty easy using syntax like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png &amp;#34;Logo Title Text 1&amp;#34;)
&lt;/code>&lt;/pre>&lt;p>But, does that work if the &amp;ldquo;image&amp;rdquo; is a PDF? Let&amp;rsquo;s see&amp;hellip; nope, not directly.&lt;/p></description></item><item><title>Testing SSL Vulnerabilities</title><link>https://static.grinnell.edu/dlad-blog/posts/009-testssl-on-dgdockerx/</link><pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/009-testssl-on-dgdockerx/</guid><description>&lt;p>This is a subject that&amp;rsquo;s grabbed my attention recently here at Grinnell College. Specifically, I wanted a way to run my own SSL vulnerability scans of servers inside the campus firewall, something that outside agents could not do effectively. About a month ago I came upon a tool for this task, &lt;a href="https://github.com/drwetter/testssl.sh">testssl.sh&lt;/a>, and I&amp;rsquo;ve installed it on my Docker staging server, &lt;em>DGDockerX&lt;/em>.&lt;/p>
&lt;p>The tool resides in the &lt;em>islandora&lt;/em> user&amp;rsquo;s home directory on &lt;em>DGDockerX&lt;/em> and I&amp;rsquo;m able to run it from a terminal open to that node like so:&lt;/p></description></item><item><title>Bleve Search - Note to Self</title><link>https://static.grinnell.edu/dlad-blog/posts/006-implementing-bleve-search/</link><pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/006-implementing-bleve-search/</guid><description>&lt;p>Had a conversation about lots of topics this afternoon and bumped into &lt;a href="https://blevesearch.com/">bleve&lt;/a>, along the way, including a discussion about &lt;a href="https://blevesearch.com/news/Site-Search/">adding search capability to a Hugo site&lt;/a>. &lt;em>bleeeve&lt;/em> is based on the &lt;a href="https://golang.org">Go programming language&lt;/a>, as is Hugo, so I hope implementation is super simple.&lt;/p>
&lt;p>I think in the near future I&amp;rsquo;ll have a look at adding such a feature to this blog, and perhaps to the &lt;a href="https://vaf.grinnell.edu">Visualizing Abolition and Freedom&lt;/a> site too!&lt;/p>
&lt;p>In conversation we also bumped into &lt;a href="https://lunrjs.com">Lunr JS&lt;/a> and I might consider attempting to implement it instead. But &lt;em>Lunr&lt;/em> is all Javascript and I&amp;rsquo;d rather steer clear of that if at all possible.&lt;/p></description></item><item><title>Removing Traefik's Weak Cipher Suites</title><link>https://static.grinnell.edu/dlad-blog/posts/005-removing-traefik-weak-ciphers/</link><pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/005-removing-traefik-weak-ciphers/</guid><description>&lt;p>Most of the servers I deploy to and manage here at Grinnell College are now &amp;ldquo;Dockerized&amp;rdquo;, and all of those use &lt;a href="https://traefik.io/">Traefik&lt;/a> to manage traffic, of course. Before a web app or server can be opened for access to the world here, it has to pass a vulnerability scan, and I&amp;rsquo;m not privy to the specifics of that scan. However, I do know that &amp;ldquo;weak cipher suites&amp;rdquo; are a common source of failure among my newest servers. It took a couple of weeks of searching, and trial/error solution attempts to identify the nature and specific source of these weaknesses, and to eradicate them. In my case &lt;a href="https://traefik.io/">Traefik&lt;/a> was the &amp;ldquo;source&amp;rdquo; and the solution was/is to add the following configuration in the applicable &lt;em>docker-compose.yml&lt;/em> files, or &lt;em>docker run&amp;hellip;&lt;/em> command:&lt;/p></description></item><item><title>Bypassing Docker Hub Auto-Build</title><link>https://static.grinnell.edu/dlad-blog/posts/004-bypassing-auto-build/</link><pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/004-bypassing-auto-build/</guid><description>&lt;p>One of the really cool things I like about the workflow documented in &lt;a href="https://jtreminio.com/blog/setting-up-a-static-site-with-hugo-and-push-to-deploy/">Juan Treminio&amp;rsquo;s blog post&lt;/a> is the ability to setup auto-build in Docker Hub. Unfortunately, that comes at a cost. Docker Hub&amp;rsquo;s &amp;lsquo;free&amp;rsquo; account option will support only one parallel auto-build, so if you have more than one project you&amp;rsquo;d like to auto-build at Docker Hub you&amp;rsquo;ll need to pay for an account. The current cost is, I think, $7/month for an account that will handle up to 5 parallel auto-build projects. That&amp;rsquo;s not horrible, but for now I just have this one project with a few more that are on-the-horizon. So, in the case of this blog I&amp;rsquo;m going to bypass auto-build and just document the process I&amp;rsquo;ll use to update and push this blog to production. I touched on it in &lt;a href="https://static.grinnell.edu/dlad-blog/post/pushing-to-production/">my previous post&lt;/a> and pertinent portions of that post are reproduced here&amp;hellip;&lt;/p></description></item><item><title>Pushing This Blog to Production</title><link>https://static.grinnell.edu/dlad-blog/posts/003-pushing-to-production/</link><pubDate>Tue, 20 Nov 2018 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/003-pushing-to-production/</guid><description>&lt;p>&lt;a href="https://jtreminio.com/blog/setting-up-a-static-site-with-hugo-and-push-to-deploy/">Juan Treminio&amp;rsquo;s blog post&lt;/a> does a nice job of covering the steps necessary to engage &lt;a href="https://github.com/v2tec/watchtower">Watchtower&lt;/a>, &lt;a href="https://github.com/">GitHub&lt;/a>, and an automated build configuration in &lt;a href="https://hub.docker.com/">Docker Hub&lt;/a>. The entire process can be used to push your initial &lt;a href="https://gohugo.io/">Hugo&lt;/a> project to production, watch for changes in your GitHub project repo, compile the changes, build a new Docker image, and automatically push it to production. Like I said, it&amp;rsquo;s an awesome workflow, and there&amp;rsquo;s no need to repeat much of it here. However, I will provide some insight into issues we encountered, and the solutions we employed.&lt;/p></description></item><item><title>Building this Blog with Hugo, Docker, Docksal, and More</title><link>https://static.grinnell.edu/dlad-blog/posts/002-building-this-blog/</link><pubDate>Mon, 19 Nov 2018 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/002-building-this-blog/</guid><description>&lt;p>In this post I will attempt to chronicle the steps my associates and I took to complete the configuration of &lt;code>static.grinnell.edu&lt;/code>, and to eventually create this blog following &lt;a href="https://jtreminio.com/">Juan Treminio&amp;rsquo;s&lt;/a> lead. Small portions of Juan&amp;rsquo;s &lt;a href="https://jtreminio.com/blog/setting-up-a-static-site-with-hugo-and-push-to-deploy/">blog post&lt;/a> are reproduced here, with permission, so that you can follow along in his work. Those passages appear with a colored background like so:&lt;/p>

&lt;div class="original">&lt;p>&amp;hellip;I will walk you through the complete process of setting up a static
website that you can deploy new versions with a simple &lt;code>git push&lt;/code>.&lt;/p></description></item><item><title>A Blog is Born</title><link>https://static.grinnell.edu/dlad-blog/posts/001-a-blog-is-born/</link><pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/001-a-blog-is-born/</guid><description>&lt;p>Have you ever wondered how a blog is born? The story behind this blog begins with my interest in stepping back from the CMS world, primarily &lt;a href="https://www.drupal.org/">Drupal&lt;/a>, to discover the joys of static site generation. The journey begins in earnest at the &lt;a href="https://www.diglib.org/dlf-events/2016forum/">2016 DLF Forum: Milwaukee&lt;/a> on the eve of the United States&amp;rsquo; 2016 national election, when all the buzz that wasn&amp;rsquo;t political, was about building static web sites, and &lt;a href="https://jekyllrb.com/">Jekyll&lt;/a>.&lt;/p>
&lt;p>A few weeks after the DLF Forum this server was born, thanks to the my colleagues in the &lt;a href="https://www.grinnell.edu/academics/libraries">Grinnell College (GC) Libraries&lt;/a>, and Grinnell&amp;rsquo;s &lt;a href="https://www.grinnell.edu/about/offices-services/its">Information Technology Services (ITS)&lt;/a> department. &lt;em>JekyllDev&lt;/em> was its name, and Jelkyll development was its intended purpose. Life and work quickly got in the way of interests, as they are apt to do, and &lt;em>JekyllDev&lt;/em> subsequently sat idle for nearly 2 years. During that span my work offered opportunities to learn about &amp;lsquo;DevOps&amp;rsquo; technologies like &lt;a href="https://www.ansible.com/">Ansible&lt;/a>, &lt;a href="https://www.vagrantup.com/">Vagrant&lt;/a>, &lt;a href="https://www.docker.com/">Docker&lt;/a>, and ultimately &lt;a href="https://docksal.io/">Docksal&lt;/a>.&lt;/p></description></item><item><title>Posts</title><link>https://static.grinnell.edu/dlad-blog/posts/_index/</link><pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/posts/_index/</guid><description/></item><item><title>Site Search</title><link>https://static.grinnell.edu/dlad-blog/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://static.grinnell.edu/dlad-blog/search/</guid><description/></item></channel></rss>